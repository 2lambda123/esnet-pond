!function(e){function n(i){if(t[i])return t[i].exports;var o=t[i]={exports:{},id:i,loaded:!1};return e[i].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}var t={};return n.m=e,n.c=t,n.p="/pond/",n(0)}(function(e){for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n))switch(typeof e[n]){case"function":break;case"object":e[n]=function(n){var t=n.slice(1),i=e[n[0]];return function(e,n,o){i.apply(this,[e,n,o].concat(t))}}(e[n]);break;default:e[n]=e[e[n]]}return e}([function(e,n,t){t(205),e.exports=t(207)},function(e,n,t){"use strict";e.exports=t(247)},function(e,n,t){"use strict";function i(e,n,t,i,o,r,a,s){if(!e){var l;if(void 0===n)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[t,i,o,r,a,s],u=0;l=new Error(n.replace(/%s/g,function(){return c[u++]})),l.name="Invariant Violation"}throw l.framesToPop=1,l}}e.exports=i},function(e,n,t){"use strict";var i=t(14),o=i;e.exports=o},function(e,n){"use strict";function t(e,n){if(null==e)throw new TypeError("Object.assign target cannot be null or undefined");for(var t=Object(e),i=Object.prototype.hasOwnProperty,o=1;o<arguments.length;o++){var r=arguments[o];if(null!=r){var a=Object(r);for(var s in a)i.call(a,s)&&(t[s]=a[s])}}return t}e.exports=t},function(e,n,t){"use strict";var i=t(1),o=t(135).Parser,r=t(131),a=new o,s=i.PropTypes,l=i.createClass({displayName:"ReactMarkdown",propTypes:{className:s.string,source:s.string.isRequired,containerTagName:s.string,sourcePos:s.bool,escapeHtml:s.bool,skipHtml:s.bool,softBreak:s.string,allowNode:s.func,allowedTypes:s.array,disallowedTypes:s.array},getDefaultProps:function(){return{containerTagName:"div"}},render:function(){var e={},n=new r(this.props),t=a.parse(this.props.source||"");return this.props.className&&(e.className=this.props.className),i.createElement.apply(i,[this.props.containerTagName,e].concat(n.render(t)))}});e.exports=l},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n){if(n.indexOf("deprecated")!==-1){if(l[n])return;l[n]=!0}n="[react-router] "+n;for(var t=arguments.length,i=Array(t>2?t-2:0),o=2;o<t;o++)i[o-2]=arguments[o];s.default.apply(void 0,[e,n].concat(i))}function r(){l={}}n.__esModule=!0,n.default=o,n._resetWarned=r;var a=t(204),s=i(a),l={}},function(e,n){"use strict";var t=!("undefined"==typeof window||!window.document||!window.document.createElement),i={canUseDOM:t,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:t&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:t&&!!window.screen,isInWorker:!t};e.exports=i},function(e,n,t){"use strict";var i=function(e,n,t,i,o,r,a,s){if(!e){var l;if(void 0===n)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[t,i,o,r,a,s],u=0;l=new Error(n.replace(/%s/g,function(){return c[u++]})),l.name="Invariant Violation"}throw l.framesToPop=1,l}};e.exports=i},function(e,n,t){"use strict";function i(e,n){for(var t=Math.min(e.length,n.length),i=0;i<t;i++)if(e.charAt(i)!==n.charAt(i))return i;return e.length===n.length?-1:t}function o(e){return e?e.nodeType===K?e.documentElement:e.firstChild:null}function r(e){var n=o(e);return n&&X.getID(n)}function a(e){var n=s(e);if(n)if(U.hasOwnProperty(n)){var t=U[n];t!==e&&(d(t,n)?L(!1):void 0,U[n]=e)}else U[n]=e;return n}function s(e){return e&&e.getAttribute&&e.getAttribute(q)||""}function l(e,n){var t=s(e);t!==n&&delete U[t],e.setAttribute(q,n),U[n]=e}function c(e){return U.hasOwnProperty(e)&&d(U[e],e)||(U[e]=X.findReactNodeByID(e)),U[e]}function u(e){var n=R.get(e)._rootNodeID;return S.isNullComponentID(n)?null:(U.hasOwnProperty(n)&&d(U[n],n)||(U[n]=X.findReactNodeByID(n)),U[n])}function d(e,n){if(e){s(e)!==n?L(!1):void 0;var t=X.findReactContainerForID(n);if(t&&O(t,e))return!0}return!1}function p(e){delete U[e]}function h(e){var n=U[e];return!(!n||!d(n,e))&&void(Y=n)}function f(e){Y=null,x.traverseAncestors(e,h);var n=Y;return Y=null,n}function m(e,n,t,i,o,r){E.useCreateElement&&(r=N({},r),t.nodeType===K?r[V]=t:r[V]=t.ownerDocument);var a=k.mountComponent(e,n,i,r);e._renderedComponent._topLevelWrapper=e,X._mountImageIntoNode(a,t,o,i)}function g(e,n,t,i,o){var r=I.ReactReconcileTransaction.getPooled(i);r.perform(m,null,e,n,t,r,i,o),I.ReactReconcileTransaction.release(r)}function v(e,n){for(k.unmountComponent(e),n.nodeType===K&&(n=n.documentElement);n.lastChild;)n.removeChild(n.lastChild)}function y(e){var n=r(e);return!!n&&n!==x.getReactRootIDFromNodeID(n)}function b(e){for(;e&&e.parentNode!==e;e=e.parentNode)if(1===e.nodeType){var n=s(e);if(n){var t,i=x.getReactRootIDFromNodeID(n),o=e;do if(t=s(o),o=o.parentNode,null==o)return null;while(t!==i);if(o===z[i])return e}}return null}var T=t(31),w=t(43),E=(t(16),t(110)),C=t(10),S=t(117),x=t(32),R=t(37),_=t(120),P=t(11),k=t(26),A=t(64),I=t(12),N=t(4),D=t(33),O=t(79),M=t(71),L=t(2),j=t(50),B=t(74),q=(t(76),t(3),T.ID_ATTRIBUTE_NAME),U={},F=1,K=9,H=11,V="__ReactMount_ownerDocument$"+Math.random().toString(36).slice(2),W={},z={},G=[],Y=null,J=function(){};J.prototype.isReactComponent={},J.prototype.render=function(){return this.props};var X={TopLevelWrapper:J,_instancesByReactRootID:W,scrollMonitor:function(e,n){n()},_updateRootComponent:function(e,n,t,i){return X.scrollMonitor(t,function(){A.enqueueElementInternal(e,n),i&&A.enqueueCallbackInternal(e,i)}),e},_registerComponent:function(e,n){!n||n.nodeType!==F&&n.nodeType!==K&&n.nodeType!==H?L(!1):void 0,w.ensureScrollValueMonitoring();var t=X.registerContainer(n);return W[t]=e,t},_renderNewRootComponent:function(e,n,t,i){var o=M(e,null),r=X._registerComponent(o,n);return I.batchedUpdates(g,o,r,n,t,i),o},renderSubtreeIntoContainer:function(e,n,t,i){return null==e||null==e._reactInternalInstance?L(!1):void 0,X._renderSubtreeIntoContainer(e,n,t,i)},_renderSubtreeIntoContainer:function(e,n,t,i){C.isValidElement(n)?void 0:L(!1);var a=new C(J,null,null,null,null,null,n),l=W[r(t)];if(l){var c=l._currentElement,u=c.props;if(B(u,n)){var d=l._renderedComponent.getPublicInstance(),p=i&&function(){i.call(d)};return X._updateRootComponent(l,a,t,p),d}X.unmountComponentAtNode(t)}var h=o(t),f=h&&!!s(h),m=y(t),g=f&&!l&&!m,v=X._renderNewRootComponent(a,t,g,null!=e?e._reactInternalInstance._processChildContext(e._reactInternalInstance._context):D)._renderedComponent.getPublicInstance();return i&&i.call(v),v},render:function(e,n,t){return X._renderSubtreeIntoContainer(null,e,n,t)},registerContainer:function(e){var n=r(e);return n&&(n=x.getReactRootIDFromNodeID(n)),n||(n=x.createReactRootID()),z[n]=e,n},unmountComponentAtNode:function(e){!e||e.nodeType!==F&&e.nodeType!==K&&e.nodeType!==H?L(!1):void 0;var n=r(e),t=W[n];if(!t){var i=(y(e),s(e));i&&i===x.getReactRootIDFromNodeID(i);return!1}return I.batchedUpdates(v,t,e),delete W[n],delete z[n],!0},findReactContainerForID:function(e){var n=x.getReactRootIDFromNodeID(e),t=z[n];return t},findReactNodeByID:function(e){var n=X.findReactContainerForID(e);return X.findComponentRoot(n,e)},getFirstReactDOM:function(e){return b(e)},findComponentRoot:function(e,n){var t=G,i=0,o=f(n)||e;for(t[0]=o.firstChild,t.length=1;i<t.length;){for(var r,a=t[i++];a;){var s=X.getID(a);s?n===s?r=a:x.isAncestorIDOf(s,n)&&(t.length=i=0,t.push(a.firstChild)):t.push(a.firstChild),a=a.nextSibling}if(r)return t.length=0,r}t.length=0,L(!1)},_mountImageIntoNode:function(e,n,t,r){if(!n||n.nodeType!==F&&n.nodeType!==K&&n.nodeType!==H?L(!1):void 0,t){var a=o(n);if(_.canReuseMarkup(e,a))return;var s=a.getAttribute(_.CHECKSUM_ATTR_NAME);a.removeAttribute(_.CHECKSUM_ATTR_NAME);var l=a.outerHTML;a.setAttribute(_.CHECKSUM_ATTR_NAME,s);var c=e,u=i(c,l);" (client) "+c.substring(u-20,u+20)+"\n (server) "+l.substring(u-20,u+20);n.nodeType===K?L(!1):void 0}if(n.nodeType===K?L(!1):void 0,r.useCreateElement){for(;n.lastChild;)n.removeChild(n.lastChild);n.appendChild(e)}else j(n,e)},ownerDocumentContextKey:V,getReactRootID:r,getID:a,setID:l,getNode:c,getNodeFromInstance:u,isValid:d,purgeID:p};P.measureMethods(X,"ReactMount",{_renderNewRootComponent:"_renderNewRootComponent",_mountImageIntoNode:"_mountImageIntoNode"}),e.exports=X},function(e,n,t){"use strict";var i=t(16),o=t(4),r=(t(48),"function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103),a={key:!0,ref:!0,__self:!0,__source:!0},s=function(e,n,t,i,o,a,s){var l={$$typeof:r,type:e,key:n,ref:t,props:s,_owner:a};return l};s.createElement=function(e,n,t){var o,r={},l=null,c=null,u=null,d=null;if(null!=n){c=void 0===n.ref?null:n.ref,l=void 0===n.key?null:""+n.key,u=void 0===n.__self?null:n.__self,d=void 0===n.__source?null:n.__source;for(o in n)n.hasOwnProperty(o)&&!a.hasOwnProperty(o)&&(r[o]=n[o])}var p=arguments.length-2;if(1===p)r.children=t;else if(p>1){for(var h=Array(p),f=0;f<p;f++)h[f]=arguments[f+2];r.children=h}if(e&&e.defaultProps){var m=e.defaultProps;for(o in m)"undefined"==typeof r[o]&&(r[o]=m[o])}return s(e,l,c,u,d,i.current,r)},s.createFactory=function(e){var n=s.createElement.bind(null,e);return n.type=e,n},s.cloneAndReplaceKey=function(e,n){var t=s(e.type,n,e.ref,e._self,e._source,e._owner,e.props);return t},s.cloneAndReplaceProps=function(e,n){var t=s(e.type,e.key,e.ref,e._self,e._source,e._owner,n);return t},s.cloneElement=function(e,n,t){var r,l=o({},e.props),c=e.key,u=e.ref,d=e._self,p=e._source,h=e._owner;if(null!=n){void 0!==n.ref&&(u=n.ref,h=i.current),void 0!==n.key&&(c=""+n.key);for(r in n)n.hasOwnProperty(r)&&!a.hasOwnProperty(r)&&(l[r]=n[r])}var f=arguments.length-2;if(1===f)l.children=t;else if(f>1){for(var m=Array(f),g=0;g<f;g++)m[g]=arguments[g+2];l.children=m}return s(e.type,c,u,d,p,h,l)},s.isValidElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},e.exports=s},function(e,n,t){"use strict";function i(e,n,t){return t}var o={enableMeasure:!1,storedMeasure:i,measureMethods:function(e,n,t){},measure:function(e,n,t){return t},injection:{injectMeasure:function(e){o.storedMeasure=e}}};e.exports=o},function(e,n,t){"use strict";function i(){R.ReactReconcileTransaction&&T?void 0:g(!1)}function o(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=u.getPooled(),this.reconcileTransaction=R.ReactReconcileTransaction.getPooled(!1)}function r(e,n,t,o,r,a){i(),T.batchedUpdates(e,n,t,o,r,a)}function a(e,n){return e._mountOrder-n._mountOrder}function s(e){var n=e.dirtyComponentsLength;n!==v.length?g(!1):void 0,v.sort(a);for(var t=0;t<n;t++){var i=v[t],o=i._pendingCallbacks;if(i._pendingCallbacks=null,h.performUpdateIfNecessary(i,e.reconcileTransaction),o)for(var r=0;r<o.length;r++)e.callbackQueue.enqueue(o[r],i.getPublicInstance())}}function l(e){return i(),T.isBatchingUpdates?void v.push(e):void T.batchedUpdates(l,e)}function c(e,n){T.isBatchingUpdates?void 0:g(!1),y.enqueue(e,n),b=!0}var u=t(58),d=t(21),p=t(11),h=t(26),f=t(47),m=t(4),g=t(2),v=[],y=u.getPooled(),b=!1,T=null,w={initialize:function(){this.dirtyComponentsLength=v.length},close:function(){this.dirtyComponentsLength!==v.length?(v.splice(0,this.dirtyComponentsLength),S()):v.length=0}},E={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},C=[w,E];m(o.prototype,f.Mixin,{getTransactionWrappers:function(){return C},destructor:function(){this.dirtyComponentsLength=null,u.release(this.callbackQueue),this.callbackQueue=null,R.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(e,n,t){return f.Mixin.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,n,t)}}),d.addPoolingTo(o);var S=function(){for(;v.length||b;){if(v.length){var e=o.getPooled();e.perform(s,null,e),o.release(e)}if(b){b=!1;var n=y;y=u.getPooled(),n.notifyAll(),u.release(n)}}};S=p.measure("ReactUpdates","flushBatchedUpdates",S);var x={injectReconcileTransaction:function(e){e?void 0:g(!1),R.ReactReconcileTransaction=e},injectBatchingStrategy:function(e){e?void 0:g(!1),"function"!=typeof e.batchedUpdates?g(!1):void 0,"boolean"!=typeof e.isBatchingUpdates?g(!1):void 0,T=e}},R={ReactReconcileTransaction:null,batchedUpdates:r,enqueueUpdate:l,flushBatchedUpdates:S,injection:x,asap:c};e.exports=R},function(e,n,t){"use strict";var i=function(){};e.exports=i},function(e,n){"use strict";function t(e){return function(){return e}}function i(){}i.thatReturns=t,i.thatReturnsFalse=t(!1),i.thatReturnsTrue=t(!0),i.thatReturnsNull=t(null),i.thatReturnsThis=function(){return this},i.thatReturnsArgument=function(e){return e},e.exports=i},function(e,n,t){"use strict";var i=t(39),o=i({bubbled:null,captured:null}),r=i({topAbort:null,topBlur:null,topCanPlay:null,topCanPlayThrough:null,topChange:null,topClick:null,topCompositionEnd:null,topCompositionStart:null,topCompositionUpdate:null,topContextMenu:null,topCopy:null,topCut:null,topDoubleClick:null,topDrag:null,topDragEnd:null,topDragEnter:null,topDragExit:null,topDragLeave:null,topDragOver:null,topDragStart:null,topDrop:null,topDurationChange:null,topEmptied:null,topEncrypted:null,topEnded:null,topError:null,topFocus:null,topInput:null,topKeyDown:null,topKeyPress:null,topKeyUp:null,topLoad:null,topLoadedData:null,topLoadedMetadata:null,topLoadStart:null,topMouseDown:null,topMouseMove:null,topMouseOut:null,topMouseOver:null,topMouseUp:null,topPaste:null,topPause:null,topPlay:null,topPlaying:null,topProgress:null,topRateChange:null,topReset:null,topScroll:null,topSeeked:null,topSeeking:null,topSelectionChange:null,topStalled:null,topSubmit:null,topSuspend:null,topTextInput:null,topTimeUpdate:null,topTouchCancel:null,topTouchEnd:null,topTouchMove:null,topTouchStart:null,topVolumeChange:null,topWaiting:null,topWheel:null}),a={topLevelTypes:r,PropagationPhases:o};e.exports=a},function(e,n){"use strict";var t={current:null};e.exports=t},function(e,n){"use strict";var t=function(e){var n;for(n in e)if(e.hasOwnProperty(n))return n;return null};e.exports=t},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){return null==e||p.default.isValidElement(e)}function r(e){return o(e)||Array.isArray(e)&&e.every(o)}function a(e,n){return u({},e,n)}function s(e){var n=e.type,t=a(n.defaultProps,e.props);if(t.children){var i=l(t.children,t);i.length&&(t.childRoutes=i),delete t.children}return t}function l(e,n){var t=[];return p.default.Children.forEach(e,function(e){if(p.default.isValidElement(e))if(e.type.createRouteFromReactElement){var i=e.type.createRouteFromReactElement(e,n);i&&t.push(i)}else t.push(s(e))}),t}function c(e){return r(e)?e=l(e):e&&!Array.isArray(e)&&(e=[e]),e}n.__esModule=!0;var u=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.isReactChildren=r,n.createRouteFromReactElement=s,n.createRoutesFromReactChildren=l,n.createRoutes=c;var d=t(1),p=i(d)},function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={highlightCodeBlocks:function(){for(var e=document.querySelectorAll("pre code"),n=0;n<e.length;n++)e[n].classList.contains("hljs")||window.hljs.highlightBlock(e[n])},componentDidMount:function(){this.highlightCodeBlocks()},componentDidUpdate:function(){this.highlightCodeBlocks()}}},function(e,n,t){e.exports=t.p+"static/media/pond.158aa7de.png"},function(e,n,t){"use strict";var i=t(2),o=function(e){var n=this;if(n.instancePool.length){var t=n.instancePool.pop();return n.call(t,e),t}return new n(e)},r=function(e,n){var t=this;if(t.instancePool.length){var i=t.instancePool.pop();return t.call(i,e,n),i}return new t(e,n)},a=function(e,n,t){var i=this;if(i.instancePool.length){var o=i.instancePool.pop();return i.call(o,e,n,t),o}return new i(e,n,t)},s=function(e,n,t,i){var o=this;if(o.instancePool.length){var r=o.instancePool.pop();return o.call(r,e,n,t,i),r}return new o(e,n,t,i)},l=function(e,n,t,i,o){var r=this;if(r.instancePool.length){var a=r.instancePool.pop();return r.call(a,e,n,t,i,o),a}return new r(e,n,t,i,o)},c=function(e){var n=this;e instanceof n?void 0:i(!1),e.destructor(),n.instancePool.length<n.poolSize&&n.instancePool.push(e)},u=10,d=o,p=function(e,n){var t=e;return t.instancePool=[],t.getPooled=n||d,t.poolSize||(t.poolSize=u),t.release=c,t},h={addPoolingTo:p,oneArgumentPooler:o,twoArgumentPooler:r,threeArgumentPooler:a,fourArgumentPooler:s,fiveArgumentPooler:l};e.exports=h},function(e,n){"use strict";n.__esModule=!0;var t="PUSH";n.PUSH=t;var i="REPLACE";n.REPLACE=i;var o="POP";n.POP=o,n.default={PUSH:t,REPLACE:i,POP:o}},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){var n=e.match(/^https?:\/\/[^\/]*/);return null==n?e:e.substring(n[0].length)}function r(e){var n=o(e),t="",i="",r=n.indexOf("#");r!==-1&&(i=n.substring(r),n=n.substring(0,r));var a=n.indexOf("?");return a!==-1&&(t=n.substring(a),n=n.substring(0,a)),""===n&&(n="/"),{pathname:n,search:t,hash:i}}n.__esModule=!0,n.extractPath=o,n.parsePath=r;var a=t(13);i(a)},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n){return function(){return e.apply(this,arguments)}}n.__esModule=!0;var r=t(13);i(r);n.default=o,e.exports=n.default},function(e,n,t){"use strict";function i(e,n,t){if(e[n])return new Error("<"+t+'> should not have a "'+n+'" prop')}n.__esModule=!0,n.routes=n.route=n.components=n.component=n.history=void 0,n.falsy=i;var o=t(1),r=o.PropTypes.func,a=o.PropTypes.object,s=o.PropTypes.arrayOf,l=o.PropTypes.oneOfType,c=o.PropTypes.element,u=o.PropTypes.shape,d=o.PropTypes.string,p=(n.history=u({listen:r.isRequired,push:r.isRequired,replace:r.isRequired,go:r.isRequired,goBack:r.isRequired,goForward:r.isRequired}),n.component=l([r,d])),h=(n.components=l([p,a]),n.route=l([a,c]));n.routes=l([h,s(h)])},function(e,n,t){"use strict";function i(){o.attachRefs(this,this._currentElement)}var o=t(266),r={mountComponent:function(e,n,t,o){var r=e.mountComponent(n,t,o);return e._currentElement&&null!=e._currentElement.ref&&t.getReactMountReady().enqueue(i,e),r},unmountComponent:function(e){o.detachRefs(e,e._currentElement),e.unmountComponent()},receiveComponent:function(e,n,t,r){var a=e._currentElement;if(n!==a||r!==e._context){var s=o.shouldUpdateRefs(a,n);s&&o.detachRefs(e,a),e.receiveComponent(n,t,r),s&&e._currentElement&&null!=e._currentElement.ref&&t.getReactMountReady().enqueue(i,e)}},performUpdateIfNecessary:function(e,n){e.performUpdateIfNecessary(n)}};e.exports=r},function(e,n,t){"use strict";function i(e,n,t,i){this.dispatchConfig=e,this.dispatchMarker=n,this.nativeEvent=t;var o=this.constructor.Interface;for(var r in o)if(o.hasOwnProperty(r)){var s=o[r];s?this[r]=s(t):"target"===r?this.target=i:this[r]=t[r]}var l=null!=t.defaultPrevented?t.defaultPrevented:t.returnValue===!1;l?this.isDefaultPrevented=a.thatReturnsTrue:this.isDefaultPrevented=a.thatReturnsFalse,this.isPropagationStopped=a.thatReturnsFalse}var o=t(21),r=t(4),a=t(14),s=(t(3),{type:null,target:null,currentTarget:a.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null});r(i.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():e.returnValue=!1,this.isDefaultPrevented=a.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():e.cancelBubble=!0,this.isPropagationStopped=a.thatReturnsTrue)},persist:function(){this.isPersistent=a.thatReturnsTrue},isPersistent:a.thatReturnsFalse,destructor:function(){var e=this.constructor.Interface;for(var n in e)this[n]=null;this.dispatchConfig=null,this.dispatchMarker=null,this.nativeEvent=null}}),i.Interface=s,i.augmentClass=function(e,n){var t=this,i=Object.create(t.prototype);r(i,e.prototype),e.prototype=i,e.prototype.constructor=e,e.Interface=r({},t.Interface,n),e.augmentClass=t.augmentClass,o.addPoolingTo(e,o.fourArgumentPooler)},o.addPoolingTo(i,o.fourArgumentPooler),e.exports=i},function(e,n,t){"use strict";var i=t(163),o=t(162),r=92,a=t(77).decodeHTML,s="&(?:#x[a-f0-9]{1,8}|#[0-9]{1,8}|[a-z][a-z0-9]{1,31});",l="[A-Za-z][A-Za-z0-9-]*",c="[a-zA-Z_:][a-zA-Z0-9:._-]*",u="[^\"'=<>`\\x00-\\x20]+",d="'[^']*'",p='"[^"]*"',h="(?:"+u+"|"+d+"|"+p+")",f="(?:\\s*=\\s*"+h+")",m="(?:\\s+"+c+f+"?)",g="<"+l+m+"*\\s*/?>",v="</"+l+"\\s*[>]",y="<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->",b="[<][?].*?[?][>]",T="<![A-Z]+\\s+[^>]*>",w="<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",E="(?:"+g+"|"+v+"|"+y+"|"+b+"|"+T+"|"+w+")",C=new RegExp("^"+E,"i"),S=/[\\&]/,x="[!\"#$%&'()*+,./:;<=>?@[\\\\\\]^_`{|}~-]",R=new RegExp("\\\\"+x+"|"+s,"gi"),_='[&<>"]',P=new RegExp(_,"g"),k=new RegExp(s+"|"+_,"gi"),A=function(e){return e.charCodeAt(0)===r?e.charAt(1):a(e)},I=function(e){return S.test(e)?e.replace(R,A):e},N=function(e){try{return i(o(e))}catch(n){return e}},D=function(e){switch(e){case"&":return"&amp;";case"<":return"&lt;";case">":return"&gt;";case'"':return"&quot;";default:return e}},O=function(e,n){return P.test(e)?n?e.replace(k,D):e.replace(P,D):e};e.exports={unescapeString:I,normalizeURI:N,escapeXml:O,reHtmlTag:C,OPENTAG:g,CLOSETAG:v,ENTITY:s,ESCAPABLE:x}},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){return l.stringify(e).replace(/%20/g,"+")}function r(e){return function(){function n(e){if(null==e.query){var n=e.search;e.query=E(n.substring(1)),e[f]={search:n,searchBase:""}}return e}function t(e,n){var t,i=e[f],o=n?w(n):"";if(!i&&!o)return e;"string"==typeof e&&(e=d.parsePath(e));var r=void 0;r=i&&e.search===i.search?i.searchBase:e.search||"";var s=r;return o&&(s+=(s?"&":"?")+o),a({},e,(t={search:s},t[f]={search:s,searchBase:r},t))}function i(e){return T.listenBefore(function(t,i){u.default(e,n(t),i)})}function r(e){return T.listen(function(t){e(n(t))})}function s(e){T.push(t(e,e.query))}function l(e){T.replace(t(e,e.query))}function c(e,n){return T.createPath(t(e,n||e.query))}function p(e,n){return T.createHref(t(e,n||e.query))}function g(e){for(var i=arguments.length,o=Array(i>1?i-1:0),r=1;r<i;r++)o[r-1]=arguments[r];var a=T.createLocation.apply(T,[t(e,e.query)].concat(o));return e.query&&(a.query=e.query),n(a)}function v(e,n,t){"string"==typeof n&&(n=d.parsePath(n)),s(a({state:e},n,{query:t}))}function y(e,n,t){"string"==typeof n&&(n=d.parsePath(n)),l(a({state:e},n,{query:t}))}var b=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],T=e(b),w=b.stringifyQuery,E=b.parseQueryString;return"function"!=typeof w&&(w=o),"function"!=typeof E&&(E=m),a({},T,{listenBefore:i,listen:r,push:s,replace:l,createPath:c,createHref:p,createLocation:g,pushState:h.default(v,"pushState is deprecated; use push instead"),replaceState:h.default(y,"replaceState is deprecated; use replace instead")})}}n.__esModule=!0;var a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},s=t(13),l=(i(s),t(164)),c=t(53),u=i(c),d=t(23),p=t(24),h=i(p),f="$searchBase",m=l.parse;n.default=r,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function r(e){for(var n="",t=[],i=[],r=void 0,a=0,s=/:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)/g;r=s.exec(e);)r.index!==a&&(i.push(e.slice(a,r.index)),n+=o(e.slice(a,r.index))),r[1]?(n+="([^/]+)",t.push(r[1])):"**"===r[0]?(n+="(.*)",t.push("splat")):"*"===r[0]?(n+="(.*?)",t.push("splat")):"("===r[0]?n+="(?:":")"===r[0]&&(n+=")?"),i.push(r[0]),a=s.lastIndex;return a!==e.length&&(i.push(e.slice(a,e.length)),n+=o(e.slice(a,e.length))),{pattern:e,regexpSource:n,paramNames:t,tokens:i}}function a(e){return h[e]||(h[e]=r(e)),h[e]}function s(e,n){"/"!==e.charAt(0)&&(e="/"+e);var t=a(e),i=t.regexpSource,o=t.paramNames,r=t.tokens;"/"!==e.charAt(e.length-1)&&(i+="/?"),"*"===r[r.length-1]&&(i+="$");var s=n.match(new RegExp("^"+i,"i"));if(null==s)return null;var l=s[0],c=n.substr(l.length);if(c){if("/"!==l.charAt(l.length-1))return null;c="/"+c}return{remainingPathname:c,paramNames:o,paramValues:s.slice(1).map(function(e){return e&&decodeURIComponent(e)})}}function l(e){return a(e).paramNames}function c(e,n){var t=s(e,n);if(!t)return null;var i=t.paramNames,o=t.paramValues,r={};return i.forEach(function(e,n){r[e]=o[n]}),r}function u(e,n){n=n||{};for(var t=a(e),i=t.tokens,o=0,r="",s=0,l=void 0,c=void 0,u=void 0,d=0,h=i.length;d<h;++d)l=i[d],"*"===l||"**"===l?(u=Array.isArray(n.splat)?n.splat[s++]:n.splat,null!=u||o>0?void 0:(0,p.default)(!1),null!=u&&(r+=encodeURI(u))):"("===l?o+=1:")"===l?o-=1:":"===l.charAt(0)?(c=l.substring(1),u=n[c],null!=u||o>0?void 0:(0,p.default)(!1),null!=u&&(r+=encodeURIComponent(u))):r+=l;return r.replace(/\/+/g,"/")}n.__esModule=!0,n.compilePattern=a,n.matchPattern=s,n.getParamNames=l,n.getParams=c,n.formatPattern=u;var d=t(8),p=i(d),h=Object.create(null)},function(e,n,t){"use strict";function i(e,n){return(e&n)===n}var o=t(2),r={MUST_USE_ATTRIBUTE:1,MUST_USE_PROPERTY:2,HAS_SIDE_EFFECTS:4,HAS_BOOLEAN_VALUE:8,HAS_NUMERIC_VALUE:16,HAS_POSITIVE_NUMERIC_VALUE:48,HAS_OVERLOADED_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var n=r,t=e.Properties||{},a=e.DOMAttributeNamespaces||{},l=e.DOMAttributeNames||{},c=e.DOMPropertyNames||{},u=e.DOMMutationMethods||{};e.isCustomAttribute&&s._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var d in t){s.properties.hasOwnProperty(d)?o(!1):void 0;var p=d.toLowerCase(),h=t[d],f={attributeName:p,attributeNamespace:null,propertyName:d,mutationMethod:null,mustUseAttribute:i(h,n.MUST_USE_ATTRIBUTE),mustUseProperty:i(h,n.MUST_USE_PROPERTY),hasSideEffects:i(h,n.HAS_SIDE_EFFECTS),hasBooleanValue:i(h,n.HAS_BOOLEAN_VALUE),hasNumericValue:i(h,n.HAS_NUMERIC_VALUE),hasPositiveNumericValue:i(h,n.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:i(h,n.HAS_OVERLOADED_BOOLEAN_VALUE)};if(f.mustUseAttribute&&f.mustUseProperty?o(!1):void 0,!f.mustUseProperty&&f.hasSideEffects?o(!1):void 0,f.hasBooleanValue+f.hasNumericValue+f.hasOverloadedBooleanValue<=1?void 0:o(!1),l.hasOwnProperty(d)){var m=l[d];f.attributeName=m}a.hasOwnProperty(d)&&(f.attributeNamespace=a[d]),c.hasOwnProperty(d)&&(f.propertyName=c[d]),u.hasOwnProperty(d)&&(f.mutationMethod=u[d]),s.properties[d]=f}}},a={},s={ID_ATTRIBUTE_NAME:"data-reactid",properties:{},getPossibleStandardName:null,_isCustomAttributeFunctions:[],isCustomAttribute:function(e){for(var n=0;n<s._isCustomAttributeFunctions.length;n++){var t=s._isCustomAttributeFunctions[n];if(t(e))return!0}return!1},getDefaultValueForProperty:function(e,n){var t,i=a[e];return i||(a[e]=i={}),n in i||(t=document.createElement(e),i[n]=t[n]),i[n]},injection:r};e.exports=s},function(e,n,t){"use strict";function i(e){return h+e.toString(36)}function o(e,n){return e.charAt(n)===h||n===e.length}function r(e){return""===e||e.charAt(0)===h&&e.charAt(e.length-1)!==h}function a(e,n){return 0===n.indexOf(e)&&o(n,e.length)}function s(e){return e?e.substr(0,e.lastIndexOf(h)):""}function l(e,n){if(r(e)&&r(n)?void 0:p(!1),a(e,n)?void 0:p(!1),e===n)return e;var t,i=e.length+f;for(t=i;t<n.length&&!o(n,t);t++);return n.substr(0,t)}function c(e,n){var t=Math.min(e.length,n.length);if(0===t)return"";for(var i=0,a=0;a<=t;a++)if(o(e,a)&&o(n,a))i=a;else if(e.charAt(a)!==n.charAt(a))break;var s=e.substr(0,i);return r(s)?void 0:p(!1),s}function u(e,n,t,i,o,r){e=e||"",n=n||"",e===n?p(!1):void 0;var c=a(n,e);c||a(e,n)?void 0:p(!1);for(var u=0,d=c?s:l,h=e;;h=d(h,n)){var f;if(o&&h===e||r&&h===n||(f=t(h,c,i)),f===!1||h===n)break;u++<m?void 0:p(!1)}}var d=t(125),p=t(2),h=".",f=h.length,m=1e4,g={createReactRootID:function(){return i(d.createReactRootIndex())},createReactID:function(e,n){return e+n},getReactRootIDFromNodeID:function(e){if(e&&e.charAt(0)===h&&e.length>1){var n=e.indexOf(h,1);return n>-1?e.substr(0,n):e}return null},traverseEnterLeave:function(e,n,t,i,o){var r=c(e,n);r!==e&&u(e,r,t,i,!1,!0),r!==n&&u(r,n,t,o,!0,!1)},traverseTwoPhase:function(e,n,t){e&&(u("",e,n,t,!0,!1),u(e,"",n,t,!1,!0))},traverseTwoPhaseSkipTarget:function(e,n,t){e&&(u("",e,n,t,!0,!0),u(e,"",n,t,!0,!0))},traverseAncestors:function(e,n,t){u("",e,n,t,!0,!1)},getFirstCommonAncestorID:c,_getNextDescendantID:l,isAncestorIDOf:a,SEPARATOR:h};e.exports=g},function(e,n,t){"use strict";var i={};e.exports=i},function(e,n){"use strict";n.__esModule=!0;var t=!("undefined"==typeof window||!window.document||!window.document.createElement);n.canUseDOM=t},function(e,n,t){"use strict";var i=t(105),o=t(244),r=t(118),a=t(127),s=t(128),l=t(2),c=(t(3),{}),u=null,d=function(e,n){e&&(o.executeDispatchesInOrder(e,n),e.isPersistent()||e.constructor.release(e))},p=function(e){return d(e,!0)},h=function(e){return d(e,!1)},f=null,m={injection:{injectMount:o.injection.injectMount,injectInstanceHandle:function(e){f=e},getInstanceHandle:function(){return f},injectEventPluginOrder:i.injectEventPluginOrder,injectEventPluginsByName:i.injectEventPluginsByName},eventNameDispatchConfigs:i.eventNameDispatchConfigs,registrationNameModules:i.registrationNameModules,putListener:function(e,n,t){"function"!=typeof t?l(!1):void 0;var o=c[n]||(c[n]={});o[e]=t;var r=i.registrationNameModules[n];r&&r.didPutListener&&r.didPutListener(e,n,t)},getListener:function(e,n){var t=c[n];return t&&t[e]},deleteListener:function(e,n){var t=i.registrationNameModules[n];t&&t.willDeleteListener&&t.willDeleteListener(e,n);var o=c[n];o&&delete o[e]},deleteAllListeners:function(e){for(var n in c)if(c[n][e]){var t=i.registrationNameModules[n];t&&t.willDeleteListener&&t.willDeleteListener(e,n),delete c[n][e]}},extractEvents:function(e,n,t,o,r){for(var s,l=i.plugins,c=0;c<l.length;c++){var u=l[c];if(u){var d=u.extractEvents(e,n,t,o,r);d&&(s=a(s,d))}}return s},enqueueEvents:function(e){e&&(u=a(u,e))},processEventQueue:function(e){var n=u;u=null,e?s(n,p):s(n,h),u?l(!1):void 0,r.rethrowCaughtError()},__purge:function(){c={}},__getListenerBank:function(){return c}};e.exports=m},function(e,n,t){"use strict";function i(e,n,t){var i=n.dispatchConfig.phasedRegistrationNames[t];return y(e,i)}function o(e,n,t){var o=n?v.bubbled:v.captured,r=i(e,t,o);r&&(t._dispatchListeners=m(t._dispatchListeners,r),t._dispatchIDs=m(t._dispatchIDs,e))}function r(e){e&&e.dispatchConfig.phasedRegistrationNames&&f.injection.getInstanceHandle().traverseTwoPhase(e.dispatchMarker,o,e)}function a(e){e&&e.dispatchConfig.phasedRegistrationNames&&f.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(e.dispatchMarker,o,e)}function s(e,n,t){if(t&&t.dispatchConfig.registrationName){var i=t.dispatchConfig.registrationName,o=y(e,i);o&&(t._dispatchListeners=m(t._dispatchListeners,o),t._dispatchIDs=m(t._dispatchIDs,e))}}function l(e){e&&e.dispatchConfig.registrationName&&s(e.dispatchMarker,null,e)}function c(e){g(e,r)}function u(e){g(e,a)}function d(e,n,t,i){f.injection.getInstanceHandle().traverseEnterLeave(t,i,s,e,n)}function p(e){g(e,l)}var h=t(15),f=t(35),m=(t(3),t(127)),g=t(128),v=h.PropagationPhases,y=f.getListener,b={accumulateTwoPhaseDispatches:c,accumulateTwoPhaseDispatchesSkipTarget:u,accumulateDirectDispatches:p,accumulateEnterLeaveDispatches:d};e.exports=b},function(e,n){"use strict";var t={remove:function(e){e._reactInternalInstance=void 0},get:function(e){return e._reactInternalInstance},has:function(e){return void 0!==e._reactInternalInstance},set:function(e,n){e._reactInternalInstance=n}};e.exports=t},function(e,n,t){"use strict";function i(e,n,t,i){o.call(this,e,n,t,i)}var o=t(27),r=t(69),a={view:function(e){if(e.view)return e.view;var n=r(e);if(null!=n&&n.window===n)return n;var t=n.ownerDocument;return t?t.defaultView||t.parentWindow:window},detail:function(e){return e.detail||0}};o.augmentClass(i,a),e.exports=i},function(e,n,t){"use strict";var i=t(2),o=function(e){var n,t={};e instanceof Object&&!Array.isArray(e)?void 0:i(!1);for(n in e)e.hasOwnProperty(n)&&(t[n]=n);return t};e.exports=o},function(e,n){"use strict";function t(e,n,t){e.addEventListener?e.addEventListener(n,t,!1):e.attachEvent("on"+n,t);
}function i(e,n,t){e.removeEventListener?e.removeEventListener(n,t,!1):e.detachEvent("on"+n,t)}function o(){return window.location.href.split("#")[1]||""}function r(e){window.location.replace(window.location.pathname+window.location.search+"#"+e)}function a(){return window.location.pathname+window.location.search+window.location.hash}function s(e){e&&window.history.go(e)}function l(e,n){n(window.confirm(e))}function c(){var e=navigator.userAgent;return(e.indexOf("Android 2.")===-1&&e.indexOf("Android 4.0")===-1||e.indexOf("Mobile Safari")===-1||e.indexOf("Chrome")!==-1||e.indexOf("Windows Phone")!==-1)&&(window.history&&"pushState"in window.history)}function u(){var e=navigator.userAgent;return e.indexOf("Firefox")===-1}n.__esModule=!0,n.addEventListener=t,n.removeEventListener=i,n.getHashPath=o,n.replaceHashPath=r,n.getWindowPath=a,n.go=s,n.getUserConfirmation=l,n.supportsHistory=c,n.supportsGoWithoutReloadUsingHash=u},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},a=t(8),s=i(a),l=t(1),c=i(l),u=t(42),d=(i(u),t(197)),p=i(d),h=t(18),f=t(6),m=(i(f),c.default.PropTypes),g=m.array,v=m.func,y=m.object,b=c.default.createClass({displayName:"RouterContext",propTypes:{history:y,router:y.isRequired,location:y.isRequired,routes:g.isRequired,params:y.isRequired,components:g.isRequired,createElement:v.isRequired},getDefaultProps:function(){return{createElement:c.default.createElement}},childContextTypes:{history:y,location:y.isRequired,router:y.isRequired},getChildContext:function(){var e=this.props,n=e.router,t=e.history,i=e.location;return n||(n=r({},t,{setRouteLeaveHook:t.listenBeforeLeavingRoute}),delete n.listenBeforeLeavingRoute),{history:t,location:i,router:n}},createElement:function(e,n){return null==e?null:this.props.createElement(e,n)},render:function(){var e=this,n=this.props,t=n.history,i=n.location,a=n.routes,l=n.params,u=n.components,d=null;return u&&(d=u.reduceRight(function(n,s,c){if(null==s)return n;var u=a[c],d=(0,p.default)(u,l),f={history:t,location:i,params:l,route:u,routeParams:d,routes:a};if((0,h.isReactChildren)(n))f.children=n;else if(n)for(var m in n)Object.prototype.hasOwnProperty.call(n,m)&&(f[m]=n[m]);if("object"===("undefined"==typeof s?"undefined":o(s))){var g={};for(var v in s)Object.prototype.hasOwnProperty.call(s,v)&&(g[v]=e.createElement(s[v],r({key:v},f)));return g}return e.createElement(s,f)},d)),null===d||d===!1||c.default.isValidElement(d)?void 0:(0,s.default)(!1),d}});n.default=b,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0,n.canUseMembrane=void 0;var o=t(6),r=(i(o),n.canUseMembrane=!1,function(e){return e});n.default=r},function(e,n,t){"use strict";function i(e){return Object.prototype.hasOwnProperty.call(e,g)||(e[g]=f++,p[e[g]]={}),p[e[g]]}var o=t(15),r=t(35),a=t(105),s=t(259),l=t(11),c=t(126),u=t(4),d=t(72),p={},h=!1,f=0,m={topAbort:"abort",topBlur:"blur",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},g="_reactListenersID"+String(Math.random()).slice(2),v=u({},s,{ReactEventListener:null,injection:{injectReactEventListener:function(e){e.setHandleTopLevel(v.handleTopLevel),v.ReactEventListener=e}},setEnabled:function(e){v.ReactEventListener&&v.ReactEventListener.setEnabled(e)},isEnabled:function(){return!(!v.ReactEventListener||!v.ReactEventListener.isEnabled())},listenTo:function(e,n){for(var t=n,r=i(t),s=a.registrationNameDependencies[e],l=o.topLevelTypes,c=0;c<s.length;c++){var u=s[c];r.hasOwnProperty(u)&&r[u]||(u===l.topWheel?d("wheel")?v.ReactEventListener.trapBubbledEvent(l.topWheel,"wheel",t):d("mousewheel")?v.ReactEventListener.trapBubbledEvent(l.topWheel,"mousewheel",t):v.ReactEventListener.trapBubbledEvent(l.topWheel,"DOMMouseScroll",t):u===l.topScroll?d("scroll",!0)?v.ReactEventListener.trapCapturedEvent(l.topScroll,"scroll",t):v.ReactEventListener.trapBubbledEvent(l.topScroll,"scroll",v.ReactEventListener.WINDOW_HANDLE):u===l.topFocus||u===l.topBlur?(d("focus",!0)?(v.ReactEventListener.trapCapturedEvent(l.topFocus,"focus",t),v.ReactEventListener.trapCapturedEvent(l.topBlur,"blur",t)):d("focusin")&&(v.ReactEventListener.trapBubbledEvent(l.topFocus,"focusin",t),v.ReactEventListener.trapBubbledEvent(l.topBlur,"focusout",t)),r[l.topBlur]=!0,r[l.topFocus]=!0):m.hasOwnProperty(u)&&v.ReactEventListener.trapBubbledEvent(u,m[u],t),r[u]=!0)}},trapBubbledEvent:function(e,n,t){return v.ReactEventListener.trapBubbledEvent(e,n,t)},trapCapturedEvent:function(e,n,t){return v.ReactEventListener.trapCapturedEvent(e,n,t)},ensureScrollValueMonitoring:function(){if(!h){var e=c.refreshScrollValues;v.ReactEventListener.monitorScrollValue(e),h=!0}},eventNameDispatchConfigs:r.eventNameDispatchConfigs,registrationNameModules:r.registrationNameModules,putListener:r.putListener,getListener:r.getListener,deleteListener:r.deleteListener,deleteAllListeners:r.deleteAllListeners});l.measureMethods(v,"ReactBrowserEventEmitter",{putListener:"putListener",deleteListener:"deleteListener"}),e.exports=v},function(e,n,t){"use strict";var i={};e.exports=i},function(e,n,t){"use strict";var i=t(39),o=i({prop:null,context:null,childContext:null});e.exports=o},function(e,n,t){"use strict";function i(e,n,t,i){o.call(this,e,n,t,i)}var o=t(38),r=t(126),a=t(68),s={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:a,button:function(e){var n=e.button;return"which"in e?n:2===n?2:4===n?1:0},buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},pageX:function(e){return"pageX"in e?e.pageX:e.clientX+r.currentScrollLeft},pageY:function(e){return"pageY"in e?e.pageY:e.clientY+r.currentScrollTop}};o.augmentClass(i,s),e.exports=i},function(e,n,t){"use strict";var i=t(2),o={reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(e,n,t,o,r,a,s,l){this.isInTransaction()?i(!1):void 0;var c,u;try{this._isInTransaction=!0,c=!0,this.initializeAll(0),u=e.call(n,t,o,r,a,s,l),c=!1}finally{try{if(c)try{this.closeAll(0)}catch(d){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return u},initializeAll:function(e){for(var n=this.transactionWrappers,t=e;t<n.length;t++){var i=n[t];try{this.wrapperInitData[t]=r.OBSERVED_ERROR,this.wrapperInitData[t]=i.initialize?i.initialize.call(this):null}finally{if(this.wrapperInitData[t]===r.OBSERVED_ERROR)try{this.initializeAll(t+1)}catch(o){}}}},closeAll:function(e){this.isInTransaction()?void 0:i(!1);for(var n=this.transactionWrappers,t=e;t<n.length;t++){var o,a=n[t],s=this.wrapperInitData[t];try{o=!0,s!==r.OBSERVED_ERROR&&a.close&&a.close.call(this,s),o=!1}finally{if(o)try{this.closeAll(t+1)}catch(l){}}}this.wrapperInitData.length=0}},r={Mixin:o,OBSERVED_ERROR:{}};e.exports=r},function(e,n,t){"use strict";var i=!1;e.exports=i},function(e,n){"use strict";function t(e){return o[e]}function i(e){return(""+e).replace(r,t)}var o={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"},r=/[&><"']/g;e.exports=i},function(e,n,t){"use strict";var i=t(7),o=/^[ \r\n\t\f]/,r=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,a=function(e,n){e.innerHTML=n};if("undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction&&(a=function(e,n){MSApp.execUnsafeLocalFunction(function(){e.innerHTML=n})}),i.canUseDOM){var s=document.createElement("div");s.innerHTML=" ",""===s.innerHTML&&(a=function(e,n){if(e.parentNode&&e.parentNode.replaceChild(e,e),o.test(n)||"<"===n[0]&&r.test(n)){e.innerHTML=String.fromCharCode(65279)+n;var t=e.firstChild;1===t.data.length?e.removeChild(t):t.deleteData(0,1)}else e.innerHTML=n})}e.exports=a},function(e,n){"use strict";function t(e){switch(e._type){case"Document":case"BlockQuote":case"List":case"Item":case"Paragraph":case"Header":case"Emph":case"Strong":case"Link":case"Image":return!0;default:return!1}}var i=function(e,n){this.current=e,this.entering=n===!0},o=function(){var e=this.current,n=this.entering;if(null===e)return null;var i=t(e);return n&&i?e._firstChild?(this.current=e._firstChild,this.entering=!0):this.entering=!1:e===this.root?this.current=null:null===e._next?(this.current=e._parent,this.entering=!1):(this.current=e._next,this.entering=!0),{entering:n,node:e}},r=function(e){return{current:e,root:e,entering:!0,next:o,resumeAt:i}},a=function(e,n){this._type=e,this._parent=null,this._firstChild=null,this._lastChild=null,this._prev=null,this._next=null,this._sourcepos=n,this._lastLineBlank=!1,this._open=!0,this._string_content=null,this._literal=null,this._listData=null,this._info=null,this._destination=null,this._title=null,this._isFenced=!1,this._fenceChar=null,this._fenceLength=0,this._fenceOffset=null,this._level=null},s=a.prototype;Object.defineProperty(s,"isContainer",{get:function(){return t(this)}}),Object.defineProperty(s,"type",{get:function(){return this._type}}),Object.defineProperty(s,"firstChild",{get:function(){return this._firstChild}}),Object.defineProperty(s,"lastChild",{get:function(){return this._lastChild}}),Object.defineProperty(s,"next",{get:function(){return this._next}}),Object.defineProperty(s,"prev",{get:function(){return this._prev}}),Object.defineProperty(s,"parent",{get:function(){return this._parent}}),Object.defineProperty(s,"sourcepos",{get:function(){return this._sourcepos}}),Object.defineProperty(s,"literal",{get:function(){return this._literal},set:function(e){this._literal=e}}),Object.defineProperty(s,"destination",{get:function(){return this._destination},set:function(e){this._destination=e}}),Object.defineProperty(s,"title",{get:function(){return this._title},set:function(e){this._title=e}}),Object.defineProperty(s,"info",{get:function(){return this._info},set:function(e){this._info=e}}),Object.defineProperty(s,"level",{get:function(){return this._level},set:function(e){this._level=e}}),Object.defineProperty(s,"listType",{get:function(){return this._listData.type},set:function(e){this._listData.type=e}}),Object.defineProperty(s,"listTight",{get:function(){return this._listData.tight},set:function(e){this._listData.tight=e}}),Object.defineProperty(s,"listStart",{get:function(){return this._listData.start},set:function(e){this._listData.start=e}}),Object.defineProperty(s,"listDelimiter",{get:function(){return this._listData.delimiter},set:function(e){this._listData.delimiter=e}}),a.prototype.appendChild=function(e){e.unlink(),e._parent=this,this._lastChild?(this._lastChild._next=e,e._prev=this._lastChild,this._lastChild=e):(this._firstChild=e,this._lastChild=e)},a.prototype.prependChild=function(e){e.unlink(),e._parent=this,this._firstChild?(this._firstChild._prev=e,e._next=this._firstChild,this._firstChild=e):(this._firstChild=e,this._lastChild=e)},a.prototype.unlink=function(){this._prev?this._prev._next=this._next:this._parent&&(this._parent._firstChild=this._next),this._next?this._next._prev=this._prev:this._parent&&(this._parent._lastChild=this._prev),this._parent=null,this._next=null,this._prev=null},a.prototype.insertAfter=function(e){e.unlink(),e._next=this._next,e._next&&(e._next._prev=e),e._prev=this,this._next=e,e._parent=this._parent,e._next||(e._parent._lastChild=e)},a.prototype.insertBefore=function(e){e.unlink(),e._prev=this._prev,e._prev&&(e._prev._next=e),e._next=this,this._prev=e,e._parent=this._parent,e._prev||(e._parent._firstChild=e)},a.prototype.walker=function(){var e=new r(this);return e},e.exports=a},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){return"string"==typeof e&&"/"===e.charAt(0)}function r(){var e=v.getHashPath();return!!o(e)||(v.replaceHashPath("/"+e),!1)}function a(e,n,t){return e+(e.indexOf("?")===-1?"?":"&")+(n+"="+t)}function s(e,n){return e.replace(new RegExp("[?&]?"+n+"=[a-zA-Z0-9]+"),"")}function l(e,n){var t=e.match(new RegExp("\\?.*?\\b"+n+"=(.+?)\\b"));return t&&t[1]}function c(){function e(){var e=v.getHashPath(),n=void 0,t=void 0;_?(n=l(e,_),e=s(e,_),n?t=y.readState(n):(t=null,n=P.createKey(),v.replaceHashPath(a(e,_,n)))):n=t=null;var i=m.parsePath(e);return P.createLocation(u({},i,{state:t}),void 0,n)}function n(n){function t(){r()&&i(e())}var i=n.transitionTo;return r(),v.addEventListener(window,"hashchange",t),function(){v.removeEventListener(window,"hashchange",t)}}function t(e){var n=e.basename,t=e.pathname,i=e.search,o=e.state,r=e.action,s=e.key;if(r!==f.POP){var l=(n||"")+t+i;_?(l=a(l,_,s),y.saveState(s,o)):e.key=e.state=null;var c=v.getHashPath();r===f.PUSH?c!==l&&(window.location.hash=l):c!==l&&v.replaceHashPath(l)}}function i(e){1===++k&&(A=n(P));var t=P.listenBefore(e);return function(){t(),0===--k&&A()}}function o(e){1===++k&&(A=n(P));var t=P.listen(e);return function(){t(),0===--k&&A()}}function c(e){P.push(e)}function d(e){P.replace(e)}function p(e){P.go(e)}function b(e){return"#"+P.createHref(e)}function E(e){1===++k&&(A=n(P)),P.registerTransitionHook(e)}function C(e){P.unregisterTransitionHook(e),0===--k&&A()}function S(e,n){P.pushState(e,n)}function x(e,n){P.replaceState(e,n)}var R=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];g.canUseDOM?void 0:h.default(!1);var _=R.queryKey;(void 0===_||_)&&(_="string"==typeof _?_:w);var P=T.default(u({},R,{getCurrentLocation:e,finishTransition:t,saveState:y.saveState})),k=0,A=void 0;v.supportsGoWithoutReloadUsingHash();return u({},P,{listenBefore:i,listen:o,push:c,replace:d,go:p,createHref:b,registerTransitionHook:E,unregisterTransitionHook:C,pushState:S,replaceState:x})}n.__esModule=!0;var u=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},d=t(13),p=(i(d),t(8)),h=i(p),f=t(22),m=t(23),g=t(34),v=t(40),y=t(84),b=t(86),T=i(b),w="_k";n.default=c,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n,t){var i=e(n,t);e.length<2&&t(i)}n.__esModule=!0;var r=t(13);i(r);n.default=o,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){return function(){function n(){if(!w){if(null==T&&s.canUseDOM){var e=document.getElementsByTagName("base")[0],n=e&&e.getAttribute("href");null!=n&&(T=n)}w=!0}}function t(e){return n(),T&&null==e.basename&&(0===e.pathname.indexOf(T)?(e.pathname=e.pathname.substring(T.length),e.basename=T,""===e.pathname&&(e.pathname="/")):e.basename=""),e}function i(e){if(n(),!T)return e;"string"==typeof e&&(e=l.parsePath(e));var t=e.pathname,i="/"===T.slice(-1)?T:T+"/",o="/"===t.charAt(0)?t.slice(1):t,a=i+o;return r({},e,{pathname:a})}function o(e){return b.listenBefore(function(n,i){u.default(e,t(n),i)})}function a(e){return b.listen(function(n){e(t(n))})}function c(e){b.push(i(e))}function d(e){b.replace(i(e))}function h(e){return b.createPath(i(e))}function f(e){return b.createHref(i(e))}function m(e){for(var n=arguments.length,o=Array(n>1?n-1:0),r=1;r<n;r++)o[r-1]=arguments[r];return t(b.createLocation.apply(b,[i(e)].concat(o)))}function g(e,n){"string"==typeof n&&(n=l.parsePath(n)),c(r({state:e},n))}function v(e,n){"string"==typeof n&&(n=l.parsePath(n)),d(r({state:e},n))}var y=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],b=e(y),T=y.basename,w=!1;return r({},b,{listenBefore:o,listen:a,push:c,replace:d,createPath:h,createHref:f,createLocation:m,pushState:p.default(g,"pushState is deprecated; use push instead"),replaceState:p.default(v,"replaceState is deprecated; use replace instead")})}}n.__esModule=!0;var r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},a=t(13),s=(i(a),t(34)),l=t(23),c=t(53),u=i(c),d=t(24),p=i(d);n.default=o,e.exports=n.default},function(e,n){"use strict";function t(e,n,t){function i(){return a=!0,s?void(c=[].concat(Array.prototype.slice.call(arguments))):void t.apply(this,arguments)}function o(){if(!a&&(l=!0,!s)){for(s=!0;!a&&r<e&&l;)l=!1,n.call(this,r++,o,i);return s=!1,a?void t.apply(this,c):void(r>=e&&l&&(a=!0,t()))}}var r=0,a=!1,s=!1,l=!1,c=void 0;o()}function i(e,n,t){function i(e,n,i){a||(n?(a=!0,t(n)):(r[e]=i,a=++s===o,a&&t(null,r)))}var o=e.length,r=[];if(0===o)return t(null,r);var a=!1,s=0;e.forEach(function(e,t){n(e,t,function(e,n){i(t,e,n)})})}n.__esModule=!0,n.loopAsync=t,n.mapAsync=i},function(e,n,t){"use strict";function i(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n.default=e,n}function o(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0,n.router=n.routes=n.route=n.components=n.component=n.location=n.history=n.falsy=n.locationShape=n.routerShape=void 0;var r=t(1),a=t(42),s=(o(a),t(25)),l=i(s),c=t(6),u=(o(c),r.PropTypes.func),d=r.PropTypes.object,p=r.PropTypes.shape,h=r.PropTypes.string,f=n.routerShape=p({push:u.isRequired,replace:u.isRequired,go:u.isRequired,goBack:u.isRequired,goForward:u.isRequired,setRouteLeaveHook:u.isRequired,isActive:u.isRequired}),m=n.locationShape=p({pathname:h.isRequired,search:h.isRequired,state:d,action:h.isRequired,key:h}),g=n.falsy=l.falsy,v=n.history=l.history,y=n.location=m,b=n.component=l.component,T=n.components=l.components,w=n.route=l.route,E=(n.routes=l.routes,n.router=f),C={falsy:g,history:v,location:y,component:b,components:T,route:w,router:E};n.default=C},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n))return!0;return!1}function r(e,n){function t(n){var t=!(arguments.length<=1||void 0===arguments[1])&&arguments[1],i=arguments.length<=2||void 0===arguments[2]?null:arguments[2],o=void 0;return t&&t!==!0||null!==i?(n={pathname:n,query:t},o=i||!1):(n=e.createLocation(n),o=t),(0,p.default)(n,o,b.location,b.routes,b.params)}function i(e,t){T&&T.location===e?r(T,t):(0,g.default)(n,e,function(n,i){n?t(n):i?r(a({},i,{location:e}),t):t()})}function r(e,n){function t(t,o){return t||o?i(t,o):void(0,f.default)(e,function(t,i){t?n(t):n(null,null,b=a({},e,{components:i}))})}function i(e,t){e?n(e):n(null,t)}var o=(0,c.default)(b,e),r=o.leaveRoutes,s=o.changeRoutes,l=o.enterRoutes;(0,u.runLeaveHooks)(r,b),r.filter(function(e){return l.indexOf(e)===-1}).forEach(m),(0,u.runChangeHooks)(s,b,e,function(n,o){return n||o?i(n,o):void(0,u.runEnterHooks)(l,e,t)})}function s(e){var n=arguments.length<=1||void 0===arguments[1]||arguments[1];return e.__id__||n&&(e.__id__=w++)}function l(e){return e.reduce(function(e,n){return e.push.apply(e,E[s(n)]),e},[])}function d(e,t){(0,g.default)(n,e,function(n,i){if(null==i)return void t();T=a({},i,{location:e});for(var o=l((0,c.default)(b,T).leaveRoutes),r=void 0,s=0,u=o.length;null==r&&s<u;++s)r=o[s](e);t(r)})}function h(){if(b.routes){for(var e=l(b.routes),n=void 0,t=0,i=e.length;"string"!=typeof n&&t<i;++t)n=e[t]();return n}}function m(e){var n=s(e,!1);n&&(delete E[n],o(E)||(C&&(C(),C=null),S&&(S(),S=null)))}function v(n,t){var i=s(n),r=E[i];if(r)r.indexOf(t)===-1&&r.push(t);else{var a=!o(E);E[i]=[t],a&&(C=e.listenBefore(d),e.listenBeforeUnload&&(S=e.listenBeforeUnload(h)))}return function(){var e=E[i];if(e){var o=e.filter(function(e){return e!==t});0===o.length?m(n):E[i]=o}}}function y(n){return e.listen(function(t){b.location===t?n(null,b):i(t,function(t,i,o){t?n(t):i?e.replace(i):o&&n(null,o)})})}var b={},T=void 0,w=1,E=Object.create(null),C=void 0,S=void 0;return{isActive:t,match:i,listenBeforeLeavingRoute:v,listen:y}}n.__esModule=!0;var a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.default=r;var s=t(6),l=(i(s),t(195)),c=i(l),u=t(192),d=t(199),p=i(d),h=t(196),f=i(h),m=t(201),g=i(m);e.exports=n.default},function(e,n,t){"use strict";function i(){this._callbacks=null,this._contexts=null}var o=t(21),r=t(4),a=t(2);r(i.prototype,{enqueue:function(e,n){this._callbacks=this._callbacks||[],this._contexts=this._contexts||[],this._callbacks.push(e),this._contexts.push(n)},notifyAll:function(){var e=this._callbacks,n=this._contexts;if(e){e.length!==n.length?a(!1):void 0,this._callbacks=null,this._contexts=null;for(var t=0;t<e.length;t++)e[t].call(n[t]);e.length=0,n.length=0}},reset:function(){this._callbacks=null,this._contexts=null},destructor:function(){this.reset()}}),o.addPoolingTo(i),e.exports=i},function(e,n,t){"use strict";function i(e){return!!u.hasOwnProperty(e)||!c.hasOwnProperty(e)&&(l.test(e)?(u[e]=!0,!0):(c[e]=!0,!1))}function o(e,n){return null==n||e.hasBooleanValue&&!n||e.hasNumericValue&&isNaN(n)||e.hasPositiveNumericValue&&n<1||e.hasOverloadedBooleanValue&&n===!1}var r=t(31),a=t(11),s=t(289),l=(t(3),/^[a-zA-Z_][\w\.\-]*$/),c={},u={},d={createMarkupForID:function(e){return r.ID_ATTRIBUTE_NAME+"="+s(e)},setAttributeForID:function(e,n){e.setAttribute(r.ID_ATTRIBUTE_NAME,n)},createMarkupForProperty:function(e,n){var t=r.properties.hasOwnProperty(e)?r.properties[e]:null;if(t){if(o(t,n))return"";var i=t.attributeName;return t.hasBooleanValue||t.hasOverloadedBooleanValue&&n===!0?i+'=""':i+"="+s(n)}return r.isCustomAttribute(e)?null==n?"":e+"="+s(n):null},createMarkupForCustomAttribute:function(e,n){return i(e)&&null!=n?e+"="+s(n):""},setValueForProperty:function(e,n,t){var i=r.properties.hasOwnProperty(n)?r.properties[n]:null;if(i){var a=i.mutationMethod;if(a)a(e,t);else if(o(i,t))this.deleteValueForProperty(e,n);else if(i.mustUseAttribute){var s=i.attributeName,l=i.attributeNamespace;l?e.setAttributeNS(l,s,""+t):i.hasBooleanValue||i.hasOverloadedBooleanValue&&t===!0?e.setAttribute(s,""):e.setAttribute(s,""+t)}else{var c=i.propertyName;i.hasSideEffects&&""+e[c]==""+t||(e[c]=t)}}else r.isCustomAttribute(n)&&d.setValueForAttribute(e,n,t)},setValueForAttribute:function(e,n,t){i(n)&&(null==t?e.removeAttribute(n):e.setAttribute(n,""+t))},deleteValueForProperty:function(e,n){var t=r.properties.hasOwnProperty(n)?r.properties[n]:null;if(t){var i=t.mutationMethod;if(i)i(e,void 0);else if(t.mustUseAttribute)e.removeAttribute(t.attributeName);else{var o=t.propertyName,a=r.getDefaultValueForProperty(e.nodeName,o);t.hasSideEffects&&""+e[o]===a||(e[o]=a)}}else r.isCustomAttribute(n)&&e.removeAttribute(n)}};a.measureMethods(d,"DOMPropertyOperations",{setValueForProperty:"setValueForProperty",setValueForAttribute:"setValueForAttribute",deleteValueForProperty:"deleteValueForProperty"}),e.exports=d},function(e,n,t){"use strict";function i(e){null!=e.checkedLink&&null!=e.valueLink?c(!1):void 0}function o(e){i(e),null!=e.value||null!=e.onChange?c(!1):void 0}function r(e){i(e),null!=e.checked||null!=e.onChange?c(!1):void 0}function a(e){if(e){var n=e.getName();if(n)return" Check the render method of `"+n+"`."}return""}var s=t(124),l=t(45),c=t(2),u=(t(3),{button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0}),d={value:function(e,n,t){return!e[n]||u[e.type]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")},checked:function(e,n,t){return!e[n]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")},onChange:s.func},p={},h={checkPropTypes:function(e,n,t){for(var i in d){if(d.hasOwnProperty(i))var o=d[i](n,i,e,l.prop);if(o instanceof Error&&!(o.message in p)){p[o.message]=!0;a(t)}}},getValue:function(e){return e.valueLink?(o(e),e.valueLink.value):e.value},getChecked:function(e){return e.checkedLink?(r(e),e.checkedLink.value):e.checked},executeOnChange:function(e,n){return e.valueLink?(o(e),e.valueLink.requestChange(n.target.value)):e.checkedLink?(r(e),e.checkedLink.requestChange(n.target.checked)):e.onChange?e.onChange.call(void 0,n):void 0}};e.exports=h},function(e,n,t){"use strict";var i=t(63),o=t(9),r={processChildrenUpdates:i.dangerouslyProcessChildrenUpdates,replaceNodeWithMarkupByID:i.dangerouslyReplaceNodeWithMarkupByID,unmountIDFromEnvironment:function(e){o.purgeID(e)}};e.exports=r},function(e,n,t){"use strict";var i=t(2),o=!1,r={unmountIDFromEnvironment:null,replaceNodeWithMarkupByID:null,processChildrenUpdates:null,injection:{injectEnvironment:function(e){o?i(!1):void 0,r.unmountIDFromEnvironment=e.unmountIDFromEnvironment,r.replaceNodeWithMarkupByID=e.replaceNodeWithMarkupByID,r.processChildrenUpdates=e.processChildrenUpdates,o=!0}}};e.exports=r},function(e,n,t){"use strict";var i=t(104),o=t(59),r=t(9),a=t(11),s=t(2),l={dangerouslySetInnerHTML:"`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.",style:"`style` must be set using `updateStylesByID()`."},c={updatePropertyByID:function(e,n,t){var i=r.getNode(e);l.hasOwnProperty(n)?s(!1):void 0,null!=t?o.setValueForProperty(i,n,t):o.deleteValueForProperty(i,n)},dangerouslyReplaceNodeWithMarkupByID:function(e,n){var t=r.getNode(e);i.dangerouslyReplaceNodeWithMarkup(t,n)},dangerouslyProcessChildrenUpdates:function(e,n){for(var t=0;t<e.length;t++)e[t].parentNode=r.getNode(e[t].parentID);i.processUpdates(e,n)}};a.measureMethods(c,"ReactDOMIDOperations",{dangerouslyReplaceNodeWithMarkupByID:"dangerouslyReplaceNodeWithMarkupByID",dangerouslyProcessChildrenUpdates:"dangerouslyProcessChildrenUpdates"}),e.exports=c},function(e,n,t){"use strict";function i(e){s.enqueueUpdate(e)}function o(e,n){var t=a.get(e);return t?t:null}var r=(t(16),t(10)),a=t(37),s=t(12),l=t(4),c=t(2),u=(t(3),{isMounted:function(e){var n=a.get(e);return!!n&&!!n._renderedComponent},enqueueCallback:function(e,n){"function"!=typeof n?c(!1):void 0;var t=o(e);return t?(t._pendingCallbacks?t._pendingCallbacks.push(n):t._pendingCallbacks=[n],void i(t)):null},enqueueCallbackInternal:function(e,n){"function"!=typeof n?c(!1):void 0,e._pendingCallbacks?e._pendingCallbacks.push(n):e._pendingCallbacks=[n],i(e)},enqueueForceUpdate:function(e){var n=o(e,"forceUpdate");n&&(n._pendingForceUpdate=!0,i(n))},enqueueReplaceState:function(e,n){var t=o(e,"replaceState");t&&(t._pendingStateQueue=[n],t._pendingReplaceState=!0,i(t))},enqueueSetState:function(e,n){var t=o(e,"setState");if(t){var r=t._pendingStateQueue||(t._pendingStateQueue=[]);r.push(n),i(t)}},enqueueSetProps:function(e,n){var t=o(e,"setProps");t&&u.enqueueSetPropsInternal(t,n)},enqueueSetPropsInternal:function(e,n){var t=e._topLevelWrapper;t?void 0:c(!1);var o=t._pendingElement||t._currentElement,a=o.props,s=l({},a.props,n);t._pendingElement=r.cloneAndReplaceProps(o,r.cloneAndReplaceProps(a,s)),i(t)},enqueueReplaceProps:function(e,n){var t=o(e,"replaceProps");t&&u.enqueueReplacePropsInternal(t,n)},enqueueReplacePropsInternal:function(e,n){var t=e._topLevelWrapper;t?void 0:c(!1);var o=t._pendingElement||t._currentElement,a=o.props;t._pendingElement=r.cloneAndReplaceProps(o,r.cloneAndReplaceProps(a,n)),i(t)},enqueueElementInternal:function(e,n){e._pendingElement=n,i(e)}});e.exports=u},function(e,n){"use strict";e.exports="0.14.8"},function(e,n,t){"use strict";function i(e){return null==e?null:1===e.nodeType?e:o.has(e)?r.getNodeFromInstance(e):(null!=e.render&&"function"==typeof e.render?a(!1):void 0,void a(!1))}var o=(t(16),t(37)),r=t(9),a=t(2);t(3);e.exports=i},function(e,n){"use strict";function t(e){var n,t=e.keyCode;return"charCode"in e?(n=e.charCode,0===n&&13===t&&(n=13)):n=t,n>=32||13===n?n:0}e.exports=t},function(e,n){"use strict";function t(e){var n=this,t=n.nativeEvent;if(t.getModifierState)return t.getModifierState(e);var i=o[e];return!!i&&!!t[i]}function i(e){return t}var o={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};e.exports=i},function(e,n){"use strict";function t(e){var n=e.target||e.srcElement||window;return 3===n.nodeType?n.parentNode:n}e.exports=t},function(e,n){"use strict";function t(e){var n=e&&(i&&e[i]||e[o]);if("function"==typeof n)return n}var i="function"==typeof Symbol&&Symbol.iterator,o="@@iterator";e.exports=t},function(e,n,t){"use strict";function i(e){return"function"==typeof e&&"undefined"!=typeof e.prototype&&"function"==typeof e.prototype.mountComponent&&"function"==typeof e.prototype.receiveComponent}function o(e){var n;if(null===e||e===!1)n=new a(o);else if("object"==typeof e){var t=e;!t||"function"!=typeof t.type&&"string"!=typeof t.type?c(!1):void 0,n="string"==typeof t.type?s.createInternalComponent(t):i(t.type)?new t.type(t):new u}else"string"==typeof e||"number"==typeof e?n=s.createInstanceForText(e):c(!1);return n.construct(e),n._mountIndex=0,n._mountImage=null,n}var r=t(250),a=t(116),s=t(122),l=t(4),c=t(2),u=(t(3),function(){});l(u.prototype,r.Mixin,{_instantiateReactComponent:o}),e.exports=o},function(e,n,t){"use strict";function i(e,n){if(!r.canUseDOM||n&&!("addEventListener"in document))return!1;var t="on"+e,i=t in document;if(!i){var a=document.createElement("div");a.setAttribute(t,"return;"),i="function"==typeof a[t]}return!i&&o&&"wheel"===e&&(i=document.implementation.hasFeature("Events.wheel","3.0")),i}var o,r=t(7);r.canUseDOM&&(o=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0),e.exports=i},function(e,n,t){"use strict";var i=t(7),o=t(49),r=t(50),a=function(e,n){e.textContent=n};i.canUseDOM&&("textContent"in document.documentElement||(a=function(e,n){r(e,o(n))})),e.exports=a},function(e,n){"use strict";function t(e,n){var t=null===e||e===!1,i=null===n||n===!1;if(t||i)return t===i;var o=typeof e,r=typeof n;return"string"===o||"number"===o?"string"===r||"number"===r:"object"===r&&e.type===n.type&&e.key===n.key}e.exports=t},function(e,n,t){"use strict";function i(e){return m[e]}function o(e,n){return e&&null!=e.key?a(e.key):n.toString(36)}function r(e){return(""+e).replace(g,i)}function a(e){return"$"+r(e)}function s(e,n,t,i){var r=typeof e;if("undefined"!==r&&"boolean"!==r||(e=null),null===e||"string"===r||"number"===r||c.isValidElement(e))return t(i,e,""===n?h+o(e,0):n),1;var l,u,m=0,g=""===n?h:n+f;if(Array.isArray(e))for(var v=0;v<e.length;v++)l=e[v],
u=g+o(l,v),m+=s(l,u,t,i);else{var y=d(e);if(y){var b,T=y.call(e);if(y!==e.entries)for(var w=0;!(b=T.next()).done;)l=b.value,u=g+o(l,w++),m+=s(l,u,t,i);else for(;!(b=T.next()).done;){var E=b.value;E&&(l=E[1],u=g+a(E[0])+f+o(l,0),m+=s(l,u,t,i))}}else if("object"===r){String(e);p(!1)}}return m}function l(e,n,t){return null==e?0:s(e,"",n,t)}var c=(t(16),t(10)),u=t(32),d=t(70),p=t(2),h=(t(3),u.SEPARATOR),f=":",m={"=":"=0",".":"=1",":":"=2"},g=/[=.:]/g;e.exports=l},function(e,n,t){"use strict";var i=(t(4),t(14)),o=(t(3),i);e.exports=o},function(e,n,t){var i=t(144),o=t(142);n.decode=function(e,n){return(!n||n<=0?o.XML:o.HTML)(e)},n.decodeStrict=function(e,n){return(!n||n<=0?o.XML:o.HTMLStrict)(e)},n.encode=function(e,n){return(!n||n<=0?i.XML:i.HTML)(e)},n.encodeXML=i.XML,n.encodeHTML4=n.encodeHTML5=n.encodeHTML=i.HTML,n.decodeXML=n.decodeXMLStrict=o.XML,n.decodeHTML4=n.decodeHTML5=n.decodeHTML=o.HTML,n.decodeHTML4Strict=n.decodeHTML5Strict=n.decodeHTMLStrict=o.HTMLStrict,n.escape=i.escape},function(e,n,t){"use strict";var i=t(14),o={listen:function(e,n,t){return e.addEventListener?(e.addEventListener(n,t,!1),{remove:function(){e.removeEventListener(n,t,!1)}}):e.attachEvent?(e.attachEvent("on"+n,t),{remove:function(){e.detachEvent("on"+n,t)}}):void 0},capture:function(e,n,t){return e.addEventListener?(e.addEventListener(n,t,!0),{remove:function(){e.removeEventListener(n,t,!0)}}):{remove:i}},registerDefault:function(){}};e.exports=o},function(e,n,t){"use strict";function i(e,n){var t=!0;e:for(;t;){var i=e,r=n;if(t=!1,i&&r){if(i===r)return!0;if(o(i))return!1;if(o(r)){e=i,n=r.parentNode,t=!0;continue e}return i.contains?i.contains(r):!!i.compareDocumentPosition&&!!(16&i.compareDocumentPosition(r))}return!1}}var o=t(153);e.exports=i},function(e,n){"use strict";function t(e){try{e.focus()}catch(n){}}e.exports=t},function(e,n){"use strict";function t(){if("undefined"==typeof document)return null;try{return document.activeElement||document.body}catch(e){return document.body}}e.exports=t},function(e,n,t){"use strict";function i(e){return a?void 0:r(!1),p.hasOwnProperty(e)||(e="*"),s.hasOwnProperty(e)||("*"===e?a.innerHTML="<link />":a.innerHTML="<"+e+"></"+e+">",s[e]=!a.firstChild),s[e]?p[e]:null}var o=t(7),r=t(2),a=o.canUseDOM?document.createElement("div"):null,s={},l=[1,'<select multiple="true">',"</select>"],c=[1,"<table>","</table>"],u=[3,"<table><tbody><tr>","</tr></tbody></table>"],d=[1,'<svg xmlns="http://www.w3.org/2000/svg">',"</svg>"],p={"*":[1,"?<div>","</div>"],area:[1,"<map>","</map>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],legend:[1,"<fieldset>","</fieldset>"],param:[1,"<object>","</object>"],tr:[2,"<table><tbody>","</tbody></table>"],optgroup:l,option:l,caption:c,colgroup:c,tbody:c,tfoot:c,thead:c,td:u,th:u},h=["circle","clipPath","defs","ellipse","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","text","tspan"];h.forEach(function(e){p[e]=d,s[e]=!0}),e.exports=i},function(e,n){"use strict";function t(e,n){if(e===n)return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),o=Object.keys(n);if(t.length!==o.length)return!1;for(var r=i.bind(n),a=0;a<t.length;a++)if(!r(t[a])||e[t[a]]!==n[t[a]])return!1;return!0}var i=Object.prototype.hasOwnProperty;e.exports=t},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){return l+e}function r(e,n){try{null==n?window.sessionStorage.removeItem(o(e)):window.sessionStorage.setItem(o(e),JSON.stringify(n))}catch(t){if(t.name===u)return;if(c.indexOf(t.name)>=0&&0===window.sessionStorage.length)return;throw t}}function a(e){var n=void 0;try{n=window.sessionStorage.getItem(o(e))}catch(t){if(t.name===u)return null}if(n)try{return JSON.parse(n)}catch(t){}return null}n.__esModule=!0,n.saveState=r,n.readState=a;var s=t(13),l=(i(s),"@@History/"),c=["QuotaExceededError","QUOTA_EXCEEDED_ERR"],u="SecurityError"},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(){function e(e){try{e=e||window.history.state||{}}catch(n){e={}}var t=d.getWindowPath(),i=e,o=i.key,a=void 0;o?a=p.readState(o):(a=null,o=b.createKey(),v&&window.history.replaceState(r({},e,{key:o}),null));var s=c.parsePath(t);return b.createLocation(r({},s,{state:a}),void 0,o)}function n(n){function t(n){void 0!==n.state&&i(e(n.state))}var i=n.transitionTo;return d.addEventListener(window,"popstate",t),function(){d.removeEventListener(window,"popstate",t)}}function t(e){var n=e.basename,t=e.pathname,i=e.search,o=e.hash,r=e.state,a=e.action,s=e.key;if(a!==l.POP){p.saveState(s,r);var c=(n||"")+t+i+o,u={key:s};if(a===l.PUSH){if(y)return window.location.href=c,!1;window.history.pushState(u,null,c)}else{if(y)return window.location.replace(c),!1;window.history.replaceState(u,null,c)}}}function i(e){1===++T&&(w=n(b));var t=b.listenBefore(e);return function(){t(),0===--T&&w()}}function o(e){1===++T&&(w=n(b));var t=b.listen(e);return function(){t(),0===--T&&w()}}function a(e){1===++T&&(w=n(b)),b.registerTransitionHook(e)}function h(e){b.unregisterTransitionHook(e),0===--T&&w()}var m=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];u.canUseDOM?void 0:s.default(!1);var g=m.forceRefresh,v=d.supportsHistory(),y=!v||g,b=f.default(r({},m,{getCurrentLocation:e,finishTransition:t,saveState:p.saveState})),T=0,w=void 0;return r({},b,{listenBefore:i,listen:o,registerTransitionHook:a,unregisterTransitionHook:h})}n.__esModule=!0;var r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},a=t(8),s=i(a),l=t(22),c=t(23),u=t(34),d=t(40),p=t(84),h=t(86),f=i(h);n.default=o,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){function n(e){return l.canUseDOM?void 0:s.default(!1),t.listen(e)}var t=d.default(r({getUserConfirmation:c.getUserConfirmation},e,{go:c.go}));return r({},t,{listen:n})}n.__esModule=!0;var r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},a=t(8),s=i(a),l=t(34),c=t(40),u=t(87),d=i(u);n.default=o,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){return Math.random().toString(36).substr(2,e)}function r(e,n){return e.pathname===n.pathname&&e.search===n.search&&e.key===n.key&&u.default(e.state,n.state)}function a(){function e(e){return B.push(e),function(){B=B.filter(function(n){return n!==e})}}function n(){return K&&K.action===h.POP?q.indexOf(K.key):F?q.indexOf(F.key):-1}function t(e){var t=n();F=e,F.action===h.PUSH?q=[].concat(q.slice(0,t+1),[F.key]):F.action===h.REPLACE&&(q[t]=F.key),U.forEach(function(e){e(F)})}function i(e){if(U.push(e),F)e(F);else{var n=N();q=[n.key],t(n)}return function(){U=U.filter(function(n){return n!==e})}}function a(e,n){p.loopAsync(B.length,function(n,t,i){v.default(B[n],e,function(e){null!=e?i(e):t()})},function(e){L&&"string"==typeof e?L(e,function(e){n(e!==!1)}):n(e!==!1)})}function l(e){F&&r(F,e)||(K=e,a(e,function(n){if(K===e)if(n){if(e.action===h.PUSH){var i=E(F),o=E(e);o===i&&u.default(F.state,e.state)&&(e.action=h.REPLACE)}D(e)!==!1&&t(e)}else if(F&&e.action===h.POP){var r=q.indexOf(F.key),a=q.indexOf(e.key);r!==-1&&a!==-1&&M(r-a)}}))}function c(e){l(S(e,h.PUSH,w()))}function f(e){l(S(e,h.REPLACE,w()))}function g(){M(-1)}function y(){M(1)}function w(){return o(j)}function E(e){if(null==e||"string"==typeof e)return e;var n=e.pathname,t=e.search,i=e.hash,o=n;return t&&(o+=t),i&&(o+=i),o}function C(e){return E(e)}function S(e,n){var t=arguments.length<=2||void 0===arguments[2]?w():arguments[2];return"object"==typeof n&&("string"==typeof e&&(e=d.parsePath(e)),e=s({},e,{state:n}),n=t,t=arguments[3]||w()),m.default(e,n,t)}function x(e){F?(R(F,e),t(F)):R(N(),e)}function R(e,n){e.state=s({},e.state,n),O(e.key,e.state)}function _(e){B.indexOf(e)===-1&&B.push(e)}function P(e){B=B.filter(function(n){return n!==e})}function k(e,n){"string"==typeof n&&(n=d.parsePath(n)),c(s({state:e},n))}function A(e,n){"string"==typeof n&&(n=d.parsePath(n)),f(s({state:e},n))}var I=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],N=I.getCurrentLocation,D=I.finishTransition,O=I.saveState,M=I.go,L=I.getUserConfirmation,j=I.keyLength;"number"!=typeof j&&(j=T);var B=[],q=[],U=[],F=void 0,K=void 0;return{listenBefore:e,listen:i,transitionTo:l,push:c,replace:f,go:M,goBack:g,goForward:y,createKey:w,createPath:E,createHref:C,createLocation:S,setState:b.default(x,"setState is deprecated; use location.key to save state instead"),registerTransitionHook:b.default(_,"registerTransitionHook is deprecated; use listenBefore instead"),unregisterTransitionHook:b.default(P,"unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead"),pushState:b.default(k,"pushState is deprecated; use push instead"),replaceState:b.default(A,"replaceState is deprecated; use replace instead")}}n.__esModule=!0;var s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},l=t(13),c=(i(l),t(139)),u=i(c),d=t(23),p=t(157),h=t(22),f=t(88),m=i(f),g=t(53),v=i(g),y=t(24),b=i(y),T=6;n.default=a,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(){var e=arguments.length<=0||void 0===arguments[0]?"/":arguments[0],n=arguments.length<=1||void 0===arguments[1]?s.POP:arguments[1],t=arguments.length<=2||void 0===arguments[2]?null:arguments[2],i=arguments.length<=3||void 0===arguments[3]?null:arguments[3];"string"==typeof e&&(e=l.parsePath(e)),"object"==typeof n&&(e=r({},e,{state:n}),n=t||s.POP,t=i);var o=e.pathname||"/",a=e.search||"",c=e.hash||"",u=e.state||null;return{pathname:o,search:a,hash:c,state:u,action:n,key:t}}n.__esModule=!0;var r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},a=t(13),s=(i(a),t(22)),l=t(23);n.default=o,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){return e.filter(function(e){return e.state}).reduce(function(e,n){return e[n.key]=n.state,e},{})}function r(){function e(e,n){v[e]=n}function n(e){return v[e]}function t(){var e=m[g],t=e.basename,i=e.pathname,o=e.search,r=(t||"")+i+(o||""),s=void 0,l=void 0;e.key?(s=e.key,l=n(s)):(s=p.createKey(),l=null,e.key=s);var c=u.parsePath(r);return p.createLocation(a({},c,{state:l}),void 0,s)}function i(e){var n=g+e;return n>=0&&n<m.length}function r(e){if(e){if(!i(e))return;g+=e;var n=t();p.transitionTo(a({},n,{action:d.POP}))}}function s(n){switch(n.action){case d.PUSH:g+=1,g<m.length&&m.splice(g),m.push(n),e(n.key,n.state);break;case d.REPLACE:m[g]=n,e(n.key,n.state)}}var l=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];Array.isArray(l)?l={entries:l}:"string"==typeof l&&(l={entries:[l]});var p=h.default(a({},l,{getCurrentLocation:t,finishTransition:s,saveState:e,go:r})),f=l,m=f.entries,g=f.current;"string"==typeof m?m=[m]:Array.isArray(m)||(m=["/"]),m=m.map(function(e){var n=p.createKey();return"string"==typeof e?{pathname:e,key:n}:"object"==typeof e&&e?a({},e,{key:n}):void c.default(!1)}),null==g?g=m.length-1:g>=0&&g<m.length?void 0:c.default(!1);var v=o(m);return p}n.__esModule=!0;var a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},s=t(13),l=(i(s),t(8)),c=i(l),u=t(23),d=t(22),p=t(87),h=i(p);n.default=r,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){function n(n){var t=e();if("string"==typeof t)return(n||window.event).returnValue=t,t}return c.addEventListener(window,"beforeunload",n),function(){c.removeEventListener(window,"beforeunload",n)}}function r(e){return function(n){function t(){for(var e=void 0,n=0,t=p.length;null==e&&n<t;++n)e=p[n].call();return e}function i(e){return p.push(e),1===p.length&&l.canUseDOM&&(u=o(t)),function(){p=p.filter(function(n){return n!==e}),0===p.length&&u&&(u(),u=null)}}function r(e){l.canUseDOM&&p.indexOf(e)===-1&&(p.push(e),1===p.length&&(u=o(t)))}function s(e){p.length>0&&(p=p.filter(function(n){return n!==e}),0===p.length&&u())}var c=e(n),u=void 0,p=[];return a({},c,{listenBeforeUnload:i,registerBeforeUnloadHook:d.default(r,"registerBeforeUnloadHook is deprecated; use listenBeforeUnload instead"),unregisterBeforeUnloadHook:d.default(s,"unregisterBeforeUnloadHook is deprecated; use the callback returned from listenBeforeUnload instead")})}}n.__esModule=!0;var a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},s=t(13),l=(i(s),t(34)),c=t(40),u=t(24),d=i(u);n.default=r,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n){var t={};for(var i in e)n.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}function r(e){return 0===e.button}function a(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}function s(e){for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n))return!1;return!0}function l(e,n){var t=n.query,i=n.hash,o=n.state;return t||i||o?{pathname:e,query:t,hash:i,state:o}:e}n.__esModule=!0;var c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},u=t(1),d=i(u),p=t(6),h=(i(p),t(8)),f=i(h),m=t(56),g=d.default.PropTypes,v=g.bool,y=g.object,b=g.string,T=g.func,w=g.oneOfType,E=d.default.createClass({displayName:"Link",contextTypes:{router:m.routerShape},propTypes:{to:w([b,y]),query:y,hash:b,state:y,activeStyle:y,activeClassName:b,onlyActiveOnIndex:v.isRequired,onClick:T,target:b},getDefaultProps:function(){return{onlyActiveOnIndex:!1,style:{}}},handleClick:function(e){if(this.props.onClick&&this.props.onClick(e),!e.defaultPrevented&&(this.context.router?void 0:(0,f.default)(!1),!a(e)&&r(e)&&!this.props.target)){e.preventDefault();var n=this.props,t=n.to,i=n.query,o=n.hash,s=n.state,c=l(t,{query:i,hash:o,state:s});this.context.router.push(c)}},render:function(){var e=this.props,n=e.to,t=e.query,i=e.hash,r=e.state,a=e.activeClassName,u=e.activeStyle,p=e.onlyActiveOnIndex,h=o(e,["to","query","hash","state","activeClassName","activeStyle","onlyActiveOnIndex"]),f=this.context.router;if(f){if(null==n)return d.default.createElement("a",h);var m=l(n,{query:t,hash:i,state:r});h.href=f.createHref(m),(a||null!=u&&!s(u))&&f.isActive(m,p)&&(a&&(h.className?h.className+=" "+a:h.className=a),u&&(h.style=c({},h.style,u)))}return d.default.createElement("a",c({},h,{onClick:this.handleClick}))}});n.default=E,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(1),r=i(o),a=t(8),s=i(a),l=t(18),c=t(30),u=t(25),d=r.default.PropTypes,p=d.string,h=d.object,f=r.default.createClass({displayName:"Redirect",statics:{createRouteFromReactElement:function(e){var n=(0,l.createRouteFromReactElement)(e);return n.from&&(n.path=n.from),n.onEnter=function(e,t){var i=e.location,o=e.params,r=void 0;if("/"===n.to.charAt(0))r=(0,c.formatPattern)(n.to,o);else if(n.to){var a=e.routes.indexOf(n),s=f.getRoutePattern(e.routes,a-1),l=s.replace(/\/*$/,"/")+n.to;r=(0,c.formatPattern)(l,o)}else r=i.pathname;t({pathname:r,query:n.query||i.query,state:n.state||i.state})},n},getRoutePattern:function(e,n){for(var t="",i=n;i>=0;i--){var o=e[i],r=o.path||"";if(t=r.replace(/\/*$/,"/")+t,0===r.indexOf("/"))break}return"/"+t}},propTypes:{path:p,from:p,to:p.isRequired,query:h,state:h,onEnter:u.falsy,children:u.falsy},render:function(){(0,s.default)(!1)}});n.default=f,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n){return a({},e,{setRouteLeaveHook:n.listenBeforeLeavingRoute,isActive:n.isActive})}function r(e,n){return e=a({},e,n)}n.__esModule=!0;var a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.createRouterObject=o,n.createRoutingHistory=r;var s=t(42);i(s)},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){var n=(0,u.default)(e),t=function(){return n},i=(0,a.default)((0,l.default)(t))(e);return i.__v2_compatible__=!0,i}n.__esModule=!0,n.default=o;var r=t(29),a=i(r),s=t(54),l=i(s),c=t(89),u=i(c);e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0,n.default=function(e){var n=void 0;return a&&(n=(0,r.default)(e)()),n};var o=t(98),r=i(o),a=!("undefined"==typeof window||!window.document||!window.document.createElement);e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0,n.createMemoryHistory=n.hashHistory=n.browserHistory=n.applyRouterMiddleware=n.formatPattern=n.useRouterHistory=n.match=n.routerShape=n.locationShape=n.PropTypes=n.RoutingContext=n.RouterContext=n.createRoutes=n.useRoutes=n.RouteContext=n.Lifecycle=n.History=n.Route=n.Redirect=n.IndexRoute=n.IndexRedirect=n.withRouter=n.IndexLink=n.Link=n.Router=void 0;var o=t(18);Object.defineProperty(n,"createRoutes",{enumerable:!0,get:function(){return o.createRoutes}});var r=t(56);Object.defineProperty(n,"locationShape",{enumerable:!0,get:function(){return r.locationShape}}),Object.defineProperty(n,"routerShape",{enumerable:!0,get:function(){return r.routerShape}});var a=t(30);Object.defineProperty(n,"formatPattern",{enumerable:!0,get:function(){return a.formatPattern}});var s=t(190),l=i(s),c=t(91),u=i(c),d=t(184),p=i(d),h=t(203),f=i(h),m=t(185),g=i(m),v=t(186),y=i(v),b=t(92),T=i(b),w=t(188),E=i(w),C=t(183),S=i(C),x=t(187),R=i(x),_=t(189),P=i(_),k=t(202),A=i(k),I=t(41),N=i(I),D=t(191),O=i(D),M=i(r),L=t(200),j=i(L),B=t(98),q=i(B),U=t(193),F=i(U),K=t(194),H=i(K),V=t(198),W=i(V),z=t(94),G=i(z);n.Router=l.default,n.Link=u.default,n.IndexLink=p.default,n.withRouter=f.default,n.IndexRedirect=g.default,n.IndexRoute=y.default,n.Redirect=T.default,n.Route=E.default,n.History=S.default,n.Lifecycle=R.default,n.RouteContext=P.default,n.useRoutes=A.default,n.RouterContext=N.default,n.RoutingContext=O.default,n.PropTypes=M.default,n.match=j.default,n.useRouterHistory=q.default,n.applyRouterMiddleware=F.default,n.browserHistory=H.default,n.hashHistory=W.default,n.createMemoryHistory=G.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n){return r({},e,n)}n.__esModule=!0;var r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.default=o;var a=(t(42),t(6));i(a);e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){return function(n){var t=(0,a.default)((0,l.default)(e))(n);return t.__v2_compatible__=!0,t}}n.__esModule=!0,n.default=o;var r=t(29),a=i(r),s=t(54),l=i(s);e.exports=n.default},function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={highlightCodeBlocks:function(){for(var e=document.querySelectorAll("pre code"),n=0;n<e.length;n++)e[n].classList.contains("hljs")||window.hljs.highlightBlock(e[n])},componentDidMount:function(){this.highlightCodeBlocks()},componentDidUpdate:function(){this.highlightCodeBlocks()}}},function(e,n){e.exports={Aacute:"Á",aacute:"á",Abreve:"Ă",abreve:"ă",ac:"∾",acd:"∿",acE:"∾̳",Acirc:"Â",acirc:"â",acute:"´",Acy:"А",acy:"а",AElig:"Æ",aelig:"æ",af:"⁡",Afr:"𝔄",afr:"𝔞",Agrave:"À",agrave:"à",alefsym:"ℵ",aleph:"ℵ",Alpha:"Α",alpha:"α",Amacr:"Ā",amacr:"ā",amalg:"⨿",amp:"&",AMP:"&",andand:"⩕",And:"⩓",and:"∧",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angmsd:"∡",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",Aogon:"Ą",aogon:"ą",Aopf:"𝔸",aopf:"𝕒",apacir:"⩯",ap:"≈",apE:"⩰",ape:"≊",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",Aring:"Å",aring:"å",Ascr:"𝒜",ascr:"𝒶",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",barwed:"⌅",Barwed:"⌆",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",Bcy:"Б",bcy:"б",bdquo:"„",becaus:"∵",because:"∵",Because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",Beta:"Β",beta:"β",beth:"ℶ",between:"≬",Bfr:"𝔅",bfr:"𝔟",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bNot:"⫭",bnot:"⌐",Bopf:"𝔹",bopf:"𝕓",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxdl:"┐",boxdL:"╕",boxDl:"╖",boxDL:"╗",boxdr:"┌",boxdR:"╒",boxDr:"╓",boxDR:"╔",boxh:"─",boxH:"═",boxhd:"┬",boxHd:"╤",boxhD:"╥",boxHD:"╦",boxhu:"┴",boxHu:"╧",boxhU:"╨",boxHU:"╩",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxul:"┘",boxuL:"╛",boxUl:"╜",boxUL:"╝",boxur:"└",boxuR:"╘",boxUr:"╙",boxUR:"╚",boxv:"│",boxV:"║",boxvh:"┼",boxvH:"╪",boxVh:"╫",boxVH:"╬",boxvl:"┤",boxvL:"╡",boxVl:"╢",boxVL:"╣",boxvr:"├",boxvR:"╞",boxVr:"╟",boxVR:"╠",bprime:"‵",breve:"˘",Breve:"˘",brvbar:"¦",bscr:"𝒷",Bscr:"ℬ",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsolb:"⧅",bsol:"\\",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpE:"⪮",bumpe:"≏",Bumpeq:"≎",bumpeq:"≏",Cacute:"Ć",cacute:"ć",capand:"⩄",capbrcup:"⩉",capcap:"⩋",cap:"∩",Cap:"⋒",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",Ccaron:"Č",ccaron:"č",Ccedil:"Ç",ccedil:"ç",Ccirc:"Ĉ",ccirc:"ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",Cdot:"Ċ",cdot:"ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",CenterDot:"·",cfr:"𝔠",Cfr:"ℭ",CHcy:"Ч",chcy:"ч",check:"✓",checkmark:"✓",Chi:"Χ",chi:"χ",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cir:"○",cirE:"⧃",cire:"≗",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",colon:":",Colon:"∷",Colone:"⩴",colone:"≔",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",conint:"∮",Conint:"∯",ContourIntegral:"∮",copf:"𝕔",Copf:"ℂ",coprod:"∐",Coproduct:"∐",copy:"©",COPY:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",cross:"✗",Cross:"⨯",Cscr:"𝒞",cscr:"𝒸",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cupbrcap:"⩈",cupcap:"⩆",CupCap:"≍",cup:"∪",Cup:"⋓",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dagger:"†",Dagger:"‡",daleth:"ℸ",darr:"↓",Darr:"↡",dArr:"⇓",dash:"‐",Dashv:"⫤",dashv:"⊣",dbkarow:"⤏",dblac:"˝",Dcaron:"Ď",dcaron:"ď",Dcy:"Д",dcy:"д",ddagger:"‡",ddarr:"⇊",DD:"ⅅ",dd:"ⅆ",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",Delta:"Δ",delta:"δ",demptyv:"⦱",dfisht:"⥿",Dfr:"𝔇",dfr:"𝔡",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",diamond:"⋄",Diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",DJcy:"Ђ",djcy:"ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",Dopf:"𝔻",dopf:"𝕕",Dot:"¨",dot:"˙",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",DownArrowBar:"⤓",downarrow:"↓",DownArrow:"↓",Downarrow:"⇓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVectorBar:"⥖",DownLeftVector:"↽",DownRightTeeVector:"⥟",DownRightVectorBar:"⥗",DownRightVector:"⇁",DownTeeArrow:"↧",DownTee:"⊤",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",Dscr:"𝒟",dscr:"𝒹",DScy:"Ѕ",dscy:"ѕ",dsol:"⧶",Dstrok:"Đ",dstrok:"đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",DZcy:"Џ",dzcy:"џ",dzigrarr:"⟿",Eacute:"É",eacute:"é",easter:"⩮",Ecaron:"Ě",ecaron:"ě",Ecirc:"Ê",ecirc:"ê",ecir:"≖",ecolon:"≕",Ecy:"Э",ecy:"э",eDDot:"⩷",Edot:"Ė",edot:"ė",eDot:"≑",ee:"ⅇ",efDot:"≒",Efr:"𝔈",efr:"𝔢",eg:"⪚",Egrave:"È",egrave:"è",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",Emacr:"Ē",emacr:"ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp13:" ",emsp14:" ",emsp:" ",ENG:"Ŋ",eng:"ŋ",ensp:" ",Eogon:"Ę",eogon:"ę",Eopf:"𝔼",eopf:"𝕖",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",Epsilon:"Ε",epsilon:"ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",escr:"ℯ",Escr:"ℰ",esdot:"≐",Esim:"⩳",esim:"≂",Eta:"Η",eta:"η",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",exponentiale:"ⅇ",ExponentialE:"ⅇ",fallingdotseq:"≒",Fcy:"Ф",fcy:"ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",Ffr:"𝔉",ffr:"𝔣",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",Fopf:"𝔽",fopf:"𝕗",forall:"∀",ForAll:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",Fscr:"ℱ",gacute:"ǵ",Gamma:"Γ",gamma:"γ",Gammad:"Ϝ",gammad:"ϝ",gap:"⪆",Gbreve:"Ğ",gbreve:"ğ",Gcedil:"Ģ",Gcirc:"Ĝ",gcirc:"ĝ",Gcy:"Г",gcy:"г",Gdot:"Ġ",gdot:"ġ",ge:"≥",gE:"≧",gEl:"⪌",gel:"⋛",geq:"≥",geqq:"≧",geqslant:"⩾",gescc:"⪩",ges:"⩾",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",Gfr:"𝔊",gfr:"𝔤",gg:"≫",Gg:"⋙",ggg:"⋙",gimel:"ℷ",GJcy:"Ѓ",gjcy:"ѓ",gla:"⪥",gl:"≷",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gnE:"≩",gneq:"⪈",gneqq:"≩",gnsim:"⋧",Gopf:"𝔾",gopf:"𝕘",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",Gscr:"𝒢",gscr:"ℊ",gsim:"≳",gsime:"⪎",gsiml:"⪐",gtcc:"⪧",gtcir:"⩺",gt:">",GT:">",Gt:"≫",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",HARDcy:"Ъ",hardcy:"ъ",harrcir:"⥈",harr:"↔",hArr:"⇔",harrw:"↭",Hat:"^",hbar:"ℏ",Hcirc:"Ĥ",hcirc:"ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",Hfr:"ℌ",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",Hopf:"ℍ",horbar:"―",HorizontalLine:"─",hscr:"𝒽",Hscr:"ℋ",hslash:"ℏ",Hstrok:"Ħ",hstrok:"ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",Iacute:"Í",iacute:"í",ic:"⁣",Icirc:"Î",icirc:"î",Icy:"И",icy:"и",Idot:"İ",IEcy:"Е",iecy:"е",iexcl:"¡",iff:"⇔",ifr:"𝔦",Ifr:"ℑ",Igrave:"Ì",igrave:"ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",IJlig:"Ĳ",ijlig:"ĳ",Imacr:"Ī",imacr:"ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",Im:"ℑ",imof:"⊷",imped:"Ƶ",Implies:"⇒",incare:"℅",in:"∈",infin:"∞",infintie:"⧝",inodot:"ı",intcal:"⊺",int:"∫",Int:"∬",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",IOcy:"Ё",iocy:"ё",Iogon:"Į",iogon:"į",Iopf:"𝕀",iopf:"𝕚",Iota:"Ι",iota:"ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",Iscr:"ℐ",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",Itilde:"Ĩ",itilde:"ĩ",Iukcy:"І",iukcy:"і",Iuml:"Ï",iuml:"ï",Jcirc:"Ĵ",jcirc:"ĵ",Jcy:"Й",jcy:"й",Jfr:"𝔍",jfr:"𝔧",jmath:"ȷ",Jopf:"𝕁",jopf:"𝕛",Jscr:"𝒥",jscr:"𝒿",Jsercy:"Ј",jsercy:"ј",Jukcy:"Є",jukcy:"є",Kappa:"Κ",kappa:"κ",kappav:"ϰ",Kcedil:"Ķ",kcedil:"ķ",Kcy:"К",kcy:"к",Kfr:"𝔎",kfr:"𝔨",kgreen:"ĸ",KHcy:"Х",khcy:"х",KJcy:"Ќ",kjcy:"ќ",Kopf:"𝕂",kopf:"𝕜",Kscr:"𝒦",kscr:"𝓀",lAarr:"⇚",Lacute:"Ĺ",lacute:"ĺ",laemptyv:"⦴",lagran:"ℒ",Lambda:"Λ",lambda:"λ",lang:"⟨",Lang:"⟪",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",larrb:"⇤",larrbfs:"⤟",larr:"←",Larr:"↞",lArr:"⇐",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",latail:"⤙",lAtail:"⤛",lat:"⪫",late:"⪭",lates:"⪭︀",lbarr:"⤌",lBarr:"⤎",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",Lcaron:"Ľ",lcaron:"ľ",Lcedil:"Ļ",lcedil:"ļ",lceil:"⌈",lcub:"{",Lcy:"Л",lcy:"л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",lE:"≦",LeftAngleBracket:"⟨",LeftArrowBar:"⇤",leftarrow:"←",LeftArrow:"←",Leftarrow:"⇐",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVectorBar:"⥙",LeftDownVector:"⇃",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",LeftRightArrow:"↔",Leftrightarrow:"⇔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTeeArrow:"↤",LeftTee:"⊣",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangleBar:"⧏",LeftTriangle:"⊲",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVectorBar:"⥘",LeftUpVector:"↿",LeftVectorBar:"⥒",LeftVector:"↼",lEg:"⪋",leg:"⋚",leq:"≤",leqq:"≦",leqslant:"⩽",lescc:"⪨",les:"⩽",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",Lfr:"𝔏",lfr:"𝔩",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",LJcy:"Љ",ljcy:"љ",llarr:"⇇",ll:"≪",Ll:"⋘",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",Lmidot:"Ŀ",lmidot:"ŀ",lmoustache:"⎰",lmoust:"⎰",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lnE:"≨",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",LongLeftArrow:"⟵",Longleftarrow:"⟸",longleftrightarrow:"⟷",LongLeftRightArrow:"⟷",Longleftrightarrow:"⟺",longmapsto:"⟼",longrightarrow:"⟶",LongRightArrow:"⟶",Longrightarrow:"⟹",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",Lopf:"𝕃",lopf:"𝕝",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",Lscr:"ℒ",lsh:"↰",Lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",Lstrok:"Ł",lstrok:"ł",ltcc:"⪦",ltcir:"⩹",lt:"<",LT:"<",Lt:"≪",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",Map:"⤅",map:"↦",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",Mcy:"М",mcy:"м",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",Mfr:"𝔐",mfr:"𝔪",mho:"℧",micro:"µ",midast:"*",midcir:"⫰",mid:"∣",middot:"·",minusb:"⊟",
minus:"−",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",Mopf:"𝕄",mopf:"𝕞",mp:"∓",mscr:"𝓂",Mscr:"ℳ",mstpos:"∾",Mu:"Μ",mu:"μ",multimap:"⊸",mumap:"⊸",nabla:"∇",Nacute:"Ń",nacute:"ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natural:"♮",naturals:"ℕ",natur:"♮",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",Ncaron:"Ň",ncaron:"ň",Ncedil:"Ņ",ncedil:"ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",Ncy:"Н",ncy:"н",ndash:"–",nearhk:"⤤",nearr:"↗",neArr:"⇗",nearrow:"↗",ne:"≠",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",Nfr:"𝔑",nfr:"𝔫",ngE:"≧̸",nge:"≱",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",nGt:"≫⃒",ngt:"≯",ngtr:"≯",nGtv:"≫̸",nharr:"↮",nhArr:"⇎",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",NJcy:"Њ",njcy:"њ",nlarr:"↚",nlArr:"⇍",nldr:"‥",nlE:"≦̸",nle:"≰",nleftarrow:"↚",nLeftarrow:"⇍",nleftrightarrow:"↮",nLeftrightarrow:"⇎",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nLt:"≪⃒",nlt:"≮",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",nopf:"𝕟",Nopf:"ℕ",Not:"⫬",not:"¬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangleBar:"⧏̸",NotLeftTriangle:"⋪",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangleBar:"⧐̸",NotRightTriangle:"⋫",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",nparallel:"∦",npar:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",nprec:"⊀",npreceq:"⪯̸",npre:"⪯̸",nrarrc:"⤳̸",nrarr:"↛",nrArr:"⇏",nrarrw:"↝̸",nrightarrow:"↛",nRightarrow:"⇏",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",Nscr:"𝒩",nscr:"𝓃",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsubE:"⫅̸",nsube:"⊈",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupE:"⫆̸",nsupe:"⊉",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",Ntilde:"Ñ",ntilde:"ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",Nu:"Ν",nu:"ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nvdash:"⊬",nvDash:"⊭",nVdash:"⊮",nVDash:"⊯",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwarr:"↖",nwArr:"⇖",nwarrow:"↖",nwnear:"⤧",Oacute:"Ó",oacute:"ó",oast:"⊛",Ocirc:"Ô",ocirc:"ô",ocir:"⊚",Ocy:"О",ocy:"о",odash:"⊝",Odblac:"Ő",odblac:"ő",odiv:"⨸",odot:"⊙",odsold:"⦼",OElig:"Œ",oelig:"œ",ofcir:"⦿",Ofr:"𝔒",ofr:"𝔬",ogon:"˛",Ograve:"Ò",ograve:"ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",Omacr:"Ō",omacr:"ō",Omega:"Ω",omega:"ω",Omicron:"Ο",omicron:"ο",omid:"⦶",ominus:"⊖",Oopf:"𝕆",oopf:"𝕠",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",orarr:"↻",Or:"⩔",or:"∨",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",Oscr:"𝒪",oscr:"ℴ",Oslash:"Ø",oslash:"ø",osol:"⊘",Otilde:"Õ",otilde:"õ",otimesas:"⨶",Otimes:"⨷",otimes:"⊗",Ouml:"Ö",ouml:"ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",para:"¶",parallel:"∥",par:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",Pcy:"П",pcy:"п",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",Pfr:"𝔓",pfr:"𝔭",Phi:"Φ",phi:"φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",Pi:"Π",pi:"π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plus:"+",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",popf:"𝕡",Popf:"ℙ",pound:"£",prap:"⪷",Pr:"⪻",pr:"≺",prcue:"≼",precapprox:"⪷",prec:"≺",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",pre:"⪯",prE:"⪳",precsim:"≾",prime:"′",Prime:"″",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportional:"∝",Proportion:"∷",propto:"∝",prsim:"≾",prurel:"⊰",Pscr:"𝒫",pscr:"𝓅",Psi:"Ψ",psi:"ψ",puncsp:" ",Qfr:"𝔔",qfr:"𝔮",qint:"⨌",qopf:"𝕢",Qopf:"ℚ",qprime:"⁗",Qscr:"𝒬",qscr:"𝓆",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:'"',QUOT:'"',rAarr:"⇛",race:"∽̱",Racute:"Ŕ",racute:"ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",Rang:"⟫",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarr:"→",Rarr:"↠",rArr:"⇒",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",Rarrtl:"⤖",rarrtl:"↣",rarrw:"↝",ratail:"⤚",rAtail:"⤜",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rBarr:"⤏",RBarr:"⤐",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",Rcaron:"Ř",rcaron:"ř",Rcedil:"Ŗ",rcedil:"ŗ",rceil:"⌉",rcub:"}",Rcy:"Р",rcy:"р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",Re:"ℜ",rect:"▭",reg:"®",REG:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",Rfr:"ℜ",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",Rho:"Ρ",rho:"ρ",rhov:"ϱ",RightAngleBracket:"⟩",RightArrowBar:"⇥",rightarrow:"→",RightArrow:"→",Rightarrow:"⇒",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVectorBar:"⥕",RightDownVector:"⇂",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTeeArrow:"↦",RightTee:"⊢",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangleBar:"⧐",RightTriangle:"⊳",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVectorBar:"⥔",RightUpVector:"↾",RightVectorBar:"⥓",RightVector:"⇀",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoustache:"⎱",rmoust:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",Ropf:"ℝ",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",rscr:"𝓇",Rscr:"ℛ",rsh:"↱",Rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",Sacute:"Ś",sacute:"ś",sbquo:"‚",scap:"⪸",Scaron:"Š",scaron:"š",Sc:"⪼",sc:"≻",sccue:"≽",sce:"⪰",scE:"⪴",Scedil:"Ş",scedil:"ş",Scirc:"Ŝ",scirc:"ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",Scy:"С",scy:"с",sdotb:"⊡",sdot:"⋅",sdote:"⩦",searhk:"⤥",searr:"↘",seArr:"⇘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",Sfr:"𝔖",sfr:"𝔰",sfrown:"⌢",sharp:"♯",SHCHcy:"Щ",shchcy:"щ",SHcy:"Ш",shcy:"ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",Sigma:"Σ",sigma:"σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",SOFTcy:"Ь",softcy:"ь",solbar:"⌿",solb:"⧄",sol:"/",Sopf:"𝕊",sopf:"𝕤",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",square:"□",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squ:"□",squf:"▪",srarr:"→",Sscr:"𝒮",sscr:"𝓈",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",Star:"⋆",star:"☆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",Sub:"⋐",subdot:"⪽",subE:"⫅",sube:"⊆",subedot:"⫃",submult:"⫁",subnE:"⫋",subne:"⊊",subplus:"⪿",subrarr:"⥹",subset:"⊂",Subset:"⋐",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succapprox:"⪸",succ:"≻",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",sum:"∑",Sum:"∑",sung:"♪",sup1:"¹",sup2:"²",sup3:"³",sup:"⊃",Sup:"⋑",supdot:"⪾",supdsub:"⫘",supE:"⫆",supe:"⊇",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supnE:"⫌",supne:"⊋",supplus:"⫀",supset:"⊃",Supset:"⋑",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swarr:"↙",swArr:"⇙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",Tau:"Τ",tau:"τ",tbrk:"⎴",Tcaron:"Ť",tcaron:"ť",Tcedil:"Ţ",tcedil:"ţ",Tcy:"Т",tcy:"т",tdot:"⃛",telrec:"⌕",Tfr:"𝔗",tfr:"𝔱",there4:"∴",therefore:"∴",Therefore:"∴",Theta:"Θ",theta:"θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",ThinSpace:" ",thinsp:" ",thkap:"≈",thksim:"∼",THORN:"Þ",thorn:"þ",tilde:"˜",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",timesbar:"⨱",timesb:"⊠",times:"×",timesd:"⨰",tint:"∭",toea:"⤨",topbot:"⌶",topcir:"⫱",top:"⊤",Topf:"𝕋",topf:"𝕥",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",TRADE:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",Tscr:"𝒯",tscr:"𝓉",TScy:"Ц",tscy:"ц",TSHcy:"Ћ",tshcy:"ћ",Tstrok:"Ŧ",tstrok:"ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",Uacute:"Ú",uacute:"ú",uarr:"↑",Uarr:"↟",uArr:"⇑",Uarrocir:"⥉",Ubrcy:"Ў",ubrcy:"ў",Ubreve:"Ŭ",ubreve:"ŭ",Ucirc:"Û",ucirc:"û",Ucy:"У",ucy:"у",udarr:"⇅",Udblac:"Ű",udblac:"ű",udhar:"⥮",ufisht:"⥾",Ufr:"𝔘",ufr:"𝔲",Ugrave:"Ù",ugrave:"ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",Umacr:"Ū",umacr:"ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",Uogon:"Ų",uogon:"ų",Uopf:"𝕌",uopf:"𝕦",UpArrowBar:"⤒",uparrow:"↑",UpArrow:"↑",Uparrow:"⇑",UpArrowDownArrow:"⇅",updownarrow:"↕",UpDownArrow:"↕",Updownarrow:"⇕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",upsi:"υ",Upsi:"ϒ",upsih:"ϒ",Upsilon:"Υ",upsilon:"υ",UpTeeArrow:"↥",UpTee:"⊥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",Uring:"Ů",uring:"ů",urtri:"◹",Uscr:"𝒰",uscr:"𝓊",utdot:"⋰",Utilde:"Ũ",utilde:"ũ",utri:"▵",utrif:"▴",uuarr:"⇈",Uuml:"Ü",uuml:"ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",vArr:"⇕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vBar:"⫨",Vbar:"⫫",vBarv:"⫩",Vcy:"В",vcy:"в",vdash:"⊢",vDash:"⊨",Vdash:"⊩",VDash:"⊫",Vdashl:"⫦",veebar:"⊻",vee:"∨",Vee:"⋁",veeeq:"≚",vellip:"⋮",verbar:"|",Verbar:"‖",vert:"|",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",Vfr:"𝔙",vfr:"𝔳",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",Vopf:"𝕍",vopf:"𝕧",vprop:"∝",vrtri:"⊳",Vscr:"𝒱",vscr:"𝓋",vsubnE:"⫋︀",vsubne:"⊊︀",vsupnE:"⫌︀",vsupne:"⊋︀",Vvdash:"⊪",vzigzag:"⦚",Wcirc:"Ŵ",wcirc:"ŵ",wedbar:"⩟",wedge:"∧",Wedge:"⋀",wedgeq:"≙",weierp:"℘",Wfr:"𝔚",wfr:"𝔴",Wopf:"𝕎",wopf:"𝕨",wp:"℘",wr:"≀",wreath:"≀",Wscr:"𝒲",wscr:"𝓌",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",Xfr:"𝔛",xfr:"𝔵",xharr:"⟷",xhArr:"⟺",Xi:"Ξ",xi:"ξ",xlarr:"⟵",xlArr:"⟸",xmap:"⟼",xnis:"⋻",xodot:"⨀",Xopf:"𝕏",xopf:"𝕩",xoplus:"⨁",xotime:"⨂",xrarr:"⟶",xrArr:"⟹",Xscr:"𝒳",xscr:"𝓍",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",Yacute:"Ý",yacute:"ý",YAcy:"Я",yacy:"я",Ycirc:"Ŷ",ycirc:"ŷ",Ycy:"Ы",ycy:"ы",yen:"¥",Yfr:"𝔜",yfr:"𝔶",YIcy:"Ї",yicy:"ї",Yopf:"𝕐",yopf:"𝕪",Yscr:"𝒴",yscr:"𝓎",YUcy:"Ю",yucy:"ю",yuml:"ÿ",Yuml:"Ÿ",Zacute:"Ź",zacute:"ź",Zcaron:"Ž",zcaron:"ž",Zcy:"З",zcy:"з",Zdot:"Ż",zdot:"ż",zeetrf:"ℨ",ZeroWidthSpace:"​",Zeta:"Ζ",zeta:"ζ",zfr:"𝔷",Zfr:"ℨ",ZHcy:"Ж",zhcy:"ж",zigrarr:"⇝",zopf:"𝕫",Zopf:"ℤ",Zscr:"𝒵",zscr:"𝓏",zwj:"‍",zwnj:"‌"}},function(e,n){e.exports={amp:"&",apos:"'",gt:">",lt:"<",quot:'"'}},function(e,n,t){"use strict";function i(){}function o(e){try{return e.then}catch(n){return v=n,y}}function r(e,n){try{return e(n)}catch(t){return v=t,y}}function a(e,n,t){try{e(n,t)}catch(i){return v=i,y}}function s(e){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._45=0,this._81=0,this._65=null,this._54=null,e!==i&&m(e,this)}function l(e,n,t){return new e.constructor(function(o,r){var a=new s(i);a.then(o,r),c(e,new f(n,t,a))})}function c(e,n){for(;3===e._81;)e=e._65;return s._10&&s._10(e),0===e._81?0===e._45?(e._45=1,void(e._54=n)):1===e._45?(e._45=2,void(e._54=[e._54,n])):void e._54.push(n):void u(e,n)}function u(e,n){g(function(){var t=1===e._81?n.onFulfilled:n.onRejected;if(null===t)return void(1===e._81?d(n.promise,e._65):p(n.promise,e._65));var i=r(t,e._65);i===y?p(n.promise,v):d(n.promise,i)})}function d(e,n){if(n===e)return p(e,new TypeError("A promise cannot be resolved with itself."));if(n&&("object"==typeof n||"function"==typeof n)){var t=o(n);if(t===y)return p(e,v);if(t===e.then&&n instanceof s)return e._81=3,e._65=n,void h(e);if("function"==typeof t)return void m(t.bind(n),e)}e._81=1,e._65=n,h(e)}function p(e,n){e._81=2,e._65=n,s._97&&s._97(e,n),h(e)}function h(e){if(1===e._45&&(c(e,e._54),e._54=null),2===e._45){for(var n=0;n<e._54.length;n++)c(e,e._54[n]);e._54=null}}function f(e,n,t){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof n?n:null,this.promise=t}function m(e,n){var t=!1,i=a(e,function(e){t||(t=!0,d(n,e))},function(e){t||(t=!0,p(n,e))});t||i!==y||(t=!0,p(n,v))}var g=t(206),v=null,y={};e.exports=s,s._10=null,s._97=null,s._61=i,s.prototype.then=function(e,n){if(this.constructor!==s)return l(this,e,n);var t=new s(i);return c(this,new f(e,n,t)),t}},function(e,n){"use strict";function t(e,n){return e+n.charAt(0).toUpperCase()+n.substring(1)}var i={animationIterationCount:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,stopOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0},o=["Webkit","ms","Moz","O"];Object.keys(i).forEach(function(e){o.forEach(function(n){i[t(n,e)]=i[e]})});var r={background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}},a={isUnitlessNumber:i,shorthandPropertyExpansions:r};e.exports=a},function(e,n,t){"use strict";function i(e,n,t){var i=t>=e.childNodes.length?null:e.childNodes.item(t);e.insertBefore(n,i)}var o=t(241),r=t(121),a=t(11),s=t(50),l=t(73),c=t(2),u={dangerouslyReplaceNodeWithMarkup:o.dangerouslyReplaceNodeWithMarkup,updateTextContent:l,processUpdates:function(e,n){for(var t,a=null,u=null,d=0;d<e.length;d++)if(t=e[d],t.type===r.MOVE_EXISTING||t.type===r.REMOVE_NODE){var p=t.fromIndex,h=t.parentNode.childNodes[p],f=t.parentID;h?void 0:c(!1),a=a||{},a[f]=a[f]||[],a[f][p]=h,u=u||[],u.push(h)}var m;if(m=n.length&&"string"==typeof n[0]?o.dangerouslyRenderMarkup(n):n,u)for(var g=0;g<u.length;g++)u[g].parentNode.removeChild(u[g]);for(var v=0;v<e.length;v++)switch(t=e[v],t.type){case r.INSERT_MARKUP:i(t.parentNode,m[t.markupIndex],t.toIndex);break;case r.MOVE_EXISTING:i(t.parentNode,a[t.parentID][t.fromIndex],t.toIndex);break;case r.SET_MARKUP:s(t.parentNode,t.content);break;case r.TEXT_CONTENT:l(t.parentNode,t.content);break;case r.REMOVE_NODE:}}};a.measureMethods(u,"DOMChildrenOperations",{updateTextContent:"updateTextContent"}),e.exports=u},function(e,n,t){"use strict";function i(){if(s)for(var e in l){var n=l[e],t=s.indexOf(e);if(t>-1?void 0:a(!1),!c.plugins[t]){n.extractEvents?void 0:a(!1),c.plugins[t]=n;var i=n.eventTypes;for(var r in i)o(i[r],n,r)?void 0:a(!1)}}}function o(e,n,t){c.eventNameDispatchConfigs.hasOwnProperty(t)?a(!1):void 0,c.eventNameDispatchConfigs[t]=e;var i=e.phasedRegistrationNames;if(i){for(var o in i)if(i.hasOwnProperty(o)){var s=i[o];r(s,n,t)}return!0}return!!e.registrationName&&(r(e.registrationName,n,t),!0)}function r(e,n,t){c.registrationNameModules[e]?a(!1):void 0,c.registrationNameModules[e]=n,c.registrationNameDependencies[e]=n.eventTypes[t].dependencies}var a=t(2),s=null,l={},c={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},injectEventPluginOrder:function(e){s?a(!1):void 0,s=Array.prototype.slice.call(e),i()},injectEventPluginsByName:function(e){var n=!1;for(var t in e)if(e.hasOwnProperty(t)){var o=e[t];l.hasOwnProperty(t)&&l[t]===o||(l[t]?a(!1):void 0,l[t]=o,n=!0)}n&&i()},getPluginModuleForEvent:function(e){var n=e.dispatchConfig;if(n.registrationName)return c.registrationNameModules[n.registrationName]||null;for(var t in n.phasedRegistrationNames)if(n.phasedRegistrationNames.hasOwnProperty(t)){var i=c.registrationNameModules[n.phasedRegistrationNames[t]];if(i)return i}return null},_resetEventPlugins:function(){s=null;for(var e in l)l.hasOwnProperty(e)&&delete l[e];c.plugins.length=0;var n=c.eventNameDispatchConfigs;for(var t in n)n.hasOwnProperty(t)&&delete n[t];var i=c.registrationNameModules;for(var o in i)i.hasOwnProperty(o)&&delete i[o]}};e.exports=c},function(e,n,t){"use strict";function i(e){return(""+e).replace(T,"//")}function o(e,n){this.func=e,this.context=n,this.count=0}function r(e,n,t){var i=e.func,o=e.context;i.call(o,n,e.count++)}function a(e,n,t){if(null==e)return e;var i=o.getPooled(n,t);v(e,r,i),o.release(i)}function s(e,n,t,i){this.result=e,this.keyPrefix=n,this.func=t,this.context=i,this.count=0}function l(e,n,t){var o=e.result,r=e.keyPrefix,a=e.func,s=e.context,l=a.call(s,n,e.count++);Array.isArray(l)?c(l,o,t,g.thatReturnsArgument):null!=l&&(m.isValidElement(l)&&(l=m.cloneAndReplaceKey(l,r+(l!==n?i(l.key||"")+"/":"")+t)),o.push(l))}function c(e,n,t,o,r){var a="";null!=t&&(a=i(t)+"/");var c=s.getPooled(n,a,o,r);v(e,l,c),s.release(c)}function u(e,n,t){if(null==e)return e;var i=[];return c(e,i,null,n,t),i}function d(e,n,t){return null}function p(e,n){return v(e,d,null)}function h(e){var n=[];return c(e,n,null,g.thatReturnsArgument),n}var f=t(21),m=t(10),g=t(14),v=t(75),y=f.twoArgumentPooler,b=f.fourArgumentPooler,T=/\/(?!\/)/g;o.prototype.destructor=function(){this.func=null,this.context=null,this.count=0},f.addPoolingTo(o,y),s.prototype.destructor=function(){this.result=null,this.keyPrefix=null,this.func=null,this.context=null,this.count=0},f.addPoolingTo(s,b);var w={forEach:a,map:u,mapIntoWithKeyPrefixInternal:c,count:p,toArray:h};e.exports=w},function(e,n,t){"use strict";function i(e,n){var t=E.hasOwnProperty(n)?E[n]:null;S.hasOwnProperty(n)&&(t!==T.OVERRIDE_BASE?g(!1):void 0),e.hasOwnProperty(n)&&(t!==T.DEFINE_MANY&&t!==T.DEFINE_MANY_MERGED?g(!1):void 0)}function o(e,n){if(n){"function"==typeof n?g(!1):void 0,p.isValidElement(n)?g(!1):void 0;var t=e.prototype;n.hasOwnProperty(b)&&C.mixins(e,n.mixins);for(var o in n)if(n.hasOwnProperty(o)&&o!==b){var r=n[o];if(i(t,o),C.hasOwnProperty(o))C[o](e,r);else{var a=E.hasOwnProperty(o),c=t.hasOwnProperty(o),u="function"==typeof r,d=u&&!a&&!c&&n.autobind!==!1;if(d)t.__reactAutoBindMap||(t.__reactAutoBindMap={}),t.__reactAutoBindMap[o]=r,t[o]=r;else if(c){var h=E[o];!a||h!==T.DEFINE_MANY_MERGED&&h!==T.DEFINE_MANY?g(!1):void 0,h===T.DEFINE_MANY_MERGED?t[o]=s(t[o],r):h===T.DEFINE_MANY&&(t[o]=l(t[o],r))}else t[o]=r}}}}function r(e,n){if(n)for(var t in n){var i=n[t];if(n.hasOwnProperty(t)){var o=t in C;o?g(!1):void 0;var r=t in e;r?g(!1):void 0,e[t]=i}}}function a(e,n){e&&n&&"object"==typeof e&&"object"==typeof n?void 0:g(!1);for(var t in n)n.hasOwnProperty(t)&&(void 0!==e[t]?g(!1):void 0,e[t]=n[t]);return e}function s(e,n){return function(){var t=e.apply(this,arguments),i=n.apply(this,arguments);if(null==t)return i;if(null==i)return t;var o={};return a(o,t),a(o,i),o}}function l(e,n){return function(){e.apply(this,arguments),n.apply(this,arguments)}}function c(e,n){var t=n.bind(e);return t}function u(e){for(var n in e.__reactAutoBindMap)if(e.__reactAutoBindMap.hasOwnProperty(n)){var t=e.__reactAutoBindMap[n];e[n]=c(e,t)}}var d=t(108),p=t(10),h=(t(45),t(44),t(123)),f=t(4),m=t(33),g=t(2),v=t(39),y=t(17),b=(t(3),y({mixins:null})),T=v({DEFINE_ONCE:null,DEFINE_MANY:null,OVERRIDE_BASE:null,DEFINE_MANY_MERGED:null}),w=[],E={mixins:T.DEFINE_MANY,statics:T.DEFINE_MANY,propTypes:T.DEFINE_MANY,contextTypes:T.DEFINE_MANY,childContextTypes:T.DEFINE_MANY,getDefaultProps:T.DEFINE_MANY_MERGED,getInitialState:T.DEFINE_MANY_MERGED,getChildContext:T.DEFINE_MANY_MERGED,render:T.DEFINE_ONCE,componentWillMount:T.DEFINE_MANY,componentDidMount:T.DEFINE_MANY,componentWillReceiveProps:T.DEFINE_MANY,shouldComponentUpdate:T.DEFINE_ONCE,componentWillUpdate:T.DEFINE_MANY,componentDidUpdate:T.DEFINE_MANY,componentWillUnmount:T.DEFINE_MANY,updateComponent:T.OVERRIDE_BASE},C={displayName:function(e,n){e.displayName=n},mixins:function(e,n){if(n)for(var t=0;t<n.length;t++)o(e,n[t])},childContextTypes:function(e,n){e.childContextTypes=f({},e.childContextTypes,n)},contextTypes:function(e,n){e.contextTypes=f({},e.contextTypes,n)},getDefaultProps:function(e,n){e.getDefaultProps?e.getDefaultProps=s(e.getDefaultProps,n):e.getDefaultProps=n},propTypes:function(e,n){e.propTypes=f({},e.propTypes,n)},statics:function(e,n){r(e,n)},autobind:function(){}},S={replaceState:function(e,n){this.updater.enqueueReplaceState(this,e),n&&this.updater.enqueueCallback(this,n)},isMounted:function(){return this.updater.isMounted(this)},setProps:function(e,n){this.updater.enqueueSetProps(this,e),n&&this.updater.enqueueCallback(this,n)},replaceProps:function(e,n){this.updater.enqueueReplaceProps(this,e),n&&this.updater.enqueueCallback(this,n)}},x=function(){};f(x.prototype,d.prototype,S);var R={createClass:function(e){var n=function(e,n,t){this.__reactAutoBindMap&&u(this),this.props=e,this.context=n,this.refs=m,this.updater=t||h,this.state=null;var i=this.getInitialState?this.getInitialState():null;"object"!=typeof i||Array.isArray(i)?g(!1):void 0,this.state=i};n.prototype=new x,n.prototype.constructor=n,w.forEach(o.bind(null,n)),o(n,e),n.getDefaultProps&&(n.defaultProps=n.getDefaultProps()),n.prototype.render?void 0:g(!1);for(var t in E)n.prototype[t]||(n.prototype[t]=null);return n},injection:{injectMixin:function(e){w.push(e)}}};e.exports=R},function(e,n,t){"use strict";function i(e,n,t){this.props=e,this.context=n,this.refs=r,this.updater=t||o}var o=t(123),r=(t(48),t(33)),a=t(2);t(3);i.prototype.isReactComponent={},i.prototype.setState=function(e,n){"object"!=typeof e&&"function"!=typeof e&&null!=e?a(!1):void 0,this.updater.enqueueSetState(this,e),n&&this.updater.enqueueCallback(this,n)},i.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this),e&&this.updater.enqueueCallback(this,e)};e.exports=i},function(e,n,t){"use strict";var i=t(16),o=t(112),r=t(114),a=t(32),s=t(9),l=t(11),c=t(26),u=t(12),d=t(65),p=t(66),h=t(290);t(3);r.inject();var f=l.measure("React","render",s.render),m={findDOMNode:p,render:f,unmountComponentAtNode:s.unmountComponentAtNode,version:d,unstable_batchedUpdates:u.batchedUpdates,unstable_renderSubtreeIntoContainer:h};"undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject&&__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({CurrentOwner:i,InstanceHandles:a,Mount:s,Reconciler:c,TextComponent:o});e.exports=m},function(e,n){"use strict";var t={useCreateElement:!1};e.exports=t},function(e,n,t){"use strict";function i(){if(this._rootNodeID&&this._wrapperState.pendingUpdate){this._wrapperState.pendingUpdate=!1;var e=this._currentElement.props,n=a.getValue(e);null!=n&&o(this,Boolean(e.multiple),n)}}function o(e,n,t){var i,o,r=s.getNode(e._rootNodeID).options;if(n){for(i={},o=0;o<t.length;o++)i[""+t[o]]=!0;for(o=0;o<r.length;o++){var a=i.hasOwnProperty(r[o].value);r[o].selected!==a&&(r[o].selected=a)}}else{for(i=""+t,o=0;o<r.length;o++)if(r[o].value===i)return void(r[o].selected=!0);r.length&&(r[0].selected=!0)}}function r(e){var n=this._currentElement.props,t=a.executeOnChange(n,e);return this._wrapperState.pendingUpdate=!0,l.asap(i,this),t}var a=t(60),s=t(9),l=t(12),c=t(4),u=(t(3),"__ReactDOMSelect_value$"+Math.random().toString(36).slice(2)),d={valueContextKey:u,getNativeProps:function(e,n,t){return c({},n,{onChange:e._wrapperState.onChange,value:void 0})},mountWrapper:function(e,n){var t=a.getValue(n);e._wrapperState={pendingUpdate:!1,initialValue:null!=t?t:n.defaultValue,onChange:r.bind(e),wasMultiple:Boolean(n.multiple)}},processChildContext:function(e,n,t){var i=c({},t);return i[u]=e._wrapperState.initialValue,i},postUpdateWrapper:function(e){var n=e._currentElement.props;e._wrapperState.initialValue=void 0;var t=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=Boolean(n.multiple);var i=a.getValue(n);null!=i?(e._wrapperState.pendingUpdate=!1,o(e,Boolean(n.multiple),i)):t!==Boolean(n.multiple)&&(null!=n.defaultValue?o(e,Boolean(n.multiple),n.defaultValue):o(e,Boolean(n.multiple),n.multiple?[]:""))}};e.exports=d},function(e,n,t){"use strict";var i=t(104),o=t(59),r=t(61),a=t(9),s=t(4),l=t(49),c=t(73),u=(t(76),function(e){});s(u.prototype,{construct:function(e){this._currentElement=e,this._stringText=""+e,this._rootNodeID=null,this._mountIndex=0},mountComponent:function(e,n,t){if(this._rootNodeID=e,n.useCreateElement){var i=t[a.ownerDocumentContextKey],r=i.createElement("span");return o.setAttributeForID(r,e),a.getID(r),c(r,this._stringText),r}var s=l(this._stringText);return n.renderToStaticMarkup?s:"<span "+o.createMarkupForID(e)+">"+s+"</span>"},receiveComponent:function(e,n){if(e!==this._currentElement){this._currentElement=e;var t=""+e;if(t!==this._stringText){this._stringText=t;var o=a.getNode(this._rootNodeID);i.updateTextContent(o,t)}}},unmountComponent:function(){r.unmountIDFromEnvironment(this._rootNodeID)}}),e.exports=u},function(e,n,t){"use strict";function i(){this.reinitializeTransaction()}var o=t(12),r=t(47),a=t(4),s=t(14),l={initialize:s,close:function(){p.isBatchingUpdates=!1}},c={initialize:s,close:o.flushBatchedUpdates.bind(o)},u=[c,l];a(i.prototype,r.Mixin,{getTransactionWrappers:function(){return u}});var d=new i,p={isBatchingUpdates:!1,batchedUpdates:function(e,n,t,i,o,r){var a=p.isBatchingUpdates;p.isBatchingUpdates=!0,a?e(n,t,i,o,r):d.perform(e,null,n,t,i,o,r)}};e.exports=p},function(e,n,t){"use strict";function i(){if(!x){x=!0,v.EventEmitter.injectReactEventListener(g),v.EventPluginHub.injectEventPluginOrder(s),v.EventPluginHub.injectInstanceHandle(y),v.EventPluginHub.injectMount(b),v.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:C,EnterLeaveEventPlugin:l,ChangeEventPlugin:r,SelectEventPlugin:w,BeforeInputEventPlugin:o}),v.NativeComponent.injectGenericComponentClass(f),v.NativeComponent.injectTextComponentClass(m),v.Class.injectMixin(d),v.DOMProperty.injectDOMPropertyConfig(u),v.DOMProperty.injectDOMPropertyConfig(S),v.EmptyComponent.injectEmptyComponent("noscript"),v.Updates.injectReconcileTransaction(T),v.Updates.injectBatchingStrategy(h),v.RootIndex.injectCreateReactRootIndex(c.canUseDOM?a.createReactRootIndex:E.createReactRootIndex),v.Component.injectEnvironment(p)}}var o=t(237),r=t(239),a=t(240),s=t(242),l=t(243),c=t(7),u=t(246),d=t(248),p=t(61),h=t(113),f=t(252),m=t(112),g=t(260),v=t(261),y=t(32),b=t(9),T=t(265),w=t(271),E=t(272),C=t(273),S=t(270),x=!1;e.exports={inject:i}},function(e,n,t){"use strict";function i(){if(d.current){var e=d.current.getName();if(e)return" Check the render method of `"+e+"`."}return""}function o(e,n){if(e._store&&!e._store.validated&&null==e.key){e._store.validated=!0;r("uniqueKey",e,n)}}function r(e,n,t){var o=i();if(!o){var r="string"==typeof t?t:t.displayName||t.name;r&&(o=" Check the top-level render call using <"+r+">.")}var a=f[e]||(f[e]={});if(a[o])return null;a[o]=!0;var s={parentOrOwner:o,url:" See https://fb.me/react-warning-keys for more information.",childOwner:null};return n&&n._owner&&n._owner!==d.current&&(s.childOwner=" It was passed a child from "+n._owner.getName()+"."),s}function a(e,n){if("object"==typeof e)if(Array.isArray(e))for(var t=0;t<e.length;t++){var i=e[t];c.isValidElement(i)&&o(i,n)}else if(c.isValidElement(e))e._store&&(e._store.validated=!0);else if(e){var r=p(e);if(r&&r!==e.entries)for(var a,s=r.call(e);!(a=s.next()).done;)c.isValidElement(a.value)&&o(a.value,n)}}function s(e,n,t,o){for(var r in n)if(n.hasOwnProperty(r)){var a;try{"function"!=typeof n[r]?h(!1):void 0,a=n[r](t,r,e,o)}catch(s){a=s}if(a instanceof Error&&!(a.message in m)){m[a.message]=!0;i()}}}function l(e){var n=e.type;if("function"==typeof n){var t=n.displayName||n.name;n.propTypes&&s(t,n.propTypes,e.props,u.prop),"function"==typeof n.getDefaultProps}}var c=t(10),u=t(45),d=(t(44),t(16)),p=(t(48),t(70)),h=t(2),f=(t(3),{}),m={},g={createElement:function(e,n,t){var i="string"==typeof e||"function"==typeof e,o=c.createElement.apply(this,arguments);if(null==o)return o;if(i)for(var r=2;r<arguments.length;r++)a(arguments[r],e);return l(o),o},createFactory:function(e){var n=g.createElement.bind(null,e);return n.type=e,n},cloneElement:function(e,n,t){for(var i=c.cloneElement.apply(this,arguments),o=2;o<arguments.length;o++)a(arguments[o],i.type);return l(i),i}};e.exports=g},function(e,n,t){"use strict";function i(){a.registerNullComponentID(this._rootNodeID)}var o,r=t(10),a=t(117),s=t(26),l=t(4),c={injectEmptyComponent:function(e){o=r.createElement(e)}},u=function(e){this._currentElement=null,this._rootNodeID=null,this._renderedComponent=e(o)};l(u.prototype,{construct:function(e){},mountComponent:function(e,n,t){return n.getReactMountReady().enqueue(i,this),this._rootNodeID=e,s.mountComponent(this._renderedComponent,e,n,t)},receiveComponent:function(){},unmountComponent:function(e,n,t){s.unmountComponent(this._renderedComponent),a.deregisterNullComponentID(this._rootNodeID),this._rootNodeID=null,this._renderedComponent=null}}),u.injection=c,e.exports=u},function(e,n){"use strict";function t(e){return!!r[e]}function i(e){r[e]=!0}function o(e){delete r[e]}var r={},a={isNullComponentID:t,registerNullComponentID:i,deregisterNullComponentID:o};e.exports=a},function(e,n,t){"use strict";function i(e,n,t,i){try{return n(t,i)}catch(r){return void(null===o&&(o=r))}}var o=null,r={invokeGuardedCallback:i,invokeGuardedCallbackWithCatch:i,rethrowCaughtError:function(){if(o){var e=o;throw o=null,e}}};e.exports=r},function(e,n,t){"use strict";function i(e){return r(document.documentElement,e)}var o=t(256),r=t(79),a=t(80),s=t(81),l={hasSelectionCapabilities:function(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&"text"===e.type||"textarea"===n||"true"===e.contentEditable);
},getSelectionInformation:function(){var e=s();return{focusedElem:e,selectionRange:l.hasSelectionCapabilities(e)?l.getSelection(e):null}},restoreSelection:function(e){var n=s(),t=e.focusedElem,o=e.selectionRange;n!==t&&i(t)&&(l.hasSelectionCapabilities(t)&&l.setSelection(t,o),a(t))},getSelection:function(e){var n;if("selectionStart"in e)n={start:e.selectionStart,end:e.selectionEnd};else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var t=document.selection.createRange();t.parentElement()===e&&(n={start:-t.moveStart("character",-e.value.length),end:-t.moveEnd("character",-e.value.length)})}else n=o.getOffsets(e);return n||{start:0,end:0}},setSelection:function(e,n){var t=n.start,i=n.end;if("undefined"==typeof i&&(i=t),"selectionStart"in e)e.selectionStart=t,e.selectionEnd=Math.min(i,e.value.length);else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var r=e.createTextRange();r.collapse(!0),r.moveStart("character",t),r.moveEnd("character",i-t),r.select()}else o.setOffsets(e,n)}};e.exports=l},function(e,n,t){"use strict";var i=t(282),o=/\/?>/,r={CHECKSUM_ATTR_NAME:"data-react-checksum",addChecksumToMarkup:function(e){var n=i(e);return e.replace(o," "+r.CHECKSUM_ATTR_NAME+'="'+n+'"$&')},canReuseMarkup:function(e,n){var t=n.getAttribute(r.CHECKSUM_ATTR_NAME);t=t&&parseInt(t,10);var o=i(e);return o===t}};e.exports=r},function(e,n,t){"use strict";var i=t(39),o=i({INSERT_MARKUP:null,MOVE_EXISTING:null,REMOVE_NODE:null,SET_MARKUP:null,TEXT_CONTENT:null});e.exports=o},function(e,n,t){"use strict";function i(e){if("function"==typeof e.type)return e.type;var n=e.type,t=d[n];return null==t&&(d[n]=t=c(n)),t}function o(e){return u?void 0:l(!1),new u(e.type,e.props)}function r(e){return new p(e)}function a(e){return e instanceof p}var s=t(4),l=t(2),c=null,u=null,d={},p=null,h={injectGenericComponentClass:function(e){u=e},injectTextComponentClass:function(e){p=e},injectComponentClasses:function(e){s(d,e)}},f={getComponentClassForElement:i,createInternalComponent:o,createInstanceForText:r,isTextComponent:a,injection:h};e.exports=f},function(e,n,t){"use strict";function i(e,n){}var o=(t(3),{isMounted:function(e){return!1},enqueueCallback:function(e,n){},enqueueForceUpdate:function(e){i(e,"forceUpdate")},enqueueReplaceState:function(e,n){i(e,"replaceState")},enqueueSetState:function(e,n){i(e,"setState")},enqueueSetProps:function(e,n){i(e,"setProps")},enqueueReplaceProps:function(e,n){i(e,"replaceProps")}});e.exports=o},function(e,n,t){"use strict";function i(e){function n(n,t,i,o,r,a){if(o=o||E,a=a||i,null==t[i]){var s=b[r];return n?new Error("Required "+s+" `"+a+"` was not specified in "+("`"+o+"`.")):null}return e(t,i,o,r,a)}var t=n.bind(null,!1);return t.isRequired=n.bind(null,!0),t}function o(e){function n(n,t,i,o,r){var a=n[t],s=m(a);if(s!==e){var l=b[o],c=g(a);return new Error("Invalid "+l+" `"+r+"` of type "+("`"+c+"` supplied to `"+i+"`, expected ")+("`"+e+"`."))}return null}return i(n)}function r(){return i(T.thatReturns(null))}function a(e){function n(n,t,i,o,r){var a=n[t];if(!Array.isArray(a)){var s=b[o],l=m(a);return new Error("Invalid "+s+" `"+r+"` of type "+("`"+l+"` supplied to `"+i+"`, expected an array."))}for(var c=0;c<a.length;c++){var u=e(a,c,i,o,r+"["+c+"]");if(u instanceof Error)return u}return null}return i(n)}function s(){function e(e,n,t,i,o){if(!y.isValidElement(e[n])){var r=b[i];return new Error("Invalid "+r+" `"+o+"` supplied to "+("`"+t+"`, expected a single ReactElement."))}return null}return i(e)}function l(e){function n(n,t,i,o,r){if(!(n[t]instanceof e)){var a=b[o],s=e.name||E,l=v(n[t]);return new Error("Invalid "+a+" `"+r+"` of type "+("`"+l+"` supplied to `"+i+"`, expected ")+("instance of `"+s+"`."))}return null}return i(n)}function c(e){function n(n,t,i,o,r){for(var a=n[t],s=0;s<e.length;s++)if(a===e[s])return null;var l=b[o],c=JSON.stringify(e);return new Error("Invalid "+l+" `"+r+"` of value `"+a+"` "+("supplied to `"+i+"`, expected one of "+c+"."))}return i(Array.isArray(e)?n:function(){return new Error("Invalid argument supplied to oneOf, expected an instance of array.")})}function u(e){function n(n,t,i,o,r){var a=n[t],s=m(a);if("object"!==s){var l=b[o];return new Error("Invalid "+l+" `"+r+"` of type "+("`"+s+"` supplied to `"+i+"`, expected an object."))}for(var c in a)if(a.hasOwnProperty(c)){var u=e(a,c,i,o,r+"."+c);if(u instanceof Error)return u}return null}return i(n)}function d(e){function n(n,t,i,o,r){for(var a=0;a<e.length;a++){var s=e[a];if(null==s(n,t,i,o,r))return null}var l=b[o];return new Error("Invalid "+l+" `"+r+"` supplied to "+("`"+i+"`."))}return i(Array.isArray(e)?n:function(){return new Error("Invalid argument supplied to oneOfType, expected an instance of array.")})}function p(){function e(e,n,t,i,o){if(!f(e[n])){var r=b[i];return new Error("Invalid "+r+" `"+o+"` supplied to "+("`"+t+"`, expected a ReactNode."))}return null}return i(e)}function h(e){function n(n,t,i,o,r){var a=n[t],s=m(a);if("object"!==s){var l=b[o];return new Error("Invalid "+l+" `"+r+"` of type `"+s+"` "+("supplied to `"+i+"`, expected `object`."))}for(var c in e){var u=e[c];if(u){var d=u(a,c,i,o,r+"."+c);if(d)return d}}return null}return i(n)}function f(e){switch(typeof e){case"number":case"string":case"undefined":return!0;case"boolean":return!e;case"object":if(Array.isArray(e))return e.every(f);if(null===e||y.isValidElement(e))return!0;var n=w(e);if(!n)return!1;var t,i=n.call(e);if(n!==e.entries){for(;!(t=i.next()).done;)if(!f(t.value))return!1}else for(;!(t=i.next()).done;){var o=t.value;if(o&&!f(o[1]))return!1}return!0;default:return!1}}function m(e){var n=typeof e;return Array.isArray(e)?"array":e instanceof RegExp?"object":n}function g(e){var n=m(e);if("object"===n){if(e instanceof Date)return"date";if(e instanceof RegExp)return"regexp"}return n}function v(e){return e.constructor&&e.constructor.name?e.constructor.name:"<<anonymous>>"}var y=t(10),b=t(44),T=t(14),w=t(70),E="<<anonymous>>",C={array:o("array"),bool:o("boolean"),func:o("function"),number:o("number"),object:o("object"),string:o("string"),any:r(),arrayOf:a,element:s(),instanceOf:l,node:p(),objectOf:u,oneOf:c,oneOfType:d,shape:h};e.exports=C},function(e,n){"use strict";var t={injectCreateReactRootIndex:function(e){i.createReactRootIndex=e}},i={createReactRootIndex:null,injection:t};e.exports=i},function(e,n){"use strict";var t={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function(e){t.currentScrollLeft=e.x,t.currentScrollTop=e.y}};e.exports=t},function(e,n,t){"use strict";function i(e,n){if(null==n?o(!1):void 0,null==e)return n;var t=Array.isArray(e),i=Array.isArray(n);return t&&i?(e.push.apply(e,n),e):t?(e.push(n),e):i?[e].concat(n):[e,n]}var o=t(2);e.exports=i},function(e,n){"use strict";var t=function(e,n,t){Array.isArray(e)?e.forEach(n,t):e&&n.call(t,e)};e.exports=t},function(e,n,t){"use strict";function i(){return!r&&o.canUseDOM&&(r="textContent"in document.documentElement?"textContent":"innerText"),r}var o=t(7),r=null;e.exports=i},function(e,n){"use strict";function t(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&i[e.type]||"textarea"===n)}var i={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};e.exports=t},function(e,n,t){"use strict";function i(e,n,t,i){e.react={tag:n,props:t,children:i||[]}}function o(e){var n=e.parent.parent;return n&&"List"===n.type&&n.listTight}function r(e,n){var t=e;do t=t.parent;while(!t.react);t.react.children.push(n)}function a(e,n,t){var i=[e,n].concat(t),o=c.createElement.apply(c,i);return o}function s(e){for(var n,t,s,l,u,d,p,h=e.walker(),f=this.sourcePos,m=this.escapeHtml,g=this.skipHtml,v="br"===this.softBreak?c.createElement("br"):this.softBreak;t=h.next();){if(l=t.entering,u=!l,s=t.node,d={},p||(p=s,s.react={children:[]}),f&&s.sourcepos){var y=s.sourcepos;d["data-sourcepos"]=[y[0][0],":",y[0][1],"-",y[1][0],":",y[1][1]].map(String).join("")}if("Paragraph"!==s.type||!o(s))if(u){if("Image"===s.type&&(s.react.props.alt=s.react.children[0],s.react.children=[]),s!==p&&this.allowNode&&!this.allowNode({type:s.type,tag:s.react.tag,props:s.react.props,children:s.react.children}))continue;var b=this.allowedTypes.indexOf(s.type)!==-1;s!==p&&b&&r(s,a(s.react.tag,s.react.props,s.react.children))}else switch(s.type){case"Html":case"HtmlBlock":m?r(s,s.literal):g||(d.dangerouslySetInnerHTML={__html:s.literal},r(s,a("Html"===s.type?"span":"div",d)));break;case"Text":r(s,s.literal);break;case"Paragraph":i(s,"p",d);break;case"Header":i(s,"h"+s.level,d);break;case"Softbreak":r(s,v);break;case"Hardbreak":r(s,c.createElement("br"));break;case"Strong":i(s,"strong",d);break;case"Link":d.href=s.destination,s.title&&(d.title=s.title),i(s,"a",d);break;case"Image":d.src=s.destination,s.title&&(d.title=s.title),i(s,"img",d);break;case"Emph":i(s,"em",d);break;case"Code":r(s,a("code",d,[s.literal]));break;case"CodeBlock":n=s.info?s.info.split(/ +/):[],n.length>0&&n[0].length>0&&(d.className="language-"+n[0]);var T=a("code",d,[s.literal]);r(s,a("pre",{},[T]));break;case"BlockQuote":i(s,"blockquote",d);break;case"List":var w=s.listStart;null!==w&&1!==w&&(d.start=w.toString()),i(s,"Bullet"===s.listType?"ul":"ol",d);break;case"Item":i(s,"li",d);break;case"HorizontalRule":r(s,a("hr",d));break;case"Document":break;default:throw new Error('Unknown node type "'+s.type+'"')}}return p.react.children}function l(e){var n=e||{};if(n.allowedTypes&&n.disallowedTypes)throw new Error("Only one of `allowedTypes` and `disallowedTypes` should be defined");if(n.allowedTypes&&!Array.isArray(n.allowedTypes))throw new Error("`allowedTypes` must be an array");if(n.disallowedTypes&&!Array.isArray(n.disallowedTypes))throw new Error("`disallowedTypes` must be an array");if(n.allowNode&&"function"!=typeof n.allowNode)throw new Error("`allowNode` must be a function");var t=n.allowedTypes||u;return n.disallowedTypes&&(t=t.filter(function(e){return n.disallowedTypes.indexOf(e)===-1})),{sourcePos:n.sourcePos,softBreak:n.softBreak||"\n",escapeHtml:Boolean(n.escapeHtml),skipHtml:Boolean(n.skipHtml),allowNode:n.allowNode,allowedTypes:t,render:s}}var c=t(1),u=["Html","HtmlBlock","Text","Paragraph","Header","Softbreak","Hardbreak","Link","Image","Emph","Code","CodeBlock","BlockQuote","List","Item","Strong","HorizontalRule","Document"];e.exports=l},function(e,n,t){"use strict";function i(e){return{doc:new V,blocks:L,blockStarts:j,tip:this.doc,oldtip:this.doc,currentLine:"",lineNumber:0,offset:0,column:0,nextNonspace:0,nextNonspaceColumn:0,indent:0,indented:!1,blank:!1,allClosed:!0,lastMatchedContainer:this.doc,refmap:{},lastLineLength:0,inlineParser:new f(e),findNextNonspace:U,advanceOffset:B,advanceNextNonspace:q,breakOutOfLists:A,addLine:I,addChild:N,incorporateLine:F,finalize:K,processInlines:H,closeUnmatchedBlocks:M,parse:W,options:e||{}}}var o=t(51),r=t(28).unescapeString,a=t(28).OPENTAG,s=t(28).CLOSETAG,l=4,c=10,u=62,d=60,p=32,h=91,f=t(136),m=[/./,/^<(?:script|pre|style)(?:\s|>|$)/i,/^<!--/,/^<[?]/,/^<![A-Z]/,/^<!\[CDATA\[/,/^<[\/]?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h1|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|title|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\s|[\/]?[>]|$)/i,new RegExp("^(?:"+a+"|"+s+")s*$","i")],g=[/./,/<\/(?:script|pre|style)>/i,/-->/,/\?>/,/>/,/\]\]>/],v=/^(?:(?:\* *){3,}|(?:_ *){3,}|(?:- *){3,}) *$/,y=/^[#`~*+_=<>0-9-]/,b=/[^ \t\f\v\r\n]/,T=/^[*+-]( +|$)/,w=/^(\d{1,9})([.)])( +|$)/,E=/^#{1,6}(?: +|$)/,C=/^`{3,}(?!.*`)|^~{3,}(?!.*~)/,S=/^(?:`{3,}|~{3,})(?= *$)/,x=/^(?:=+|-+) *$/,R=/\r\n|\n|\r/,_=function(e){return!b.test(e)},P=function(e,n){return n<e.length?e.charCodeAt(n):-1},k=function(e){for(;e;){if(e._lastLineBlank)return!0;var n=e.type;if("List"!==n&&"Item"!==n)break;e=e._lastChild}return!1},A=function(e){var n=e,t=null;do"List"===n.type&&(t=n),n=n._parent;while(n);if(t){for(;e!==t;)this.finalize(e,this.lineNumber),e=e._parent;this.finalize(t,this.lineNumber),this.tip=t._parent}},I=function(){this.tip._string_content+=this.currentLine.slice(this.offset)+"\n"},N=function(e,n){for(;!this.blocks[this.tip.type].canContain(e);)this.finalize(this.tip,this.lineNumber-1);var t=n+1,i=new o(e,[[this.lineNumber,t],[0,0]]);return i._string_content="",this.tip.appendChild(i),this.tip=i,i},D=function(e,n,t){var i,o,r=e.slice(n),a={type:null,tight:!0,bulletChar:null,start:null,delimiter:null,padding:null,markerOffset:t};if(i=r.match(T))o=i[1].length,a.type="Bullet",a.bulletChar=i[0][0];else{if(!(i=r.match(w)))return null;o=i[3].length,a.type="Ordered",a.start=parseInt(i[1]),a.delimiter=i[2]}var s=i[0].length===r.length;return o>=5||o<1||s?a.padding=i[0].length-o+1:a.padding=i[0].length,a},O=function(e,n){return e.type===n.type&&e.delimiter===n.delimiter&&e.bulletChar===n.bulletChar},M=function(){if(!this.allClosed){for(;this.oldtip!==this.lastMatchedContainer;){var e=this.oldtip._parent;this.finalize(this.oldtip,this.lineNumber-1),this.oldtip=e}this.allClosed=!0}},L={Document:{continue:function(){return 0},finalize:function(){},canContain:function(e){return"Item"!==e},acceptsLines:!1},List:{continue:function(){return 0},finalize:function(e,n){for(var t=n._firstChild;t;){if(k(t)&&t._next){n._listData.tight=!1;break}for(var i=t._firstChild;i;){if(k(i)&&(t._next||i._next)){n._listData.tight=!1;break}i=i._next}t=t._next}},canContain:function(e){return"Item"===e},acceptsLines:!1},BlockQuote:{continue:function(e){var n=e.currentLine;return e.indented||P(n,e.nextNonspace)!==u?1:(e.advanceNextNonspace(),e.advanceOffset(1,!1),P(n,e.offset)===p&&e.offset++,0)},finalize:function(){},canContain:function(e){return"Item"!==e},acceptsLines:!1},Item:{continue:function(e,n){if(e.blank&&null!==n._firstChild)e.advanceNextNonspace();else{if(!(e.indent>=n._listData.markerOffset+n._listData.padding))return 1;e.advanceOffset(n._listData.markerOffset+n._listData.padding,!0)}return 0},finalize:function(){},canContain:function(e){return"Item"!==e},acceptsLines:!1},Header:{continue:function(){return 1},finalize:function(){},canContain:function(){return!1},acceptsLines:!1},HorizontalRule:{continue:function(){return 1},finalize:function(){},canContain:function(){return!1},acceptsLines:!1},CodeBlock:{continue:function(e,n){var t=e.currentLine,i=e.indent;if(n._isFenced){var o=i<=3&&t.charAt(e.nextNonspace)===n._fenceChar&&t.slice(e.nextNonspace).match(S);if(o&&o[0].length>=n._fenceLength)return e.finalize(n,e.lineNumber),2;for(var r=n._fenceOffset;r>0&&P(t,e.offset)===p;)e.advanceOffset(1,!1),r--}else if(i>=l)e.advanceOffset(l,!0);else{if(!e.blank)return 1;e.advanceNextNonspace()}return 0},finalize:function(e,n){if(n._isFenced){var t=n._string_content,i=t.indexOf("\n"),o=t.slice(0,i),a=t.slice(i+1);n.info=r(o.trim()),n._literal=a}else n._literal=n._string_content.replace(/(\n *)+$/,"\n");n._string_content=null},canContain:function(){return!1},acceptsLines:!0},HtmlBlock:{continue:function(e,n){return!e.blank||6!==n._htmlBlockType&&7!==n._htmlBlockType?0:1},finalize:function(e,n){n._literal=n._string_content.replace(/(\n *)+$/,""),n._string_content=null},canContain:function(){return!1},acceptsLines:!0},Paragraph:{continue:function(e){return e.blank?1:0},finalize:function(e,n){for(var t,i=!1;P(n._string_content,0)===h&&(t=e.inlineParser.parseReference(n._string_content,e.refmap));)n._string_content=n._string_content.slice(t),i=!0;i&&_(n._string_content)&&n.unlink()},canContain:function(){return!1},acceptsLines:!0}},j=[function(e){return e.indented||P(e.currentLine,e.nextNonspace)!==u?0:(e.advanceNextNonspace(),e.advanceOffset(1,!1),P(e.currentLine,e.offset)===p&&e.advanceOffset(1,!1),e.closeUnmatchedBlocks(),e.addChild("BlockQuote",e.nextNonspace),1)},function(e){var n;if(!e.indented&&(n=e.currentLine.slice(e.nextNonspace).match(E))){e.advanceNextNonspace(),e.advanceOffset(n[0].length,!1),e.closeUnmatchedBlocks();var t=e.addChild("Header",e.nextNonspace);return t.level=n[0].trim().length,t._string_content=e.currentLine.slice(e.offset).replace(/^ *#+ *$/,"").replace(/ +#+ *$/,""),e.advanceOffset(e.currentLine.length-e.offset),2}return 0},function(e){var n;if(!e.indented&&(n=e.currentLine.slice(e.nextNonspace).match(C))){var t=n[0].length;e.closeUnmatchedBlocks();var i=e.addChild("CodeBlock",e.nextNonspace);return i._isFenced=!0,i._fenceLength=t,i._fenceChar=n[0][0],i._fenceOffset=e.indent,e.advanceNextNonspace(),e.advanceOffset(t,!1),2}return 0},function(e,n){if(!e.indented&&P(e.currentLine,e.nextNonspace)===d){var t,i=e.currentLine.slice(e.nextNonspace);for(t=1;t<=7;t++)if(m[t].test(i)&&(t<7||"Paragraph"!==n.type)){e.closeUnmatchedBlocks();var o=e.addChild("HtmlBlock",e.offset);return o._htmlBlockType=t,2}}return 0},function(e,n){var t;if(!e.indented&&"Paragraph"===n.type&&n._string_content.indexOf("\n")===n._string_content.length-1&&(t=e.currentLine.slice(e.nextNonspace).match(x))){e.closeUnmatchedBlocks();var i=new o("Header",n.sourcepos);return i.level="="===t[0][0]?1:2,i._string_content=n._string_content,n.insertAfter(i),n.unlink(),e.tip=i,e.advanceOffset(e.currentLine.length-e.offset,!1),2}return 0},function(e){return!e.indented&&v.test(e.currentLine.slice(e.nextNonspace))?(e.closeUnmatchedBlocks(),e.addChild("HorizontalRule",e.nextNonspace),e.advanceOffset(e.currentLine.length-e.offset,!1),2):0},function(e,n){var t,i;return!(t=D(e.currentLine,e.nextNonspace,e.indent))||e.indented&&"List"!==n.type?0:(e.closeUnmatchedBlocks(),e.advanceNextNonspace(),i=e.column,e.advanceOffset(t.padding,!1),t.padding=e.column-i,"List"===e.tip.type&&O(n._listData,t)||(n=e.addChild("List",e.nextNonspace),n._listData=t),n=e.addChild("Item",e.nextNonspace),n._listData=t,1)},function(e){return e.indented&&"Paragraph"!==e.tip.type&&!e.blank?(e.advanceOffset(l,!0),e.closeUnmatchedBlocks(),e.addChild("CodeBlock",e.offset),2):0}],B=function(e,n){for(var t=0,i=0,o=this.currentLine;n?i<e:t<e;)i+="\t"===o[this.offset+t]?4-(this.column+i)%4:1,t++;this.offset+=t,this.column+=i},q=function(){this.offset=this.nextNonspace,this.column=this.nextNonspaceColumn},U=function(){for(var e,n=this.currentLine,t=this.offset,i=this.column;""!==(e=n.charAt(t));)if(" "===e)t++,i++;else{if("\t"!==e)break;t++,i+=4-i%4}this.blank="\n"===e||"\r"===e||""===e,this.nextNonspace=t,this.nextNonspaceColumn=i,this.indent=this.nextNonspaceColumn-this.column,this.indented=this.indent>=l},F=function(e){var n,t=!0,i=this.doc;this.oldtip=this.tip,this.offset=0,this.lineNumber+=1,e.indexOf("\0")!==-1&&(e=e.replace(/\0/g,"�")),this.currentLine=e;for(var o;(o=i._lastChild)&&o._open;){switch(i=o,this.findNextNonspace(),this.blocks[i.type].continue(this,i)){case 0:break;case 1:t=!1;break;case 2:return void(this.lastLineLength=e.length);default:throw"continue returned illegal value, must be 0, 1, or 2"}if(!t){i=i._parent;break}}this.allClosed=i===this.oldtip,this.lastMatchedContainer=i,this.blank&&i._lastLineBlank&&this.breakOutOfLists(i);for(var r="Paragraph"!==i.type&&L[i.type].acceptsLines,a=this.blockStarts,s=a.length;!r;){if(this.findNextNonspace(),!this.indented&&!y.test(e.slice(this.nextNonspace))){this.advanceNextNonspace();break}for(var l=0;l<s;){var c=a[l](this,i);if(1===c){i=this.tip;break}if(2===c){i=this.tip,r=!0;break}l++}if(l===s){this.advanceNextNonspace();break}}if(this.allClosed||this.blank||"Paragraph"!==this.tip.type){this.closeUnmatchedBlocks(),this.blank&&i.lastChild&&(i.lastChild._lastLineBlank=!0),n=i.type;for(var u=this.blank&&!("BlockQuote"===n||"CodeBlock"===n&&i._isFenced||"Item"===n&&!i._firstChild&&i.sourcepos[0][0]===this.lineNumber),d=i;d;)d._lastLineBlank=u,d=d._parent;this.blocks[n].acceptsLines?(this.addLine(),"HtmlBlock"===n&&i._htmlBlockType>=1&&i._htmlBlockType<=5&&g[i._htmlBlockType].test(this.currentLine.slice(this.offset))&&this.finalize(i,this.lineNumber)):this.offset<e.length&&!this.blank&&(i=this.addChild("Paragraph",this.offset),this.advanceNextNonspace(),this.addLine())}else this.addLine();this.lastLineLength=e.length},K=function(e,n){var t=e._parent;e._open=!1,e.sourcepos[1]=[n,this.lastLineLength],this.blocks[e.type].finalize(this,e),this.tip=t},H=function(e){var n,t,i,o=e.walker();for(this.inlineParser.refmap=this.refmap,this.inlineParser.options=this.options;t=o.next();)n=t.node,i=n.type,t.entering||"Paragraph"!==i&&"Header"!==i||this.inlineParser.parse(n)},V=function(){var e=new o("Document",[[1,1],[0,0]]);return e},W=function(e){this.doc=new V,this.tip=this.doc,this.refmap={},this.lineNumber=0,this.lastLineLength=0,this.offset=0,this.column=0,this.lastMatchedContainer=this.doc,this.currentLine="",this.options.time&&console.time("preparing input");var n=e.split(R),t=n.length;e.charCodeAt(e.length-1)===c&&(t-=1),this.options.time&&console.timeEnd("preparing input"),this.options.time&&console.time("block parsing");for(var i=0;i<t;i++)this.incorporateLine(n[i]);for(;this.tip;)this.finalize(this.tip,t);return this.options.time&&console.timeEnd("block parsing"),this.options.time&&console.time("inline parsing"),this.processInlines(this.doc),this.options.time&&console.timeEnd("inline parsing"),this.doc};e.exports=i},function(e,n){"use strict";if(String.fromCodePoint)e.exports=function(e){try{return String.fromCodePoint(e)}catch(n){if(n instanceof RangeError)return String.fromCharCode(65533);throw n}};else{var t=String.fromCharCode,i=Math.floor,o=function(){var e,n,o=16384,r=[],a=-1,s=arguments.length;if(!s)return"";for(var l="";++a<s;){var c=Number(arguments[a]);if(!isFinite(c)||c<0||c>1114111||i(c)!==c)return String.fromCharCode(65533);c<=65535?r.push(c):(c-=65536,e=(c>>10)+55296,n=c%1024+56320,r.push(e,n)),(a+1===s||r.length>o)&&(l+=t.apply(null,r),r.length=0)}return l};e.exports=o}},function(e,n,t){"use strict";function i(e){return{softbreak:"\n",escape:o,options:e||{},render:u}}var o=t(28).escapeXml,r=function(e,n,t){var i="<"+e;if(n&&n.length>0)for(var o,r=0;void 0!==(o=n[r]);)i+=" "+o[0]+'="'+o[1]+'"',r++;return t&&(i+=" /"),i+=">"},a=/\<[^>]*\>/,s=/^javascript:|vbscript:|file:|data:/i,l=/^data:image\/(?:png|gif|jpeg|webp)/i,c=function(e){return s.test(e)&&!l.test(e)},u=function(e){var n,t,i,o,s,l,u,d=e.walker(),p="",h="\n",f=0,m=function(e){p+=f>0?e.replace(a,""):e,h=e},g=this.escape,v=function(){"\n"!==h&&(p+="\n",h="\n")},y=this.options;for(y.time&&console.time("rendering");o=d.next();){if(l=o.entering,s=o.node,n=[],y.sourcepos){var b=s.sourcepos;b&&n.push(["data-sourcepos",String(b[0][0])+":"+String(b[0][1])+"-"+String(b[1][0])+":"+String(b[1][1])])}switch(s.type){case"Text":m(g(s.literal,!1));break;case"Softbreak":m(this.softbreak);break;case"Hardbreak":m(r("br",[],!0)),v();break;case"Emph":m(r(l?"em":"/em"));break;case"Strong":m(r(l?"strong":"/strong"));break;case"Html":m(y.safe?"<!-- raw HTML omitted -->":s.literal);break;case"Link":l?(y.safe&&c(s.destination)||n.push(["href",g(s.destination,!0)]),s.title&&n.push(["title",g(s.title,!0)]),m(r("a",n))):m(r("/a"));break;case"Image":l?(0===f&&m(y.safe&&c(s.destination)?'<img src="" alt="':'<img src="'+g(s.destination,!0)+'" alt="'),f+=1):(f-=1,0===f&&(s.title&&m('" title="'+g(s.title,!0)),m('" />')));break;case"Code":m(r("code")+g(s.literal,!1)+r("/code"));break;case"Document":break;case"Paragraph":if(u=s.parent.parent,null!==u&&"List"===u.type&&u.listTight)break;l?(v(),m(r("p",n))):(m(r("/p")),v());break;case"BlockQuote":l?(v(),m(r("blockquote",n)),v()):(v(),m(r("/blockquote")),v());break;case"Item":l?m(r("li",n)):(m(r("/li")),v());break;case"List":if(i="Bullet"===s.listType?"ul":"ol",l){var T=s.listStart;null!==T&&1!==T&&n.push(["start",T.toString()]),v(),m(r(i,n)),v()}else v(),m(r("/"+i)),v();break;case"Header":i="h"+s.level,l?(v(),m(r(i,n))):(m(r("/"+i)),v());break;case"CodeBlock":t=s.info?s.info.split(/\s+/):[],t.length>0&&t[0].length>0&&n.push(["class","language-"+g(t[0],!0)]),v(),m(r("pre")+r("code",n)),m(g(s.literal,!1)),m(r("/code")+r("/pre")),v();break;case"HtmlBlock":v(),m(y.safe?"<!-- raw HTML omitted -->":s.literal),v();break;case"HorizontalRule":v(),m(r("hr",n,!0)),v();break;default:throw"Unknown node type "+s.type}}return y.time&&console.timeEnd("rendering"),p};e.exports=i},function(e,n,t){"use strict";e.exports.Node=t(51),e.exports.Parser=t(132),e.exports.HtmlRenderer=t(134),e.exports.XmlRenderer=t(138)},function(e,n,t){"use strict";function i(e){return{subject:"",delimiters:null,pos:0,refmap:{},match:Z,peek:ee,spnl:ne,parseBackticks:te,parseBackslash:ie,parseAutolink:oe,parseHtmlTag:re,scanDelims:ae,handleDelim:se,parseLinkTitle:de,parseLinkDestination:pe,parseLinkLabel:he,parseOpenBracket:fe,parseCloseBracket:ge,parseBang:me,parseEntity:ve,parseString:ye,parseNewline:be,parseReference:Te,parseInline:we,processEmphasis:ue,removeDelimiter:le,options:e||{},parse:Ee}}var o=t(51),r=t(28),a=t(137),s=r.normalizeURI,l=r.unescapeString,c=t(133),u=t(77).decodeHTML;t(292);var d=10,p=42,h=95,f=96,m=91,g=93,v=60,y=33,b=92,T=38,w=40,E=41,C=58,S=39,x=34,R=r.ESCAPABLE,_="\\\\"+R,P="[^\\\\()\\x00-\\x20]",k="\\(("+P+"|"+_+"|\\\\)*\\)",A=r.ENTITY,I=r.reHtmlTag,N=new RegExp(/^[\u2000-\u206F\u2E00-\u2E7F\\'!"#\$%&\(\)\*\+,\-\.\/:;<=>\?@\[\]\^_`\{\|\}~]/),D=new RegExp('^(?:"('+_+'|[^"\\x00])*"|\'('+_+"|[^'\\x00])*'|\\(("+_+"|[^)\\x00])*\\))"),O=new RegExp("^(?:[<](?:[^<>\\n\\\\\\x00]|"+_+"|\\\\)*[>])"),M=new RegExp("^(?:"+P+"+|"+_+"|\\\\|"+k+")*"),L=new RegExp("^"+R),j=new RegExp("^"+A,"i"),B=/`+/,q=/^`+/,U=/\.\.\./g,F=/--+/g,K=/^<([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/,H=/^<(?:coap|doi|javascript|aaa|aaas|about|acap|cap|cid|crid|data|dav|dict|dns|file|ftp|geo|go|gopher|h323|http|https|iax|icap|im|imap|info|ipp|iris|iris.beep|iris.xpc|iris.xpcs|iris.lwz|ldap|mailto|mid|msrp|msrps|mtqp|mupdate|news|nfs|ni|nih|nntp|opaquelocktoken|pop|pres|rtsp|service|session|shttp|sieve|sip|sips|sms|snmp|soap.beep|soap.beeps|tag|tel|telnet|tftp|thismessage|tn3270|tip|tv|urn|vemmi|ws|wss|xcon|xcon-userid|xmlrpc.beep|xmlrpc.beeps|xmpp|z39.50r|z39.50s|adiumxtra|afp|afs|aim|apt|attachment|aw|beshare|bitcoin|bolo|callto|chrome|chrome-extension|com-eventbrite-attendee|content|cvs|dlna-playsingle|dlna-playcontainer|dtn|dvb|ed2k|facetime|feed|finger|fish|gg|git|gizmoproject|gtalk|hcp|icon|ipn|irc|irc6|ircs|itms|jar|jms|keyparc|lastfm|ldaps|magnet|maps|market|message|mms|ms-help|msnim|mumble|mvn|notes|oid|palm|paparazzi|platform|proxy|psyc|query|res|resource|rmi|rsync|rtmp|secondlife|sftp|sgn|skype|smb|soldat|spotify|ssh|steam|svn|teamspeak|things|udp|unreal|ut2004|ventrilo|view-source|webcal|wtai|wyciwyg|xfire|xri|ymsgr):[^<>\x00-\x20]*>/i,V=/^ *(?:\n *)?/,W=/^\s/,z=/\s+/g,G=/ *$/,Y=/^ */,J=/^ *(?:\n|$)/,X=new RegExp("^\\[(?:[^\\\\\\[\\]]|"+_+"|\\\\){0,1000}\\]"),Q=/^[^\n`\[\]\\!<&*_'"]+/m,$=function(e){var n=new o("Text");return n._literal=e,n},Z=function(e){var n=e.exec(this.subject.slice(this.pos));return null===n?null:(this.pos+=n.index+n[0].length,n[0])},ee=function(){return this.pos<this.subject.length?this.subject.charCodeAt(this.pos):-1},ne=function(){return this.match(V),!0},te=function(e){var n=this.match(q);if(null===n)return!1;for(var t,i,r=this.pos;null!==(t=this.match(B));)if(t===n)return i=new o("Code"),i._literal=this.subject.slice(r,this.pos-n.length).trim().replace(z," "),e.appendChild(i),!0;return this.pos=r,e.appendChild($(n)),!0},ie=function(e){var n,t=this.subject;return this.pos+=1,this.peek()===d?(this.pos+=1,n=new o("Hardbreak"),e.appendChild(n)):L.test(t.charAt(this.pos))?(e.appendChild($(t.charAt(this.pos))),this.pos+=1):e.appendChild($("\\")),!0},oe=function(e){var n,t,i;return(n=this.match(K))?(t=n.slice(1,n.length-1),i=new o("Link"),i._destination=s("mailto:"+t),i._title="",i.appendChild($(t)),e.appendChild(i),!0):!!(n=this.match(H))&&(t=n.slice(1,n.length-1),i=new o("Link"),i._destination=s(t),i._title="",i.appendChild($(t)),e.appendChild(i),!0)},re=function(e){var n=this.match(I);if(null===n)return!1;var t=new o("Html");return t._literal=n,e.appendChild(t),!0},ae=function(e){var n,t,i,o,r,a,s,l,u,d,p,f=0,m=this.pos;if(e===S||e===x)f++,this.pos++;else for(;this.peek()===e;)f++,this.pos++;return 0===f?null:(n=0===m?"\n":this.subject.charAt(m-1),i=this.peek(),t=i===-1?"\n":c(i),l=W.test(t),u=N.test(t),d=W.test(n),p=N.test(n),o=!(l||u&&!d&&!p),r=!(d||p&&!l&&!u),e===h?(a=o&&(!r||p),s=r&&(!o||u)):e===S||e===x?(a=o&&!r,s=r):(a=o,s=r),this.pos=m,{numdelims:f,can_open:a,can_close:s})},se=function(e,n){var t=this.scanDelims(e);if(!t)return!1;var i,o=t.numdelims,r=this.pos;this.pos+=o,i=e===S?"’":e===x?"“":this.subject.slice(r,this.pos);var a=$(i);return n.appendChild(a),this.delimiters={cc:e,numdelims:o,node:a,previous:this.delimiters,next:null,can_open:t.can_open,can_close:t.can_close,active:!0},null!==this.delimiters.previous&&(this.delimiters.previous.next=this.delimiters),!0},le=function(e){null!==e.previous&&(e.previous.next=e.next),null===e.next?this.delimiters=e.previous:e.next.previous=e.previous},ce=function(e,n){e.next!==n&&(e.next=n,n.previous=e)},ue=function(e){var n,t,i,r,a,s,l,c,u,d,f=[];for(f[h]=e,f[p]=e,f[S]=e,f[x]=e,t=this.delimiters;null!==t&&t.previous!==e;)t=t.previous;for(;null!==t;){var m=t.cc;if(!t.can_close||m!==h&&m!==p&&m!==S&&m!==x)t=t.next;else{for(n=t.previous,d=!1;null!==n&&n!==e&&n!==f[m];){if(n.cc===t.cc&&n.can_open){d=!0;break}n=n.previous}if(i=t,m===p||m===h)if(d){l=t.numdelims<3||n.numdelims<3?t.numdelims<=n.numdelims?t.numdelims:n.numdelims:t.numdelims%2===0?2:1,r=n.node,a=t.node,n.numdelims-=l,t.numdelims-=l,r._literal=r._literal.slice(0,r._literal.length-l),a._literal=a._literal.slice(0,a._literal.length-l);var g=new o(1===l?"Emph":"Strong");for(c=r._next;c&&c!==a;)u=c._next,c.unlink(),g.appendChild(c),c=u;r.insertAfter(g),ce(n,t),0===n.numdelims&&(r.unlink(),this.removeDelimiter(n)),0===t.numdelims&&(a.unlink(),s=t.next,this.removeDelimiter(t),t=s)}else t=t.next;else m===S?(t.node._literal="’",d&&(n.node._literal="‘"),t=t.next):m===x&&(t.node._literal="”",d&&(n.node.literal="“"),t=t.next);d||(f[m]=i.previous,i.can_open||this.removeDelimiter(i))}}for(;null!==this.delimiters&&this.delimiters!==e;)this.removeDelimiter(this.delimiters)},de=function(){var e=this.match(D);return null===e?null:l(e.substr(1,e.length-2))},pe=function(){var e=this.match(O);return null===e?(e=this.match(M),null===e?null:s(l(e))):s(l(e.substr(1,e.length-2)))},he=function(){var e=this.match(X);return null===e||e.length>1001?0:e.length},fe=function(e){var n=this.pos;this.pos+=1;var t=$("[");return e.appendChild(t),this.delimiters={cc:m,numdelims:1,node:t,previous:this.delimiters,next:null,can_open:!0,can_close:!1,index:n,active:!0},null!==this.delimiters.previous&&(this.delimiters.previous.next=this.delimiters),!0},me=function(e){var n=this.pos;if(this.pos+=1,this.peek()===m){this.pos+=1;var t=$("![");e.appendChild(t),this.delimiters={cc:y,numdelims:1,node:t,previous:this.delimiters,next:null,can_open:!0,can_close:!1,index:n+1,active:!0},null!==this.delimiters.previous&&(this.delimiters.previous.next=this.delimiters)}else e.appendChild($("!"));return!0},ge=function(e){var n,t,i,r,s,l,c=!1;for(this.pos+=1,n=this.pos,l=this.delimiters;null!==l&&l.cc!==m&&l.cc!==y;)l=l.previous;if(null===l)return e.appendChild($("]")),!0;if(!l.active)return e.appendChild($("]")),this.removeDelimiter(l),!0;if(t=l.cc===y,this.peek()===w)this.pos++,this.spnl()&&null!==(i=this.parseLinkDestination())&&this.spnl()&&(W.test(this.subject.charAt(this.pos-1))&&(r=this.parseLinkTitle()),!0)&&this.spnl()&&this.peek()===E&&(this.pos+=1,c=!0);else{var u=this.pos;this.spnl();var d=this.pos,p=this.parseLinkLabel();s=0===p||2===p?this.subject.slice(l.index,n):this.subject.slice(d,d+p),0===p&&(this.pos=u);var h=this.refmap[a(s)];h&&(i=h.destination,r=h.title,c=!0)}if(c){var f=new o(t?"Image":"Link");f._destination=i,f._title=r||"";var g,v;for(g=l.node._next;g;)v=g._next,g.unlink(),f.appendChild(g),g=v;if(e.appendChild(f),this.processEmphasis(l.previous),
l.node.unlink(),!t)for(l=this.delimiters;null!==l;)l.cc===m&&(l.active=!1),l=l.previous;return!0}return this.removeDelimiter(l),this.pos=n,e.appendChild($("]")),!0},ve=function(e){var n;return!!(n=this.match(j))&&(e.appendChild($(u(n))),!0)},ye=function(e){var n;return!!(n=this.match(Q))&&(this.options.smart?e.appendChild($(n.replace(U,"…").replace(F,function(e){var n=0,t=0;return e.length%3===0?t=e.length/3:e.length%2===0?n=e.length/2:e.length%3===2?(n=1,t=(e.length-2)/3):(n=2,t=(e.length-4)/3),"—".repeat(t)+"–".repeat(n)}))):e.appendChild($(n)),!0)},be=function(e){this.pos+=1;var n=e._lastChild;if(n&&"Text"===n.type&&" "===n._literal[n._literal.length-1]){var t=" "===n._literal[n._literal.length-2];n._literal=n._literal.replace(G,""),e.appendChild(new o(t?"Hardbreak":"Softbreak"))}else e.appendChild(new o("Softbreak"));return this.match(Y),!0},Te=function(e,n){this.subject=e,this.pos=0;var t,i,o,r,s=this.pos;if(r=this.parseLinkLabel(),0===r)return 0;if(t=this.subject.substr(0,r),this.peek()!==C)return this.pos=s,0;if(this.pos++,this.spnl(),i=this.parseLinkDestination(),null===i||0===i.length)return this.pos=s,0;var l=this.pos;this.spnl(),o=this.parseLinkTitle(),null===o&&(o="",this.pos=l);var c=!0;if(null===this.match(J)&&(""===o?c=!1:(o="",this.pos=l,c=null!==this.match(J))),!c)return this.pos=s,0;var u=a(t);return""===u?(this.pos=s,0):(n[u]||(n[u]={destination:i,title:o}),this.pos-s)},we=function(e){var n=!1,t=this.peek();if(t===-1)return!1;switch(t){case d:n=this.parseNewline(e);break;case b:n=this.parseBackslash(e);break;case f:n=this.parseBackticks(e);break;case p:case h:n=this.handleDelim(t,e);break;case S:case x:n=this.options.smart&&this.handleDelim(t,e);break;case m:n=this.parseOpenBracket(e);break;case y:n=this.parseBang(e);break;case g:n=this.parseCloseBracket(e);break;case v:n=this.parseAutolink(e)||this.parseHtmlTag(e);break;case T:n=this.parseEntity(e);break;default:n=this.parseString(e)}return n||(this.pos+=1,e.appendChild($(c(t)))),!0},Ee=function(e){for(this.subject=e._string_content.trim(),this.pos=0,this.delimiters=null;this.parseInline(e););e._string_content=null,this.processEmphasis(null)};e.exports=i},function(e,n){"use strict";var t=/[ \t\r\n]+|[A-Z\xB5\xC0-\xD6\xD8-\xDF\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u0149\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u017F\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C5\u01C7\u01C8\u01CA\u01CB\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F0-\u01F2\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0345\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03AB\u03B0\u03C2\u03CF-\u03D1\u03D5\u03D6\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F0\u03F1\u03F4\u03F5\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u0587\u10A0-\u10C5\u10C7\u10CD\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E96-\u1E9B\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F50\u1F52\u1F54\u1F56\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1F80-\u1FAF\u1FB2-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD2\u1FD3\u1FD6-\u1FDB\u1FE2-\u1FE4\u1FE6-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2126\u212A\u212B\u2132\u2160-\u216F\u2183\u24B6-\u24CF\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0\uA7B1\uFB00-\uFB06\uFB13-\uFB17\uFF21-\uFF3A]|\uD801[\uDC00-\uDC27]|\uD806[\uDCA0-\uDCBF]/g,i={A:"a",B:"b",C:"c",D:"d",E:"e",F:"f",G:"g",H:"h",I:"i",J:"j",K:"k",L:"l",M:"m",N:"n",O:"o",P:"p",Q:"q",R:"r",S:"s",T:"t",U:"u",V:"v",W:"w",X:"x",Y:"y",Z:"z","µ":"μ","À":"à","Á":"á","Â":"â","Ã":"ã","Ä":"ä","Å":"å","Æ":"æ","Ç":"ç","È":"è","É":"é","Ê":"ê","Ë":"ë","Ì":"ì","Í":"í","Î":"î","Ï":"ï","Ð":"ð","Ñ":"ñ","Ò":"ò","Ó":"ó","Ô":"ô","Õ":"õ","Ö":"ö","Ø":"ø","Ù":"ù","Ú":"ú","Û":"û","Ü":"ü","Ý":"ý","Þ":"þ","Ā":"ā","Ă":"ă","Ą":"ą","Ć":"ć","Ĉ":"ĉ","Ċ":"ċ","Č":"č","Ď":"ď","Đ":"đ","Ē":"ē","Ĕ":"ĕ","Ė":"ė","Ę":"ę","Ě":"ě","Ĝ":"ĝ","Ğ":"ğ","Ġ":"ġ","Ģ":"ģ","Ĥ":"ĥ","Ħ":"ħ","Ĩ":"ĩ","Ī":"ī","Ĭ":"ĭ","Į":"į","Ĳ":"ĳ","Ĵ":"ĵ","Ķ":"ķ","Ĺ":"ĺ","Ļ":"ļ","Ľ":"ľ","Ŀ":"ŀ","Ł":"ł","Ń":"ń","Ņ":"ņ","Ň":"ň","Ŋ":"ŋ","Ō":"ō","Ŏ":"ŏ","Ő":"ő","Œ":"œ","Ŕ":"ŕ","Ŗ":"ŗ","Ř":"ř","Ś":"ś","Ŝ":"ŝ","Ş":"ş","Š":"š","Ţ":"ţ","Ť":"ť","Ŧ":"ŧ","Ũ":"ũ","Ū":"ū","Ŭ":"ŭ","Ů":"ů","Ű":"ű","Ų":"ų","Ŵ":"ŵ","Ŷ":"ŷ","Ÿ":"ÿ","Ź":"ź","Ż":"ż","Ž":"ž","ſ":"s","Ɓ":"ɓ","Ƃ":"ƃ","Ƅ":"ƅ","Ɔ":"ɔ","Ƈ":"ƈ","Ɖ":"ɖ","Ɗ":"ɗ","Ƌ":"ƌ","Ǝ":"ǝ","Ə":"ə","Ɛ":"ɛ","Ƒ":"ƒ","Ɠ":"ɠ","Ɣ":"ɣ","Ɩ":"ɩ","Ɨ":"ɨ","Ƙ":"ƙ","Ɯ":"ɯ","Ɲ":"ɲ","Ɵ":"ɵ","Ơ":"ơ","Ƣ":"ƣ","Ƥ":"ƥ","Ʀ":"ʀ","Ƨ":"ƨ","Ʃ":"ʃ","Ƭ":"ƭ","Ʈ":"ʈ","Ư":"ư","Ʊ":"ʊ","Ʋ":"ʋ","Ƴ":"ƴ","Ƶ":"ƶ","Ʒ":"ʒ","Ƹ":"ƹ","Ƽ":"ƽ","Ǆ":"ǆ","ǅ":"ǆ","Ǉ":"ǉ","ǈ":"ǉ","Ǌ":"ǌ","ǋ":"ǌ","Ǎ":"ǎ","Ǐ":"ǐ","Ǒ":"ǒ","Ǔ":"ǔ","Ǖ":"ǖ","Ǘ":"ǘ","Ǚ":"ǚ","Ǜ":"ǜ","Ǟ":"ǟ","Ǡ":"ǡ","Ǣ":"ǣ","Ǥ":"ǥ","Ǧ":"ǧ","Ǩ":"ǩ","Ǫ":"ǫ","Ǭ":"ǭ","Ǯ":"ǯ","Ǳ":"ǳ","ǲ":"ǳ","Ǵ":"ǵ","Ƕ":"ƕ","Ƿ":"ƿ","Ǹ":"ǹ","Ǻ":"ǻ","Ǽ":"ǽ","Ǿ":"ǿ","Ȁ":"ȁ","Ȃ":"ȃ","Ȅ":"ȅ","Ȇ":"ȇ","Ȉ":"ȉ","Ȋ":"ȋ","Ȍ":"ȍ","Ȏ":"ȏ","Ȑ":"ȑ","Ȓ":"ȓ","Ȕ":"ȕ","Ȗ":"ȗ","Ș":"ș","Ț":"ț","Ȝ":"ȝ","Ȟ":"ȟ","Ƞ":"ƞ","Ȣ":"ȣ","Ȥ":"ȥ","Ȧ":"ȧ","Ȩ":"ȩ","Ȫ":"ȫ","Ȭ":"ȭ","Ȯ":"ȯ","Ȱ":"ȱ","Ȳ":"ȳ","Ⱥ":"ⱥ","Ȼ":"ȼ","Ƚ":"ƚ","Ⱦ":"ⱦ","Ɂ":"ɂ","Ƀ":"ƀ","Ʉ":"ʉ","Ʌ":"ʌ","Ɇ":"ɇ","Ɉ":"ɉ","Ɋ":"ɋ","Ɍ":"ɍ","Ɏ":"ɏ","ͅ":"ι","Ͱ":"ͱ","Ͳ":"ͳ","Ͷ":"ͷ","Ϳ":"ϳ","Ά":"ά","Έ":"έ","Ή":"ή","Ί":"ί","Ό":"ό","Ύ":"ύ","Ώ":"ώ","Α":"α","Β":"β","Γ":"γ","Δ":"δ","Ε":"ε","Ζ":"ζ","Η":"η","Θ":"θ","Ι":"ι","Κ":"κ","Λ":"λ","Μ":"μ","Ν":"ν","Ξ":"ξ","Ο":"ο","Π":"π","Ρ":"ρ","Σ":"σ","Τ":"τ","Υ":"υ","Φ":"φ","Χ":"χ","Ψ":"ψ","Ω":"ω","Ϊ":"ϊ","Ϋ":"ϋ","ς":"σ","Ϗ":"ϗ","ϐ":"β","ϑ":"θ","ϕ":"φ","ϖ":"π","Ϙ":"ϙ","Ϛ":"ϛ","Ϝ":"ϝ","Ϟ":"ϟ","Ϡ":"ϡ","Ϣ":"ϣ","Ϥ":"ϥ","Ϧ":"ϧ","Ϩ":"ϩ","Ϫ":"ϫ","Ϭ":"ϭ","Ϯ":"ϯ","ϰ":"κ","ϱ":"ρ","ϴ":"θ","ϵ":"ε","Ϸ":"ϸ","Ϲ":"ϲ","Ϻ":"ϻ","Ͻ":"ͻ","Ͼ":"ͼ","Ͽ":"ͽ","Ѐ":"ѐ","Ё":"ё","Ђ":"ђ","Ѓ":"ѓ","Є":"є","Ѕ":"ѕ","І":"і","Ї":"ї","Ј":"ј","Љ":"љ","Њ":"њ","Ћ":"ћ","Ќ":"ќ","Ѝ":"ѝ","Ў":"ў","Џ":"џ","А":"а","Б":"б","В":"в","Г":"г","Д":"д","Е":"е","Ж":"ж","З":"з","И":"и","Й":"й","К":"к","Л":"л","М":"м","Н":"н","О":"о","П":"п","Р":"р","С":"с","Т":"т","У":"у","Ф":"ф","Х":"х","Ц":"ц","Ч":"ч","Ш":"ш","Щ":"щ","Ъ":"ъ","Ы":"ы","Ь":"ь","Э":"э","Ю":"ю","Я":"я","Ѡ":"ѡ","Ѣ":"ѣ","Ѥ":"ѥ","Ѧ":"ѧ","Ѩ":"ѩ","Ѫ":"ѫ","Ѭ":"ѭ","Ѯ":"ѯ","Ѱ":"ѱ","Ѳ":"ѳ","Ѵ":"ѵ","Ѷ":"ѷ","Ѹ":"ѹ","Ѻ":"ѻ","Ѽ":"ѽ","Ѿ":"ѿ","Ҁ":"ҁ","Ҋ":"ҋ","Ҍ":"ҍ","Ҏ":"ҏ","Ґ":"ґ","Ғ":"ғ","Ҕ":"ҕ","Җ":"җ","Ҙ":"ҙ","Қ":"қ","Ҝ":"ҝ","Ҟ":"ҟ","Ҡ":"ҡ","Ң":"ң","Ҥ":"ҥ","Ҧ":"ҧ","Ҩ":"ҩ","Ҫ":"ҫ","Ҭ":"ҭ","Ү":"ү","Ұ":"ұ","Ҳ":"ҳ","Ҵ":"ҵ","Ҷ":"ҷ","Ҹ":"ҹ","Һ":"һ","Ҽ":"ҽ","Ҿ":"ҿ","Ӏ":"ӏ","Ӂ":"ӂ","Ӄ":"ӄ","Ӆ":"ӆ","Ӈ":"ӈ","Ӊ":"ӊ","Ӌ":"ӌ","Ӎ":"ӎ","Ӑ":"ӑ","Ӓ":"ӓ","Ӕ":"ӕ","Ӗ":"ӗ","Ә":"ә","Ӛ":"ӛ","Ӝ":"ӝ","Ӟ":"ӟ","Ӡ":"ӡ","Ӣ":"ӣ","Ӥ":"ӥ","Ӧ":"ӧ","Ө":"ө","Ӫ":"ӫ","Ӭ":"ӭ","Ӯ":"ӯ","Ӱ":"ӱ","Ӳ":"ӳ","Ӵ":"ӵ","Ӷ":"ӷ","Ӹ":"ӹ","Ӻ":"ӻ","Ӽ":"ӽ","Ӿ":"ӿ","Ԁ":"ԁ","Ԃ":"ԃ","Ԅ":"ԅ","Ԇ":"ԇ","Ԉ":"ԉ","Ԋ":"ԋ","Ԍ":"ԍ","Ԏ":"ԏ","Ԑ":"ԑ","Ԓ":"ԓ","Ԕ":"ԕ","Ԗ":"ԗ","Ԙ":"ԙ","Ԛ":"ԛ","Ԝ":"ԝ","Ԟ":"ԟ","Ԡ":"ԡ","Ԣ":"ԣ","Ԥ":"ԥ","Ԧ":"ԧ","Ԩ":"ԩ","Ԫ":"ԫ","Ԭ":"ԭ","Ԯ":"ԯ","Ա":"ա","Բ":"բ","Գ":"գ","Դ":"դ","Ե":"ե","Զ":"զ","Է":"է","Ը":"ը","Թ":"թ","Ժ":"ժ","Ի":"ի","Լ":"լ","Խ":"խ","Ծ":"ծ","Կ":"կ","Հ":"հ","Ձ":"ձ","Ղ":"ղ","Ճ":"ճ","Մ":"մ","Յ":"յ","Ն":"ն","Շ":"շ","Ո":"ո","Չ":"չ","Պ":"պ","Ջ":"ջ","Ռ":"ռ","Ս":"ս","Վ":"վ","Տ":"տ","Ր":"ր","Ց":"ց","Ւ":"ւ","Փ":"փ","Ք":"ք","Օ":"օ","Ֆ":"ֆ","Ⴀ":"ⴀ","Ⴁ":"ⴁ","Ⴂ":"ⴂ","Ⴃ":"ⴃ","Ⴄ":"ⴄ","Ⴅ":"ⴅ","Ⴆ":"ⴆ","Ⴇ":"ⴇ","Ⴈ":"ⴈ","Ⴉ":"ⴉ","Ⴊ":"ⴊ","Ⴋ":"ⴋ","Ⴌ":"ⴌ","Ⴍ":"ⴍ","Ⴎ":"ⴎ","Ⴏ":"ⴏ","Ⴐ":"ⴐ","Ⴑ":"ⴑ","Ⴒ":"ⴒ","Ⴓ":"ⴓ","Ⴔ":"ⴔ","Ⴕ":"ⴕ","Ⴖ":"ⴖ","Ⴗ":"ⴗ","Ⴘ":"ⴘ","Ⴙ":"ⴙ","Ⴚ":"ⴚ","Ⴛ":"ⴛ","Ⴜ":"ⴜ","Ⴝ":"ⴝ","Ⴞ":"ⴞ","Ⴟ":"ⴟ","Ⴠ":"ⴠ","Ⴡ":"ⴡ","Ⴢ":"ⴢ","Ⴣ":"ⴣ","Ⴤ":"ⴤ","Ⴥ":"ⴥ","Ⴧ":"ⴧ","Ⴭ":"ⴭ","Ḁ":"ḁ","Ḃ":"ḃ","Ḅ":"ḅ","Ḇ":"ḇ","Ḉ":"ḉ","Ḋ":"ḋ","Ḍ":"ḍ","Ḏ":"ḏ","Ḑ":"ḑ","Ḓ":"ḓ","Ḕ":"ḕ","Ḗ":"ḗ","Ḙ":"ḙ","Ḛ":"ḛ","Ḝ":"ḝ","Ḟ":"ḟ","Ḡ":"ḡ","Ḣ":"ḣ","Ḥ":"ḥ","Ḧ":"ḧ","Ḩ":"ḩ","Ḫ":"ḫ","Ḭ":"ḭ","Ḯ":"ḯ","Ḱ":"ḱ","Ḳ":"ḳ","Ḵ":"ḵ","Ḷ":"ḷ","Ḹ":"ḹ","Ḻ":"ḻ","Ḽ":"ḽ","Ḿ":"ḿ","Ṁ":"ṁ","Ṃ":"ṃ","Ṅ":"ṅ","Ṇ":"ṇ","Ṉ":"ṉ","Ṋ":"ṋ","Ṍ":"ṍ","Ṏ":"ṏ","Ṑ":"ṑ","Ṓ":"ṓ","Ṕ":"ṕ","Ṗ":"ṗ","Ṙ":"ṙ","Ṛ":"ṛ","Ṝ":"ṝ","Ṟ":"ṟ","Ṡ":"ṡ","Ṣ":"ṣ","Ṥ":"ṥ","Ṧ":"ṧ","Ṩ":"ṩ","Ṫ":"ṫ","Ṭ":"ṭ","Ṯ":"ṯ","Ṱ":"ṱ","Ṳ":"ṳ","Ṵ":"ṵ","Ṷ":"ṷ","Ṹ":"ṹ","Ṻ":"ṻ","Ṽ":"ṽ","Ṿ":"ṿ","Ẁ":"ẁ","Ẃ":"ẃ","Ẅ":"ẅ","Ẇ":"ẇ","Ẉ":"ẉ","Ẋ":"ẋ","Ẍ":"ẍ","Ẏ":"ẏ","Ẑ":"ẑ","Ẓ":"ẓ","Ẕ":"ẕ","ẛ":"ṡ","Ạ":"ạ","Ả":"ả","Ấ":"ấ","Ầ":"ầ","Ẩ":"ẩ","Ẫ":"ẫ","Ậ":"ậ","Ắ":"ắ","Ằ":"ằ","Ẳ":"ẳ","Ẵ":"ẵ","Ặ":"ặ","Ẹ":"ẹ","Ẻ":"ẻ","Ẽ":"ẽ","Ế":"ế","Ề":"ề","Ể":"ể","Ễ":"ễ","Ệ":"ệ","Ỉ":"ỉ","Ị":"ị","Ọ":"ọ","Ỏ":"ỏ","Ố":"ố","Ồ":"ồ","Ổ":"ổ","Ỗ":"ỗ","Ộ":"ộ","Ớ":"ớ","Ờ":"ờ","Ở":"ở","Ỡ":"ỡ","Ợ":"ợ","Ụ":"ụ","Ủ":"ủ","Ứ":"ứ","Ừ":"ừ","Ử":"ử","Ữ":"ữ","Ự":"ự","Ỳ":"ỳ","Ỵ":"ỵ","Ỷ":"ỷ","Ỹ":"ỹ","Ỻ":"ỻ","Ỽ":"ỽ","Ỿ":"ỿ","Ἀ":"ἀ","Ἁ":"ἁ","Ἂ":"ἂ","Ἃ":"ἃ","Ἄ":"ἄ","Ἅ":"ἅ","Ἆ":"ἆ","Ἇ":"ἇ","Ἐ":"ἐ","Ἑ":"ἑ","Ἒ":"ἒ","Ἓ":"ἓ","Ἔ":"ἔ","Ἕ":"ἕ","Ἠ":"ἠ","Ἡ":"ἡ","Ἢ":"ἢ","Ἣ":"ἣ","Ἤ":"ἤ","Ἥ":"ἥ","Ἦ":"ἦ","Ἧ":"ἧ","Ἰ":"ἰ","Ἱ":"ἱ","Ἲ":"ἲ","Ἳ":"ἳ","Ἴ":"ἴ","Ἵ":"ἵ","Ἶ":"ἶ","Ἷ":"ἷ","Ὀ":"ὀ","Ὁ":"ὁ","Ὂ":"ὂ","Ὃ":"ὃ","Ὄ":"ὄ","Ὅ":"ὅ","Ὑ":"ὑ","Ὓ":"ὓ","Ὕ":"ὕ","Ὗ":"ὗ","Ὠ":"ὠ","Ὡ":"ὡ","Ὢ":"ὢ","Ὣ":"ὣ","Ὤ":"ὤ","Ὥ":"ὥ","Ὦ":"ὦ","Ὧ":"ὧ","Ᾰ":"ᾰ","Ᾱ":"ᾱ","Ὰ":"ὰ","Ά":"ά","ι":"ι","Ὲ":"ὲ","Έ":"έ","Ὴ":"ὴ","Ή":"ή","Ῐ":"ῐ","Ῑ":"ῑ","Ὶ":"ὶ","Ί":"ί","Ῠ":"ῠ","Ῡ":"ῡ","Ὺ":"ὺ","Ύ":"ύ","Ῥ":"ῥ","Ὸ":"ὸ","Ό":"ό","Ὼ":"ὼ","Ώ":"ώ","Ω":"ω","K":"k","Å":"å","Ⅎ":"ⅎ","Ⅰ":"ⅰ","Ⅱ":"ⅱ","Ⅲ":"ⅲ","Ⅳ":"ⅳ","Ⅴ":"ⅴ","Ⅵ":"ⅵ","Ⅶ":"ⅶ","Ⅷ":"ⅷ","Ⅸ":"ⅸ","Ⅹ":"ⅹ","Ⅺ":"ⅺ","Ⅻ":"ⅻ","Ⅼ":"ⅼ","Ⅽ":"ⅽ","Ⅾ":"ⅾ","Ⅿ":"ⅿ","Ↄ":"ↄ","Ⓐ":"ⓐ","Ⓑ":"ⓑ","Ⓒ":"ⓒ","Ⓓ":"ⓓ","Ⓔ":"ⓔ","Ⓕ":"ⓕ","Ⓖ":"ⓖ","Ⓗ":"ⓗ","Ⓘ":"ⓘ","Ⓙ":"ⓙ","Ⓚ":"ⓚ","Ⓛ":"ⓛ","Ⓜ":"ⓜ","Ⓝ":"ⓝ","Ⓞ":"ⓞ","Ⓟ":"ⓟ","Ⓠ":"ⓠ","Ⓡ":"ⓡ","Ⓢ":"ⓢ","Ⓣ":"ⓣ","Ⓤ":"ⓤ","Ⓥ":"ⓥ","Ⓦ":"ⓦ","Ⓧ":"ⓧ","Ⓨ":"ⓨ","Ⓩ":"ⓩ","Ⰰ":"ⰰ","Ⰱ":"ⰱ","Ⰲ":"ⰲ","Ⰳ":"ⰳ","Ⰴ":"ⰴ","Ⰵ":"ⰵ","Ⰶ":"ⰶ","Ⰷ":"ⰷ","Ⰸ":"ⰸ","Ⰹ":"ⰹ","Ⰺ":"ⰺ","Ⰻ":"ⰻ","Ⰼ":"ⰼ","Ⰽ":"ⰽ","Ⰾ":"ⰾ","Ⰿ":"ⰿ","Ⱀ":"ⱀ","Ⱁ":"ⱁ","Ⱂ":"ⱂ","Ⱃ":"ⱃ","Ⱄ":"ⱄ","Ⱅ":"ⱅ","Ⱆ":"ⱆ","Ⱇ":"ⱇ","Ⱈ":"ⱈ","Ⱉ":"ⱉ","Ⱊ":"ⱊ","Ⱋ":"ⱋ","Ⱌ":"ⱌ","Ⱍ":"ⱍ","Ⱎ":"ⱎ","Ⱏ":"ⱏ","Ⱐ":"ⱐ","Ⱑ":"ⱑ","Ⱒ":"ⱒ","Ⱓ":"ⱓ","Ⱔ":"ⱔ","Ⱕ":"ⱕ","Ⱖ":"ⱖ","Ⱗ":"ⱗ","Ⱘ":"ⱘ","Ⱙ":"ⱙ","Ⱚ":"ⱚ","Ⱛ":"ⱛ","Ⱜ":"ⱜ","Ⱝ":"ⱝ","Ⱞ":"ⱞ","Ⱡ":"ⱡ","Ɫ":"ɫ","Ᵽ":"ᵽ","Ɽ":"ɽ","Ⱨ":"ⱨ","Ⱪ":"ⱪ","Ⱬ":"ⱬ","Ɑ":"ɑ","Ɱ":"ɱ","Ɐ":"ɐ","Ɒ":"ɒ","Ⱳ":"ⱳ","Ⱶ":"ⱶ","Ȿ":"ȿ","Ɀ":"ɀ","Ⲁ":"ⲁ","Ⲃ":"ⲃ","Ⲅ":"ⲅ","Ⲇ":"ⲇ","Ⲉ":"ⲉ","Ⲋ":"ⲋ","Ⲍ":"ⲍ","Ⲏ":"ⲏ","Ⲑ":"ⲑ","Ⲓ":"ⲓ","Ⲕ":"ⲕ","Ⲗ":"ⲗ","Ⲙ":"ⲙ","Ⲛ":"ⲛ","Ⲝ":"ⲝ","Ⲟ":"ⲟ","Ⲡ":"ⲡ","Ⲣ":"ⲣ","Ⲥ":"ⲥ","Ⲧ":"ⲧ","Ⲩ":"ⲩ","Ⲫ":"ⲫ","Ⲭ":"ⲭ","Ⲯ":"ⲯ","Ⲱ":"ⲱ","Ⲳ":"ⲳ","Ⲵ":"ⲵ","Ⲷ":"ⲷ","Ⲹ":"ⲹ","Ⲻ":"ⲻ","Ⲽ":"ⲽ","Ⲿ":"ⲿ","Ⳁ":"ⳁ","Ⳃ":"ⳃ","Ⳅ":"ⳅ","Ⳇ":"ⳇ","Ⳉ":"ⳉ","Ⳋ":"ⳋ","Ⳍ":"ⳍ","Ⳏ":"ⳏ","Ⳑ":"ⳑ","Ⳓ":"ⳓ","Ⳕ":"ⳕ","Ⳗ":"ⳗ","Ⳙ":"ⳙ","Ⳛ":"ⳛ","Ⳝ":"ⳝ","Ⳟ":"ⳟ","Ⳡ":"ⳡ","Ⳣ":"ⳣ","Ⳬ":"ⳬ","Ⳮ":"ⳮ","Ⳳ":"ⳳ","Ꙁ":"ꙁ","Ꙃ":"ꙃ","Ꙅ":"ꙅ","Ꙇ":"ꙇ","Ꙉ":"ꙉ","Ꙋ":"ꙋ","Ꙍ":"ꙍ","Ꙏ":"ꙏ","Ꙑ":"ꙑ","Ꙓ":"ꙓ","Ꙕ":"ꙕ","Ꙗ":"ꙗ","Ꙙ":"ꙙ","Ꙛ":"ꙛ","Ꙝ":"ꙝ","Ꙟ":"ꙟ","Ꙡ":"ꙡ","Ꙣ":"ꙣ","Ꙥ":"ꙥ","Ꙧ":"ꙧ","Ꙩ":"ꙩ","Ꙫ":"ꙫ","Ꙭ":"ꙭ","Ꚁ":"ꚁ","Ꚃ":"ꚃ","Ꚅ":"ꚅ","Ꚇ":"ꚇ","Ꚉ":"ꚉ","Ꚋ":"ꚋ","Ꚍ":"ꚍ","Ꚏ":"ꚏ","Ꚑ":"ꚑ","Ꚓ":"ꚓ","Ꚕ":"ꚕ","Ꚗ":"ꚗ","Ꚙ":"ꚙ","Ꚛ":"ꚛ","Ꜣ":"ꜣ","Ꜥ":"ꜥ","Ꜧ":"ꜧ","Ꜩ":"ꜩ","Ꜫ":"ꜫ","Ꜭ":"ꜭ","Ꜯ":"ꜯ","Ꜳ":"ꜳ","Ꜵ":"ꜵ","Ꜷ":"ꜷ","Ꜹ":"ꜹ","Ꜻ":"ꜻ","Ꜽ":"ꜽ","Ꜿ":"ꜿ","Ꝁ":"ꝁ","Ꝃ":"ꝃ","Ꝅ":"ꝅ","Ꝇ":"ꝇ","Ꝉ":"ꝉ","Ꝋ":"ꝋ","Ꝍ":"ꝍ","Ꝏ":"ꝏ","Ꝑ":"ꝑ","Ꝓ":"ꝓ","Ꝕ":"ꝕ","Ꝗ":"ꝗ","Ꝙ":"ꝙ","Ꝛ":"ꝛ","Ꝝ":"ꝝ","Ꝟ":"ꝟ","Ꝡ":"ꝡ","Ꝣ":"ꝣ","Ꝥ":"ꝥ","Ꝧ":"ꝧ","Ꝩ":"ꝩ","Ꝫ":"ꝫ","Ꝭ":"ꝭ","Ꝯ":"ꝯ","Ꝺ":"ꝺ","Ꝼ":"ꝼ","Ᵹ":"ᵹ","Ꝿ":"ꝿ","Ꞁ":"ꞁ","Ꞃ":"ꞃ","Ꞅ":"ꞅ","Ꞇ":"ꞇ","Ꞌ":"ꞌ","Ɥ":"ɥ","Ꞑ":"ꞑ","Ꞓ":"ꞓ","Ꞗ":"ꞗ","Ꞙ":"ꞙ","Ꞛ":"ꞛ","Ꞝ":"ꞝ","Ꞟ":"ꞟ","Ꞡ":"ꞡ","Ꞣ":"ꞣ","Ꞥ":"ꞥ","Ꞧ":"ꞧ","Ꞩ":"ꞩ","Ɦ":"ɦ","Ɜ":"ɜ","Ɡ":"ɡ","Ɬ":"ɬ","Ʞ":"ʞ","Ʇ":"ʇ","Ａ":"ａ","Ｂ":"ｂ","Ｃ":"ｃ","Ｄ":"ｄ","Ｅ":"ｅ","Ｆ":"ｆ","Ｇ":"ｇ","Ｈ":"ｈ","Ｉ":"ｉ","Ｊ":"ｊ","Ｋ":"ｋ","Ｌ":"ｌ","Ｍ":"ｍ","Ｎ":"ｎ","Ｏ":"ｏ","Ｐ":"ｐ","Ｑ":"ｑ","Ｒ":"ｒ","Ｓ":"ｓ","Ｔ":"ｔ","Ｕ":"ｕ","Ｖ":"ｖ","Ｗ":"ｗ","Ｘ":"ｘ","Ｙ":"ｙ","Ｚ":"ｚ","𐐀":"𐐨","𐐁":"𐐩","𐐂":"𐐪","𐐃":"𐐫","𐐄":"𐐬","𐐅":"𐐭","𐐆":"𐐮","𐐇":"𐐯","𐐈":"𐐰","𐐉":"𐐱","𐐊":"𐐲","𐐋":"𐐳","𐐌":"𐐴","𐐍":"𐐵","𐐎":"𐐶","𐐏":"𐐷","𐐐":"𐐸","𐐑":"𐐹","𐐒":"𐐺","𐐓":"𐐻","𐐔":"𐐼","𐐕":"𐐽","𐐖":"𐐾","𐐗":"𐐿","𐐘":"𐑀","𐐙":"𐑁","𐐚":"𐑂","𐐛":"𐑃","𐐜":"𐑄","𐐝":"𐑅","𐐞":"𐑆","𐐟":"𐑇","𐐠":"𐑈","𐐡":"𐑉","𐐢":"𐑊","𐐣":"𐑋","𐐤":"𐑌","𐐥":"𐑍","𐐦":"𐑎","𐐧":"𐑏","𑢠":"𑣀","𑢡":"𑣁","𑢢":"𑣂","𑢣":"𑣃","𑢤":"𑣄","𑢥":"𑣅","𑢦":"𑣆","𑢧":"𑣇","𑢨":"𑣈","𑢩":"𑣉","𑢪":"𑣊","𑢫":"𑣋","𑢬":"𑣌","𑢭":"𑣍","𑢮":"𑣎","𑢯":"𑣏","𑢰":"𑣐","𑢱":"𑣑","𑢲":"𑣒","𑢳":"𑣓","𑢴":"𑣔","𑢵":"𑣕","𑢶":"𑣖","𑢷":"𑣗","𑢸":"𑣘","𑢹":"𑣙","𑢺":"𑣚","𑢻":"𑣛","𑢼":"𑣜","𑢽":"𑣝","𑢾":"𑣞","𑢿":"𑣟","ß":"ss","İ":"i̇","ŉ":"ʼn","ǰ":"ǰ","ΐ":"ΐ","ΰ":"ΰ","և":"եւ","ẖ":"ẖ","ẗ":"ẗ","ẘ":"ẘ","ẙ":"ẙ","ẚ":"aʾ","ẞ":"ss","ὐ":"ὐ","ὒ":"ὒ","ὔ":"ὔ","ὖ":"ὖ","ᾀ":"ἀι","ᾁ":"ἁι","ᾂ":"ἂι","ᾃ":"ἃι","ᾄ":"ἄι","ᾅ":"ἅι","ᾆ":"ἆι","ᾇ":"ἇι","ᾈ":"ἀι","ᾉ":"ἁι","ᾊ":"ἂι","ᾋ":"ἃι","ᾌ":"ἄι","ᾍ":"ἅι","ᾎ":"ἆι","ᾏ":"ἇι","ᾐ":"ἠι","ᾑ":"ἡι","ᾒ":"ἢι","ᾓ":"ἣι","ᾔ":"ἤι","ᾕ":"ἥι","ᾖ":"ἦι","ᾗ":"ἧι","ᾘ":"ἠι","ᾙ":"ἡι","ᾚ":"ἢι","ᾛ":"ἣι","ᾜ":"ἤι","ᾝ":"ἥι","ᾞ":"ἦι","ᾟ":"ἧι","ᾠ":"ὠι","ᾡ":"ὡι","ᾢ":"ὢι","ᾣ":"ὣι","ᾤ":"ὤι","ᾥ":"ὥι","ᾦ":"ὦι","ᾧ":"ὧι","ᾨ":"ὠι","ᾩ":"ὡι","ᾪ":"ὢι","ᾫ":"ὣι","ᾬ":"ὤι","ᾭ":"ὥι","ᾮ":"ὦι","ᾯ":"ὧι","ᾲ":"ὰι","ᾳ":"αι","ᾴ":"άι","ᾶ":"ᾶ","ᾷ":"ᾶι","ᾼ":"αι","ῂ":"ὴι","ῃ":"ηι","ῄ":"ήι","ῆ":"ῆ","ῇ":"ῆι","ῌ":"ηι","ῒ":"ῒ","ΐ":"ΐ","ῖ":"ῖ","ῗ":"ῗ","ῢ":"ῢ","ΰ":"ΰ","ῤ":"ῤ","ῦ":"ῦ","ῧ":"ῧ","ῲ":"ὼι","ῳ":"ωι","ῴ":"ώι","ῶ":"ῶ","ῷ":"ῶι","ῼ":"ωι","ﬀ":"ff","ﬁ":"fi","ﬂ":"fl","ﬃ":"ffi","ﬄ":"ffl","ﬅ":"st","ﬆ":"st","ﬓ":"մն","ﬔ":"մե","ﬕ":"մի","ﬖ":"վն","ﬗ":"մխ"};e.exports=function(e){return e.slice(1,e.length-1).trim().replace(t,function(e){return i[e]||" "})}},function(e,n,t){"use strict";function i(e){return{softbreak:"\n",escape:o,options:e||{},render:l}}var o=t(28).escapeXml,r=function(e,n,t){var i="<"+e;if(n&&n.length>0)for(var o,r=0;void 0!==(o=n[r]);)i+=" "+o[0]+'="'+o[1]+'"',r++;return t&&(i+=" /"),i+=">"},a=/\<[^>]*\>/,s=function(e){return e.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase()},l=function(e){var n,t,i,o,l,c,u,d,p,h=e.walker(),f="",m="\n",g=0,v=0,y="  ",b=function(e){f+=g>0?e.replace(a,""):e,m=e},T=this.escape,w=function(){if("\n"!==m){f+="\n",m="\n";for(var e=v;e>0;e--)f+=y}},E=this.options;for(E.time&&console.time("rendering"),f+='<?xml version="1.0" encoding="UTF-8"?>\n',f+='<!DOCTYPE CommonMark SYSTEM "CommonMark.dtd">\n';i=h.next();)if(l=i.entering,o=i.node,p=o.type,u=o.isContainer,d="HorizontalRule"===p||"Hardbreak"===p||"Softbreak"===p,c="Html"===p||"HtmlInline"===p,t=s(p),l){switch(n=[],p){case"List":null!==o.listType&&n.push(["type",o.listType.toLowerCase()]),null!==o.listStart&&n.push(["start",String(o.listStart)]),null!==o.listTight&&n.push(["tight",o.listTight?"true":"false"]);var C=o.listDelimiter;if(null!==C){var S="";S="."===C?"period":"paren",n.push(["delimiter",S])}break;case"CodeBlock":o.info&&n.push(["info",o.info]);break;case"Header":n.push(["level",String(o.level)]);break;case"Link":case"Image":n.push(["destination",o.destination]),n.push(["title",o.title])}if(E.sourcepos){var x=o.sourcepos;x&&n.push(["sourcepos",String(x[0][0])+":"+String(x[0][1])+"-"+String(x[1][0])+":"+String(x[1][1])])}if(w(),b(r(t,n,d)),u)v+=1;else if(!u&&!d){var R=o.literal;R&&b(c?R:T(R)),b(r("/"+t))}}else v-=1,w(),b(r("/"+t));return E.time&&console.timeEnd("rendering"),f+="\n"};e.exports=i},function(e,n,t){function i(e){return null===e||void 0===e}function o(e){return!(!e||"object"!=typeof e||"number"!=typeof e.length)&&("function"==typeof e.copy&&"function"==typeof e.slice&&!(e.length>0&&"number"!=typeof e[0]))}function r(e,n,t){var r,u;if(i(e)||i(n))return!1;if(e.prototype!==n.prototype)return!1;if(l(e))return!!l(n)&&(e=a.call(e),n=a.call(n),c(e,n,t));if(o(e)){if(!o(n))return!1;if(e.length!==n.length)return!1;for(r=0;r<e.length;r++)if(e[r]!==n[r])return!1;return!0}try{var d=s(e),p=s(n)}catch(h){return!1}if(d.length!=p.length)return!1;for(d.sort(),p.sort(),r=d.length-1;r>=0;r--)if(d[r]!=p[r])return!1;for(r=d.length-1;r>=0;r--)if(u=d[r],!c(e[u],n[u],t))return!1;return typeof e==typeof n}var a=Array.prototype.slice,s=t(141),l=t(140),c=e.exports=function(e,n,t){return t||(t={}),e===n||(e instanceof Date&&n instanceof Date?e.getTime()===n.getTime():!e||!n||"object"!=typeof e&&"object"!=typeof n?t.strict?e===n:e==n:r(e,n,t))}},function(e,n){function t(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function i(e){return e&&"object"==typeof e&&"number"==typeof e.length&&Object.prototype.hasOwnProperty.call(e,"callee")&&!Object.prototype.propertyIsEnumerable.call(e,"callee")||!1}var o="[object Arguments]"==function(){return Object.prototype.toString.call(arguments)}();n=e.exports=o?t:i,n.supported=t,n.unsupported=i},function(e,n){function t(e){var n=[];for(var t in e)n.push(t);return n}n=e.exports="function"==typeof Object.keys?Object.keys:t,n.shim=t},function(e,n,t){function i(e){var n=Object.keys(e).join("|"),t=r(e);n+="|#[xX][\\da-fA-F]+|#\\d+";var i=new RegExp("&(?:"+n+");","g");return function(e){return String(e).replace(i,t)}}function o(e,n){return e<n?1:-1}function r(e){return function(n){return"#"===n.charAt(1)?c("X"===n.charAt(2)||"x"===n.charAt(2)?parseInt(n.substr(3),16):parseInt(n.substr(2),10)):e[n.slice(1,-1)]}}var a=t(100),s=t(231),l=t(101),c=t(143),u=i(l),d=i(a),p=function(){function e(e){return";"!==e.substr(-1)&&(e+=";"),u(e)}for(var n=Object.keys(s).sort(o),t=Object.keys(a).sort(o),i=0,l=0;i<t.length;i++)n[l]===t[i]?(t[i]+=";?",l++):t[i]+=";";var c=new RegExp("&(?:"+t.join("|")+"|#[xX][\\da-fA-F]+;?|#\\d+;?)","g"),u=r(a);return function(n){return String(n).replace(c,e)}}();e.exports={XML:u,HTML:p,HTMLStrict:d}},function(e,n,t){function i(e){if(e>=55296&&e<=57343||e>1114111)return"�";e in o&&(e=o[e]);var n="";return e>65535&&(e-=65536,n+=String.fromCharCode(e>>>10&1023|55296),e=56320|1023&e),n+=String.fromCharCode(e)}var o=t(230);e.exports=i},function(e,n,t){function i(e){return Object.keys(e).sort().reduce(function(n,t){return n[e[t]]="&"+t+";",n},{})}function o(e){var n=[],t=[];return Object.keys(e).forEach(function(e){1===e.length?n.push("\\"+e):t.push(e)}),t.unshift("["+n.join("")+"]"),new RegExp(t.join("|"),"g")}function r(e){return"&#x"+e.charCodeAt(0).toString(16).toUpperCase()+";"}function a(e){var n=e.charCodeAt(0),t=e.charCodeAt(1),i=1024*(n-55296)+t-56320+65536;return"&#x"+i.toString(16).toUpperCase()+";"}function s(e,n){function t(n){return e[n]}return function(e){return e.replace(n,t).replace(f,a).replace(h,r)}}function l(e){return e.replace(m,r).replace(f,a).replace(h,r)}var c=i(t(101)),u=o(c);n.XML=s(c,u);var d=i(t(100)),p=o(d);n.HTML=s(d,p);var h=/[^\0-\x7F]/g,f=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,m=o(c);n.escape=l},function(e,n){"use strict";function t(e){return e.replace(i,function(e,n){return n.toUpperCase()})}var i=/-(.)/g;e.exports=t},function(e,n,t){"use strict";function i(e){return o(e.replace(r,"ms-"))}var o=t(145),r=/^-ms-/;e.exports=i},function(e,n,t){"use strict";function i(e){return!!e&&("object"==typeof e||"function"==typeof e)&&"length"in e&&!("setInterval"in e)&&"number"!=typeof e.nodeType&&(Array.isArray(e)||"callee"in e||"item"in e)}function o(e){return i(e)?Array.isArray(e)?e.slice():r(e):[e]}var r=t(156);e.exports=o},function(e,n,t){"use strict";function i(e){var n=e.match(u);return n&&n[1].toLowerCase()}function o(e,n){var t=c;c?void 0:l(!1);var o=i(e),r=o&&s(o);if(r){t.innerHTML=r[1]+e+r[2];for(var u=r[0];u--;)t=t.lastChild}else t.innerHTML=e;var d=t.getElementsByTagName("script");d.length&&(n?void 0:l(!1),a(d).forEach(n));for(var p=a(t.childNodes);t.lastChild;)t.removeChild(t.lastChild);return p}var r=t(7),a=t(147),s=t(82),l=t(2),c=r.canUseDOM?document.createElement("div"):null,u=/^\s*<(\w+)/;e.exports=o},function(e,n){"use strict";function t(e){return e===window?{x:window.pageXOffset||document.documentElement.scrollLeft,y:window.pageYOffset||document.documentElement.scrollTop}:{x:e.scrollLeft,y:e.scrollTop}}e.exports=t},function(e,n){"use strict";function t(e){return e.replace(i,"-$1").toLowerCase()}var i=/([A-Z])/g;e.exports=t},function(e,n,t){"use strict";function i(e){return o(e).replace(r,"-ms-")}var o=t(150),r=/^ms-/;e.exports=i},function(e,n){"use strict";function t(e){return!(!e||!("function"==typeof Node?e instanceof Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}e.exports=t},function(e,n,t){"use strict";function i(e){return o(e)&&3==e.nodeType}var o=t(152);e.exports=i},function(e,n){"use strict";function t(e,n,t){if(!e)return null;var o={};for(var r in e)i.call(e,r)&&(o[r]=n.call(t,e[r],r,e));return o}var i=Object.prototype.hasOwnProperty;e.exports=t},function(e,n){"use strict";function t(e){var n={};return function(t){return n.hasOwnProperty(t)||(n[t]=e.call(this,t)),n[t]}}e.exports=t},function(e,n,t){"use strict";function i(e){var n=e.length;if(Array.isArray(e)||"object"!=typeof e&&"function"!=typeof e?o(!1):void 0,"number"!=typeof n?o(!1):void 0,0===n||n-1 in e?void 0:o(!1),e.hasOwnProperty)try{return Array.prototype.slice.call(e)}catch(t){}for(var i=Array(n),r=0;r<n;r++)i[r]=e[r];return i}var o=t(2);e.exports=i},function(e,n){"use strict";function t(e,n,t){function o(){return s=!0,l?void(u=[].concat(i.call(arguments))):void t.apply(this,arguments)}function r(){if(!s&&(c=!0,!l)){for(l=!0;!s&&a<e&&c;)c=!1,n.call(this,a++,r,o);return l=!1,s?void t.apply(this,u):void(a>=e&&c&&(s=!0,t()))}}var a=0,s=!1,l=!1,c=!1,u=void 0;r()}n.__esModule=!0;var i=Array.prototype.slice;n.loopAsync=t},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(24),r=i(o),a=t(90),s=i(a);n.default=r.default(s.default,"enableBeforeUnload is deprecated, use useBeforeUnload instead"),e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(24),r=i(o),a=t(29),s=i(a);n.default=r.default(s.default,"enableQueries is deprecated, use useQueries instead"),e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(24),r=i(o),a=t(88),s=i(a),l=t(85),c=i(l);n.createHistory=c.default;var u=t(52),d=i(u);n.createHashHistory=d.default;var p=t(89),h=i(p);n.createMemoryHistory=h.default;var f=t(54),m=i(f);n.useBasename=m.default;var g=t(90),v=i(g);n.useBeforeUnload=v.default;var y=t(29),b=i(y);n.useQueries=b.default;var T=t(22),w=i(T);n.Actions=w.default;var E=t(158),C=i(E);n.enableBeforeUnload=C.default;var S=t(159),x=i(S);n.enableQueries=x.default;var R=r.default(s.default,"Using createLocation without a history instance is deprecated; please use history.createLocation instead");n.createLocation=R},function(e,n){"use strict";var t={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,arguments:!0,arity:!0},o="function"==typeof Object.getOwnPropertySymbols;e.exports=function(e,n,r){if("string"!=typeof n){var a=Object.getOwnPropertyNames(n);o&&(a=a.concat(Object.getOwnPropertySymbols(n)));for(var s=0;s<a.length;++s)if(!(t[a[s]]||i[a[s]]||r&&r[a[s]]))try{e[a[s]]=n[a[s]]}catch(l){}}return e}},function(e,n){"use strict";function t(e){var n,t,i=o[e];if(i)return i;for(i=o[e]=[],n=0;n<128;n++)t=String.fromCharCode(n),i.push(t);for(n=0;n<e.length;n++)t=e.charCodeAt(n),i[t]="%"+("0"+t.toString(16).toUpperCase()).slice(-2);return i}function i(e,n){var o;return"string"!=typeof n&&(n=i.defaultChars),o=t(n),e.replace(/(%[a-f0-9]{2})+/gi,function(e){var n,t,i,r,a,s,l,c="";for(n=0,t=e.length;n<t;n+=3)i=parseInt(e.slice(n+1,n+3),16),i<128?c+=o[i]:192===(224&i)&&n+3<t&&(r=parseInt(e.slice(n+4,n+6),16),128===(192&r))?(l=i<<6&1984|63&r,c+=l<128?"��":String.fromCharCode(l),n+=3):224===(240&i)&&n+6<t&&(r=parseInt(e.slice(n+4,n+6),16),a=parseInt(e.slice(n+7,n+9),16),128===(192&r)&&128===(192&a))?(l=i<<12&61440|r<<6&4032|63&a,c+=l<2048||l>=55296&&l<=57343?"���":String.fromCharCode(l),n+=6):240===(248&i)&&n+9<t&&(r=parseInt(e.slice(n+4,n+6),16),a=parseInt(e.slice(n+7,n+9),16),s=parseInt(e.slice(n+10,n+12),16),128===(192&r)&&128===(192&a)&&128===(192&s))?(l=i<<18&1835008|r<<12&258048|a<<6&4032|63&s,l<65536||l>1114111?c+="����":(l-=65536,c+=String.fromCharCode(55296+(l>>10),56320+(1023&l))),n+=9):c+="�";return c})}var o={};i.defaultChars=";/?:@&=+$,#",i.componentChars="",e.exports=i},function(e,n){"use strict";function t(e){var n,t,i=o[e];if(i)return i;for(i=o[e]=[],n=0;n<128;n++)t=String.fromCharCode(n),/^[0-9a-z]$/i.test(t)?i.push(t):i.push("%"+("0"+n.toString(16).toUpperCase()).slice(-2));for(n=0;n<e.length;n++)i[e.charCodeAt(n)]=e[n];return i}function i(e,n,o){var r,a,s,l,c,u="";for("string"!=typeof n&&(o=n,n=i.defaultChars),"undefined"==typeof o&&(o=!0),c=t(n),r=0,a=e.length;r<a;r++)if(s=e.charCodeAt(r),o&&37===s&&r+2<a&&/^[0-9a-f]{2}$/i.test(e.slice(r+1,r+3)))u+=e.slice(r,r+3),r+=2;else if(s<128)u+=c[s];else if(s>=55296&&s<=57343){if(s>=55296&&s<=56319&&r+1<a&&(l=e.charCodeAt(r+1),l>=56320&&l<=57343)){u+=encodeURIComponent(e[r]+e[r+1]),r++;continue}u+="%EF%BF%BD"}else u+=encodeURIComponent(e[r]);return u}var o={};i.defaultChars=";/?:@&=+$,-_.!~*'()#",i.componentChars="-_.!~*'()",e.exports=i},function(e,n,t){"use strict";var i=t(291);n.extract=function(e){return e.split("?")[1]||""},n.parse=function(e){return"string"!=typeof e?{}:(e=e.trim().replace(/^(\?|#|&)/,""),e?e.split("&").reduce(function(e,n){var t=n.replace(/\+/g," ").split("="),i=t.shift(),o=t.length>0?t.join("="):void 0;return i=decodeURIComponent(i),o=void 0===o?null:decodeURIComponent(o),e.hasOwnProperty(i)?Array.isArray(e[i])?e[i].push(o):e[i]=[e[i],o]:e[i]=o,e},{}):{})},n.stringify=function(e){return e?Object.keys(e).sort().map(function(n){var t=e[n];return void 0===t?"":null===t?n:Array.isArray(t)?t.slice().sort().map(function(e){return i(n)+"="+i(e)}).join("&"):i(n)+"="+i(t)}).filter(function(e){return e.length>0}).join("&"):""}},function(e,n){e.exports='## Changelog\n---\n\n## 0.8\n> February 2017\n\nThe API is headed towards a 1.0 release, hopefully by the summer. As we head there will be some breaking changes and this release includes some of these, so please read the section on Important Breaking Changes below to see what needs to be changed. Sorry!\n\n**Important breaking changes:**\n\n * `Event` -> `TimeEvent` (except static Event methods)\n * Removed `atTime()` and `bisect()` from the Collection API, because these depend on an ordered list and should live on the TimeSeries.\n * Removed the convenience static methods that wrapped `timeSeriesListReduce()`, specifically `timeSeriesListSum()` and `timeSeriesListAvg()`, use `timeSeriesListReduce()` now with whatever reducer function you want (e.g. `sum()`)\n * `Event.sum()` and `Event.avg()` are removed. Use `Event.combine()` instead.\n\n**Features and changes:**\n\n * **TimeSeries merging**: Improves performance for merging and combining TimeSeries events up to 10 times (Fixes [#51](https://github.com/esnet/pond/issues/51)).\n * **TimeSeries merging API** TimeSeries level API has been simplified, allowing any reducer function (e.g. `avg()` to be used when combining multiple TimeSeries, but removing some wrapper functions (see breaking changes below). (Fixes [#58](https://github.com/esnet/pond/issues/58), [#59](https://github.com/esnet/pond/issues/59))\n * **Event class hierarchy**: The event class structure was finally cleaned up internally, but this comes with a major breaking change: events that were of class `Event` before (i.e. had a timestamp) are now `TimeEvents`, while `Event` is a base class shared by `TimeEvent`, `TimeRangeEvent` and `IndexedEvent`. Further, `Events` can now be further sub-classed (see Avro change for why). Static event methods are still on `Event`.\n * **Avro support**. Along with the ability to subclass an `Event` comes the ability to define a schema for the subclass. This allows `Event`s, `TimeSeries` and `TimeRange`s to serialize themselves to Avro buffers for compact and correct transfers. This feature is still experimental, and isn\'t currently supported in PyPond.\n * **De-duplication** - you can now de-duplicate the events in a `Collection` with `Collection.dedup()`. Later events win. In a related change you can use `collection.atKey()` to get back a list of events at that exact time, timerange or index, or a map of key to a list of events at that key with `eventListAsMap()`. This partially addresses [#52](https://github.com/esnet/pond/issues/52).\n * **Prettier** - Uses prettier for code formatting now, so lots of stylistic changes in this release. Hopefully this will simplify that part of code maintenance going forward.\n\n\n## v0.7.1\n> October 2016\n\nPatch release to fix several bugs and improve performance:\n- renaming columns now does so with mapKeys, rather than breaking the whole thing apart\n- fixes merging of TimeSeries so that if the result isn\'t chronological then it will sort them before trying to make a new TimeSeries\n- fixes atTime() boundary condition (#45)\n- fixed align processors to handle initial events that are already aligned\n- internal calls to setCollection can skip the isChronological test with a flag since they know they are maintaining order.\n\n## v0.7\n> September 2016\n\nThis update had three main goals:\n - Better handling of imperfect data.\n - Add quantile and percentile calculations\n - Improve API consistency\n\nIn addition, PyPond is now available with feature parity to the pond.js.\n\nBreaking changes to look out for: `Pipeline.aggregate()` has changed to allow better composition of emitted events, aggregation functions are now supplied as `avg()` rather than simple `avg`. And `UnboundedIns` are now simply `Stream`.\n\n**General:**\n\n -  Consistent use of fieldSpec, fieldPath etc across the API.\n -  Aggregation functions now all need to be specified as `avg()` rather than `avg`. i.e. they are now a function that returns a function. This is to allow them to take parameters. e.g `percentile(95)`.\n -  * All aggregation functions now accept a strategy for dealing with missing values. Missing values in pond.js are `NaN`s, `null`, or `undefined`. Strategies added are:\n    - `keepMissing` - pass through all values to the aggregator\n    - `ignoreMissing` - pass though only non-missing values\n    - `zeroMissing` - turn missing values into 0\n    - `propagateMissing` - cause the aggregator to return null if there is a missing value\n\n**Collection:**\n\n - Adds `quantile()` and `percentile()` aggregation functions\n\n**TimeSeries:**\n\n - Adds quantile and percentile aggregation functions\n - Fixed: better handling of UTC times when generating IndexedEvent results\n - More mutation support:\n    - Added `renameColumns()` to deep rename Events within a TimeSeries\n    - Added `setName()` to change the name of a TimeSeries\n    - Added `setMeta(key, value)` to change the meta data in a TimeSeries\n  In each case you will get a new TimeSeries back.\n - Added `fill()` method to fill in missing values within a TimeSeries, using 0s, padding (last good value) or linear interpolation. In each case you can also specify a limit to the fill\n - Added `align()` method to interpolate data to specific time boundaries (e.g. every 5 minutes). The interpolation can be with last value or linear interpolation. Like fill, a limit can also be supplied.\n - Added `rate()` method to return the derivative of the TimeSeries. Optionally you can ignore negative values.\n\n**Pipelines:**\n\n - Support for`fill()`, `align()` and `rate()` within a Pipeline.\n - `UnboundedIn` is now `Stream`.\n - Changes `aggregation` to more explicitly define the output fields. This allows you to perform multiple aggregations on the same input field, such as aggregating temperature over a collection window to average_temp and max_temp.\n\nBefore:\n```\nconst p = Pipeline()\n  ...\n  .aggregate({in: avg, out: avg})\n  ...\n```\n\nAfter:\n```\nconst p = Pipeline()\n  ...\n  .aggregate({\n      in: {in: keep()},\n      in_avg: {in: avg()},\n      in_95th: {in: percentile(95)}}\n  })\n  ...\n```\n\n - As shown in the above example, you can use the `percentile()` function. Note that this is a little different from the others in that you need to call the function with the percentile value you want. A second parameter controls the way the function behaves when a percentile does not land on a specific sample. The default is to linearly interpolate.\n - Fixes a bug where Pipeline.taker() would ignore the first event.\n\n**Internal**\n\n - Website now built with create-react-app\n - Tests use Jest now and run in the terminal (for create-react-app workflow)\n - General project restructuring\n\n---\n\n## v0.6\n\nThis update concentrates on providing a better API for processing a TimeSeries object. It updates the Pipeline code to be able to return the results as an alternative to evoking a callback function. Using this API several methods on the TimeSeries have been reworked to directly return their results as a new TimeSeries. In addition, TimeSeries now has several new methods to do roll-ups aggregations and collections directly.\n\n**TimeSeries**\n\nConstruction:\n - a TimeSeries is now checked for chronological events and the code will throw if there is. This is because there are several methods on the TimeSeries that will produce incorrect results if this is the case and it is far from intuitive why.\n\nWith the change to the batch API we can now greatly simplify several methods on TimeSeries. These three methods now directly return a new TimeSeries:\n - `map()`\n - `select()`\n - `collapse()`.\n\nNew methods that use Pipelines internally to perform common roll-up processing of TimeSeries:\n - `fixedWindowRollup()`\n - `hourlyRollup()`\n - `dailyRollup()`\n - `monthlyRollup()`\n - `yearlyRollup()`\n - `collectByFixedWindow()` - to build a map of new Collections given a fixed window (like "5m"). The result is a map from the window name (e.g. "5m-12345") to a Collection. This is essentially tiling the TimeSeries.\n\nAdditional new methods:\n - `crop()` - you could always use slice() but this is simpler. Just give it a TimeRange and you get back a new TimeSeries.\n - `atTime()`, `atFirst()`, `atLast()` and  `* events()` generator - Convenience methods so you don\'t have to go through the TimeSeries\' Collection.\n\n**Pipelines:**\n\nImplements #22 - when processing a synchronous source we can just accumulate the result (either EventList or CollectionMap) on the Pipeline and return that result directly. This enables methods to be built on TimeSeries, for example, that can simply return a new TimeSeries and not dump the user into a callback or force them to guess if they can assume the function will be called synchronously. See #22 for a more detailed discussion about this. Note: This is pretty experimental and there\'s no facility to cope with an async source at the moment. In that case there just won\'t be a return value and no warning or error will be given. We don\'t currently use such a source, but others might. Regardless, this API extension is not appropriate in that case.\n\nAdds two new methods to a Pipeline() to expose this to the Pipeline user:\n - `toCollectionMap()` - maps a mapping of the key of the collection to the Collection itself. The key comes from a combination of the groupBy() and windowBy() directives on the Pipeline. The key is determined like this:\n    - If there isn\'t a window or group key, the collection will output to "all" -> collection.\n    - If one type of grouping, that grouping will be used. window name or group by.\n    - If both, they will be concatenated together with a "--".\n - `toEventList()` - puts every event output into a list.\n\nWindowing changes:\n - `clearWindow()` - remove the window, i.e. reset to a global window\n - `clearGroupBy()` - remove the groupby setting\n - "daily", "monthly" and "yearly" window types are now supported\n - If building with a non-fixed or non-global window, we build IndexedEvents with local time. We could possibly allow the user to determine this but this is probably the best default behavior. (note, there\'s no tests for this. This is rather hard to test with JS)\n\nOther bug fixes:\n - Fixes a bug where a Converter would not work correctly in batch mode because it wasn\'t being cloned correctly.\n\n**Collection:**\n\nConstruction:\n - Require the type to be passed in when constructing with an Immutable.List (Fixes #16). This is generally only used internally.\n\nNew methods:\n - `isChronological()` - return if a Collection\'s events are chronological.\n - `sortByTime()` - Reorder Collection events to be chronological.\n\n**Index:**\n\nStatic functions to build an Index strings for daily, monthly and yearly rollups:\n - `getDailyIndexString()`\n - `getMonthlyIndexString()`\n - `getYearlyIndexString()`\n\n**IndexedEvents:**\n - Fixes a bug where the UTC flag was not being correctly set on IndexedEvents.\n\n**Collector:**\n - Ability to collect based on daily, monthly or yearly buckets.\n\n---\n\n## v0.5\n\nLarge update causing many API changes, especially within what was previously the Processor pipeline (now Pipeline). The core structures such as Events and TimeSeries remain largely the same, at least from an API perspective, with mostly feature additions and bug fixes. We are still evolving the pipeline code but feel this is a significant step forward and one which we can build on going forward.\n\n### v0.5.0\n\n * Pipeline is a complete rewrite of the Processing code. It now unifies operations on sets of Events into a Collection class that also backs the TimeSeries itself. This enables the pipelines to operate on either streams of Events or on TimeSeries or Collections.\n * Pipelines therefore support a limited notion of either streaming or batch processing.\n * Pipelines support fixed window aggregations as well as general grouping by key or function\n * Pipeline operators:\n   - select() for choosing specific event fields\n   - collapse() for collapsing specific event fields using a reducer\n   - map() for doing element-wise transformations of events\n   - filter() for conditionally removing events based on a filter function\n   - take() for accepting only the first n events through the pipeline, for a given window and key\n   - count() for counting up events that fall within a given window and key\n   - aggregate() for building new aggregated events from collections based on the given window and key\n   - converters for converting between event types\n  * Pipeline simple triggers for each event, each collection discard and on flush using emitOn()\n  * Pipeline output support using to() for emitting Collections and Events\n  * Pipeline input support using from() for Collections, TimeSeries, or UnboundedIns.\n * Event access using get() allows use of fieldSpecs, which can be fieldNames or dot delimited paths to deeper data\n * Events no longer have a key. Groupby keys ares managed by the pipeline itself now\n * TimeRange: fixes lastYear() static function\n * TimeSeries: fixes duplicate size() definition\n * TimeSeries and Collection: first() and last() are aggregation functions now, while atFirst() and atLast() returns the first/last event in the series/collection\n * Project\n    - Updated to Babel 6\n    - Added code coverage\n    - Auto-build of docs for website\n\n---\n\n## v0.4\n\n### v0.4.2\n\n * Fixed creation of a `TimeSeries` from `TimeRangeEvents`.\n * Fixed `timerange()` calculation of a `TimeSeries` made of `TimeRangeEvents`.\n\n### v0.4.1\n\n * Fixed TimeSeries import\n\n### v0.4.0\n\n * Support for processing chains. e.g.\n \n```\n    const processor = Processor()\n        .groupBy("channelName")\n        .aggregate("5m", avg)\n        .collect("1d", false, timeseries => {\n            // --> Output timeseries representing 1 day of 5 min averages\n        });\n```\n\n * `Aggregators` and `collector` now support emitting events "always", and not just when the "next" bucket is created\n * Processing function API has been cleaned up. To flush events, use `flush()` (`done()` and `sync()` are gone)\n * Event internals are now an Immutable.map rather than using member variables that could be modified\n * Events support keys to enable the ability to do groupBy operations. You can add a key to an `Event` with `setKey()`, and you\'ll get a new `Event` back which is the same as the old one, but with a key. You can query the key with, unsurprisingly, `key()`.\n * `Groupers` are a new `Event` processor which takes an incoming event stream and emits the same event but with a key on it. This enables downstream processing, such as aggregation, to group based on the key.\n\n---\n\n## v0.3\n\n### v0.3.0\n\n * Better support for nested objects:\n    * Converts deeper structures to Immutable objects internally\n    * Added "value functions" to operations that deal with columns of values so that you can pull out internals of nested structures.\n    * Event\'s get() function will convert deep Immutable structures to JS objects.\n * You can now use either value() or get() to get a value out of an Event.\n * Added ability to convert to time based Events when inserting IndexedEvents into a collection. This can be much faster to query.\n * Began work on ability to do things like sum a series or isolate columns of a series.\n * Website update as well as uniform linting\n\n---\n\n## v0.2\n\n### v0.2.1\n\n * Fixed an issue with merge.\n\n### v0.2.0\n\n * You can either merge two series with different columns together, or same columns and different times.\n\n```\nconst trafficSeries = TimeSeries.merge("traffic", [inTraffic, outTraffic]);\n```\n';
},function(e,n){e.exports='<a name="Collection"></a>\n\n## Collection\nA collection is an abstraction for a bag of Events.\n\nYou typically construct a Collection from a list of Events, which\nmay be either within an Immutable.List or an Array. You can also\ncopy another Collection or create an empty one.\n\nYou can mutate a collection in a number of ways. In each instance\na new Collection will be returned.\n\nBasic operations on the list of events are also possible. You\ncan iterate over the collection with a for..of loop, get the size()\nof the collection and access a specific element with at().\n\nYou can also perform aggregations of the events, map them, filter them\nclean them, etc.\n\nCollections form the backing structure for a TimeSeries, as well as\nin Pipeline event processing. They are an instance of a BoundedIn, so\nthey can be used as a pipeline source.\n\n**Kind**: global class  \n\n* [Collection](#Collection)\n    * [new Collection(arg1, [arg2])](#new_Collection_new)\n    * _instance_\n        * [.toJSON()](#Collection+toJSON) ⇒ <code>Object</code>\n        * [.toString()](#Collection+toString) ⇒ <code>string</code>\n        * [.type()](#Collection+type) ⇒ <code>[Event](#Event)</code>\n        * [.size()](#Collection+size) ⇒ <code>number</code>\n        * [.sizeValid()](#Collection+sizeValid) ⇒ <code>number</code>\n        * [.at(pos)](#Collection+at) ⇒ <code>[Event](#Event)</code>\n        * [.atKey(key)](#Collection+atKey) ⇒ <code>Array</code>\n        * [.atFirst()](#Collection+atFirst) ⇒ <code>[Event](#Event)</code>\n        * [.atLast()](#Collection+atLast) ⇒ <code>[Event](#Event)</code>\n        * [.events()](#Collection+events)\n        * [.eventList()](#Collection+eventList) ⇒ <code>Immutable.List</code>\n        * [.eventListAsArray()](#Collection+eventListAsArray) ⇒ <code>Array</code>\n        * [.eventListAsMap()](#Collection+eventListAsMap) ⇒ <code>map</code>\n        * [.dedup()](#Collection+dedup) ⇒ <code>[Collection](#Collection)</code>\n        * [.sortByTime()](#Collection+sortByTime) ⇒ <code>[Collection](#Collection)</code>\n        * [.sort()](#Collection+sort) ⇒ <code>[Collection](#Collection)</code>\n        * [.range()](#Collection+range) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.addEvent(event)](#Collection+addEvent) ⇒ <code>[Collection](#Collection)</code>\n        * [.slice(begin, end)](#Collection+slice) ⇒ <code>[Collection](#Collection)</code>\n        * [.filter(func)](#Collection+filter) ⇒ <code>[Collection](#Collection)</code>\n        * [.map(func)](#Collection+map) ⇒ <code>[Collection](#Collection)</code>\n        * [.clean(fieldPath)](#Collection+clean) ⇒ <code>[Collection](#Collection)</code>\n        * [.count()](#Collection+count) ⇒ <code>number</code>\n        * [.first(fieldPath, filter)](#Collection+first) ⇒ <code>number</code>\n        * [.last(fieldPath, filter)](#Collection+last) ⇒ <code>number</code>\n        * [.sum(fieldPath, filter)](#Collection+sum) ⇒ <code>number</code>\n        * [.avg(fieldPath, filter)](#Collection+avg) ⇒ <code>number</code>\n        * [.max(fieldPath, filter)](#Collection+max) ⇒ <code>number</code>\n        * [.min(fieldPath, filter)](#Collection+min) ⇒ <code>number</code>\n        * [.mean(fieldPath, filter)](#Collection+mean) ⇒ <code>number</code>\n        * [.median(fieldPath, filter)](#Collection+median) ⇒ <code>number</code>\n        * [.stdev(fieldPath, filter)](#Collection+stdev) ⇒ <code>number</code>\n        * [.percentile(q, fieldPath, interp, filter)](#Collection+percentile) ⇒ <code>number</code>\n        * [.aggregate(func, fieldPath)](#Collection+aggregate) ⇒ <code>number</code>\n        * [.quantile(n, column, interp)](#Collection+quantile) ⇒ <code>array</code>\n        * [.isChronological()](#Collection+isChronological) ⇒ <code>Boolean</code>\n    * _static_\n        * [.equal(collection1, collection2)](#Collection.equal) ⇒ <code>bool</code>\n        * [.is(collection1, collection2)](#Collection.is) ⇒ <code>bool</code>\n\n<a name="new_Collection_new"></a>\n\n### new Collection(arg1, [arg2])\nConstruct a new Collection.\n\n**Params**\n\n- arg1 <code>[Collection](#Collection)</code> | <code>array</code> | <code>Immutable.List</code> - Initial data for\nthe collection. If arg1 is another Collection, this will act as\na copy constructor.\n- [arg2] <code>Boolean</code> - When using a the copy constructor\nthis specified whether or not to also copy all the events in this\ncollection. Generally you\'ll want to let it copy the events.\nIf arg1 is an Immutable.List, then arg2 will specify the type of\nthe Events accepted into the Collection. This form is generally\nused internally.\n\n<a name="Collection+toJSON"></a>\n\n### collection.toJSON() ⇒ <code>Object</code>\nReturns the Collection as a regular JSON object.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>Object</code> - The JSON representation of this Collection  \n<a name="Collection+toString"></a>\n\n### collection.toString() ⇒ <code>string</code>\nSerialize out the Collection as a string. This will be the\nstring representation of `toJSON()`.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>string</code> - The Collection serialized as a string.  \n<a name="Collection+type"></a>\n\n### collection.type() ⇒ <code>[Event](#Event)</code>\nReturns the Event object type in this Collection.\n\nSince Collections may only have one type of event (`Event`, `IndexedEvent`\nor `TimeRangeEvent`) this will return that type. If no events\nhave been added to the Collection it will return `undefined`.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>[Event](#Event)</code> - - The class of the type of events contained in\n                  this Collection.  \n<a name="Collection+size"></a>\n\n### collection.size() ⇒ <code>number</code>\nReturns the number of events in this collection\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - Count of events  \n<a name="Collection+sizeValid"></a>\n\n### collection.sizeValid() ⇒ <code>number</code>\nReturns the number of valid items in this collection.\n\nUses the fieldPath to look up values in all events.\nIt then counts the number that are considered valid, which\nspecifically are not NaN, undefined or null.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - Count of valid events  \n<a name="Collection+at"></a>\n\n### collection.at(pos) ⇒ <code>[Event](#Event)</code>\nReturns an event in the Collection by its position.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>[Event](#Event)</code> - Returns the event at the pos specified.  \n**Params**\n\n- pos <code>number</code> - The position of the event\n\n**Example**  \n```\nfor (let row=0; row < series.size(); row++) {\n  const event = series.at(row);\n  console.log(event.toString());\n}\n```\n<a name="Collection+atKey"></a>\n\n### collection.atKey(key) ⇒ <code>Array</code>\nReturns a list of events in the Collection which have\nthe exact key (time, timerange or index) as the key specified\nby \'at\'. Note that this is an O(n) search for the time specified,\nsince collections are an unordered bag of events.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>Array</code> - All events at that key  \n**Params**\n\n- key <code>Date</code> | <code>string</code> | <code>[TimeRange](#TimeRange)</code> - The key of the event.\n\n<a name="Collection+atFirst"></a>\n\n### collection.atFirst() ⇒ <code>[Event](#Event)</code>\nReturns the first event in the Collection.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n<a name="Collection+atLast"></a>\n\n### collection.atLast() ⇒ <code>[Event](#Event)</code>\nReturns the last event in the Collection.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n<a name="Collection+events"></a>\n\n### collection.events()\nGenerator to return all the events in the Collection.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Example**  \n```\nfor (let event of collection.events()) {\n    console.log(event.toString());\n}\n```\n<a name="Collection+eventList"></a>\n\n### collection.eventList() ⇒ <code>Immutable.List</code>\nReturns the raw Immutable event list\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>Immutable.List</code> - All events as an Immutable List.  \n<a name="Collection+eventListAsArray"></a>\n\n### collection.eventListAsArray() ⇒ <code>Array</code>\nReturns a Javascript array representation of the event list\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>Array</code> - All events as a Javascript Array.  \n<a name="Collection+eventListAsMap"></a>\n\n### collection.eventListAsMap() ⇒ <code>map</code>\nReturns the events in the collection as a Javascript Map, where\nthe key is the timestamp, index or timerange and the\nvalue is an array of events with that key.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>map</code> - The map of events  \n<a name="Collection+dedup"></a>\n\n### collection.dedup() ⇒ <code>[Collection](#Collection)</code>\nRemoves duplicates from the Collection. If duplicates\nexist in the collection with the same key but with different\nvalues, then later event values will be used.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>[Collection](#Collection)</code> - The sorted Collection.  \n<a name="Collection+sortByTime"></a>\n\n### collection.sortByTime() ⇒ <code>[Collection](#Collection)</code>\nSorts the Collection by the timestamp. In the case\nof TimeRangeEvents and IndexedEvents, it will be sorted\nby the begin time. This is useful when the collection\nwill be passed into a TimeSeries.\n\nSee also isChronological().\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>[Collection](#Collection)</code> - The sorted Collection  \n<a name="Collection+sort"></a>\n\n### collection.sort() ⇒ <code>[Collection](#Collection)</code>\nSorts the Collection using the value referenced by\nthe fieldPath.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>[Collection](#Collection)</code> - The extents of the Collection  \n<a name="Collection+range"></a>\n\n### collection.range() ⇒ <code>[TimeRange](#TimeRange)</code>\nFrom the range of times, or Indexes within the TimeSeries, return\nthe extents of the TimeSeries as a TimeRange. This is currently implemented\nby walking the events.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - The extents of the TimeSeries  \n<a name="Collection+addEvent"></a>\n\n### collection.addEvent(event) ⇒ <code>[Collection](#Collection)</code>\nAdds an event to the collection, returns a new Collection. The event added\ncan be an Event, TimeRangeEvent or IndexedEvent, but it must be of the\nsame type as other events within the Collection.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>[Collection](#Collection)</code> - A new, modified, Collection containing the new event.  \n**Params**\n\n- event <code>[Event](#Event)</code> - The event being added.\n\n<a name="Collection+slice"></a>\n\n### collection.slice(begin, end) ⇒ <code>[Collection](#Collection)</code>\nPerform a slice of events within the Collection, returns a new\nCollection representing a portion of this TimeSeries from begin up to\nbut not including end.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>[Collection](#Collection)</code> - The new, sliced, Collection.  \n**Params**\n\n- begin <code>Number</code> - The position to begin slicing\n- end <code>Number</code> - The position to end slicing\n\n<a name="Collection+filter"></a>\n\n### collection.filter(func) ⇒ <code>[Collection](#Collection)</code>\nFilter the collection\'s event list with the supplied function\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>[Collection](#Collection)</code> - A new, filtered, Collection.  \n**Params**\n\n- func <code>function</code> - The filter function, that should return\n                       true or false when passed in an event.\n\n<a name="Collection+map"></a>\n\n### collection.map(func) ⇒ <code>[Collection](#Collection)</code>\nMap the collection\'s event list to a new event list with\nthe supplied function.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>[Collection](#Collection)</code> - A new, modified, Collection.  \n**Params**\n\n- func <code>function</code> - The mapping function, that should return\na new event when passed in the old event.\n\n<a name="Collection+clean"></a>\n\n### collection.clean(fieldPath) ⇒ <code>[Collection](#Collection)</code>\nReturns a new Collection by testing the fieldPath\nvalues for being valid (not NaN, null or undefined).\n\nThe resulting Collection will be clean (for that fieldPath).\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>[Collection](#Collection)</code> - A new, modified, Collection.  \n**Params**\n\n- fieldPath <code>string</code> - Name of value to look up. If not supplied,\n                                 defaults to [\'value\']. "Deep" syntax is\n                                 [\'deep\', \'value\'] or \'deep.value\'\n\n<a name="Collection+count"></a>\n\n### collection.count() ⇒ <code>number</code>\nReturns the number of events in this collection\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - The number of events  \n<a name="Collection+first"></a>\n\n### collection.first(fieldPath, filter) ⇒ <code>number</code>\nReturns the first value in the Collection for the fieldspec\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - The first value  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the first value of. A deep value can be referenced with a\n                           string.like.this.  If not supplied the `value` column will be\n                           aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="Collection+last"></a>\n\n### collection.last(fieldPath, filter) ⇒ <code>number</code>\nReturns the last value in the Collection for the fieldspec\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - The last value  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the last value of. A deep value can be referenced with a\n                           string.like.this.  If not supplied the `value` column will be\n                           aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="Collection+sum"></a>\n\n### collection.sum(fieldPath, filter) ⇒ <code>number</code>\nReturns the sum of the Collection for the fieldspec\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - The sum  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the sum of. A deep value can be referenced with a\n                           string.like.this.  If not supplied the `value` column will be\n                           aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="Collection+avg"></a>\n\n### collection.avg(fieldPath, filter) ⇒ <code>number</code>\nAggregates the events down to their average(s)\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - The average  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the avg of. A deep value can be referenced with a\n                           string.like.this.  If not supplied the `value` column will be\n                           aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="Collection+max"></a>\n\n### collection.max(fieldPath, filter) ⇒ <code>number</code>\nAggregates the events down to their maximum value\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - The max value for the field  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the max of. A deep value can be referenced with a\n                           string.like.this.  If not supplied the `value` column will be\n                           aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="Collection+min"></a>\n\n### collection.min(fieldPath, filter) ⇒ <code>number</code>\nAggregates the events down to their minimum value\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - The min value for the field  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the min of. A deep value can be referenced with a\n                           string.like.this.  If not supplied the `value` column will be\n                           aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="Collection+mean"></a>\n\n### collection.mean(fieldPath, filter) ⇒ <code>number</code>\nAggregates the events down to their mean (same as avg)\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - The mean  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the mean of. A deep value can be referenced with a\n                           string.like.this.  If not supplied the `value` column will be\n                           aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="Collection+median"></a>\n\n### collection.median(fieldPath, filter) ⇒ <code>number</code>\nAggregates the events down to their minimum value\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - The median value  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the median of. A deep value can be referenced with a\n                           string.like.this.  If not supplied the `value` column will be\n                           aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="Collection+stdev"></a>\n\n### collection.stdev(fieldPath, filter) ⇒ <code>number</code>\nAggregates the events down to their stdev\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - The resulting stdev value  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the stdev of. A deep value can be referenced with a\n                           string.like.this.  If not supplied the `value` column will be\n                           aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="Collection+percentile"></a>\n\n### collection.percentile(q, fieldPath, interp, filter) ⇒ <code>number</code>\nGets percentile q within the Collection. This works the same way as numpy.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - The percentile  \n**Params**\n\n- q <code>integer</code> - The percentile (should be between 0 and 100)\n- fieldPath <code>string</code> - Column to find the percentile of. A deep value can be referenced with a\n                           string.like.this.  If not supplied the `value` column will be\n                           aggregated.\n- interp <code>string</code> <code> = &quot;linear&quot;</code> - Specifies the interpolation method\n                           to use when the desired quantile lies between\n                           two data points. Options are:\n                           options are:\n                            * linear: i + (j - i) * fraction, where fraction is the fractional part of the index surrounded by i and j.\n                            * lower: i.\n                            * higher: j.\n                            * nearest: i or j whichever is nearest.\n                            * midpoint: (i + j) / 2.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="Collection+aggregate"></a>\n\n### collection.aggregate(func, fieldPath) ⇒ <code>number</code>\nAggregates the events down using a user defined function to\ndo the reduction.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>number</code> - The resulting value  \n**Params**\n\n- func <code>function</code> - User defined reduction function. Will be\n                           passed a list of values. Should return a\n                           singe value.\n- fieldPath <code>String</code> - The field to aggregate over\n\n<a name="Collection+quantile"></a>\n\n### collection.quantile(n, column, interp) ⇒ <code>array</code>\nGets n quantiles within the Collection. This works the same way as numpy.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>array</code> - An array of n quantiles  \n**Params**\n\n- n <code>integer</code> - The number of quantiles to divide the\n                           Collection into.\n- column <code>string</code> <code> = &quot;value&quot;</code> - The field to return as the quantile\n- interp <code>string</code> <code> = &quot;linear&quot;</code> - Specifies the interpolation method\n                           to use when the desired quantile lies between\n                           two data points. Options are:\n                           options are:\n                            * linear: i + (j - i) * fraction, where fraction is the fractional part of the index surrounded by i and j.\n                            * lower: i.\n                            * higher: j.\n                            * nearest: i or j whichever is nearest.\n                            * midpoint: (i + j) / 2.\n\n<a name="Collection+isChronological"></a>\n\n### collection.isChronological() ⇒ <code>Boolean</code>\nReturns true if all events in this Collection are in chronological order.\n\n**Kind**: instance method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>Boolean</code> - True if all events are in order, oldest events to newest.  \n<a name="Collection.equal"></a>\n\n### Collection.equal(collection1, collection2) ⇒ <code>bool</code>\nStatic function to compare two collections to each other. If the collections\nare of the same instance as each other then equals will return true.\n\n**Kind**: static method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>bool</code> - result  \n**Params**\n\n- collection1 <code>[Collection](#Collection)</code>\n- collection2 <code>[Collection](#Collection)</code>\n\n<a name="Collection.is"></a>\n\n### Collection.is(collection1, collection2) ⇒ <code>bool</code>\nStatic function to compare two collections to each other. If the collections\nare of the same value as each other then equals will return true.\n\n**Kind**: static method of <code>[Collection](#Collection)</code>  \n**Returns**: <code>bool</code> - result  \n**Params**\n\n- collection1 <code>[Collection](#Collection)</code>\n- collection2 <code>[Collection](#Collection)</code>\n\n'},function(e,n){e.exports='<a name="Event"></a>\n\n## Event\nThere are three types of Events in Pond, while this class provides the base class\nfor them all:\n\n1. *TimeEvent* - a generic event which associates a timestamp with some data\n2. *TimeRangeEvent* - associates a TimeRange with some data\n3. *IndexedEvent* - associates a time range specified as an Index\n\nEvent contains several static methods that may be useful, though in general\nare used by the Collection and TimeSeries classes. So, if you already have a\nTimeSeries or Collection you may want to examine the API there to see if you\ncan do what you want to do.\n\n**Kind**: global class  \n\n* [Event](#Event)\n    * _instance_\n        * [.toAvro()](#Event+toAvro)\n        * [.toString()](#Event+toString)\n        * [.type()](#Event+type)\n        * [.setData(data)](#Event+setData) ⇒ <code>object</code>\n        * [.data()](#Event+data) ⇒ <code>Immutable.Map</code>\n        * [.get()](#Event+get)\n        * [.value()](#Event+value)\n        * [.collapse()](#Event+collapse)\n    * _static_\n        * [.is(event1, event2)](#Event.is) ⇒ <code>Boolean</code>\n        * [.isDuplicate()](#Event.isDuplicate) ⇒ <code>Boolean</code>\n        * [.isValidValue(event, The)](#Event.isValidValue)\n        * [.selector()](#Event.selector)\n        * [.merge(events)](#Event.merge) ⇒ <code>Immutable.List</code> &#124; <code>array</code>\n        * [.combine(events, fieldSpec, reducer)](#Event.combine) ⇒ <code>Immutable.List</code> &#124; <code>array</code>\n        * [.combiner()](#Event.combiner)\n        * [.merger()](#Event.merger)\n        * [.map(fieldSpec)](#Event.map)\n        * [.reduce(mapped, reducer)](#Event.reduce)\n\n<a name="Event+toAvro"></a>\n\n### event.toAvro()\nExpress the event as an avro buffer\n\n**Kind**: instance method of <code>[Event](#Event)</code>  \n<a name="Event+toString"></a>\n\n### event.toString()\nExpress the event as a string\n\n**Kind**: instance method of <code>[Event](#Event)</code>  \n<a name="Event+type"></a>\n\n### event.type()\nReturns the type of this class instance\n\n**Kind**: instance method of <code>[Event](#Event)</code>  \n<a name="Event+setData"></a>\n\n### event.setData(data) ⇒ <code>object</code>\nSets the data of the event and returns a new event of the\nsame type.\n\n**Kind**: instance method of <code>[Event](#Event)</code>  \n**Returns**: <code>object</code> - A new event  \n**Params**\n\n- data <code>object</code> - New data for the event\n\n<a name="Event+data"></a>\n\n### event.data() ⇒ <code>Immutable.Map</code>\nAccess the event data in its native form. The result\nwill be an Immutable.Map.\n\n**Kind**: instance method of <code>[Event](#Event)</code>  \n**Returns**: <code>Immutable.Map</code> - Data for the Event  \n<a name="Event+get"></a>\n\n### event.get()\nGet specific data out of the event. The data will be converted\nto a JS Object. You can use a `fieldSpec` to address deep data.\nA `fieldSpec` could be "a.b"\n\n**Kind**: instance method of <code>[Event](#Event)</code>  \n<a name="Event+value"></a>\n\n### event.value()\nAlias for `get()`.\n\n**Kind**: instance method of <code>[Event](#Event)</code>  \n<a name="Event+collapse"></a>\n\n### event.collapse()\nCollapses this event\'s columns, represented by the fieldSpecList\ninto a single column. The collapsing itself is done with the reducer\nfunction. Optionally the collapsed column could be appended to the\nexisting columns, or replace them (the default).\n\n**Kind**: instance method of <code>[Event](#Event)</code>  \n<a name="Event.is"></a>\n\n### Event.is(event1, event2) ⇒ <code>Boolean</code>\nDo the two supplied events contain the same data,\neven if they are not the same instance.\n\n**Kind**: static method of <code>[Event](#Event)</code>  \n**Returns**: <code>Boolean</code> - Result  \n**Params**\n\n- event1 <code>[Event](#Event)</code> - First event to compare\n- event2 <code>[Event](#Event)</code> - Second event to compare\n\n<a name="Event.isDuplicate"></a>\n\n### Event.isDuplicate() ⇒ <code>Boolean</code>\nReturns if the two supplied events are duplicates\nof each other. By default, duplicated means that the\ntimestamps are the same. This is the case with incoming events\nwhere the second event is either known to be the same (but\nduplicate) of the first, or supersedes the first. You can\nalso pass in false for ignoreValues and get a full\ncompare.\n\n**Kind**: static method of <code>[Event](#Event)</code>  \n**Returns**: <code>Boolean</code> - The result of the compare  \n<a name="Event.isValidValue"></a>\n\n### Event.isValidValue(event, The)\nThe same as Event.value() only it will return false if the\nvalue is either undefined, NaN or Null.\n\n**Kind**: static method of <code>[Event](#Event)</code>  \n**Params**\n\n- event <code>[Event](#Event)</code> - The Event to check\n- The <code>string</code> | <code>array</code> - field to check\n\n<a name="Event.selector"></a>\n\n### Event.selector()\nFunction to select specific fields of an event using\na fieldPath and return a new event with just those fields.\n\nThe fieldPath currently can be:\n * A single field name\n * An array of field names\n\nThe function returns a new event.\n\n**Kind**: static method of <code>[Event](#Event)</code>  \n<a name="Event.merge"></a>\n\n### Event.merge(events) ⇒ <code>Immutable.List</code> &#124; <code>array</code>\nMerges multiple `events` together into a new array of events, one\nfor each time/index/timerange of the source events. Merging is done on\nthe data of each event. Values from later events in the list overwrite\nearly values if fields conflict.\n\nCommon use cases:\n  - append events of different timestamps\n  - merge in events with one field to events with another\n  - merge in events that supersede the previous events\n\nSee also: TimeSeries.timeSeriesListMerge()\n\n**Kind**: static method of <code>[Event](#Event)</code>  \n**Returns**: <code>Immutable.List</code> &#124; <code>array</code> - Array or Immutable.List of events  \n**Params**\n\n- events <code>Immutable.List</code> | <code>array</code> - Array or Immutable.List of events\n\n<a name="Event.combine"></a>\n\n### Event.combine(events, fieldSpec, reducer) ⇒ <code>Immutable.List</code> &#124; <code>array</code>\nCombines multiple `events` together into a new array of events, one\nfor each time/index/timerange of the source events. The list of\nevents may be specified as an array or `Immutable.List`. Combining acts\non the fields specified in the `fieldSpec` and uses the reducer\nfunction to take the multiple values and reducer them down to one.\n\nThe return result will be an of the same form as the input. If you\npass in an array of events, you will get an array of events back. If\nyou pass an `Immutable.List` of events then you will get an\n`Immutable.List` of events back.\n\nThis is the general version of `Event.sum()` and `Event.avg()`. If those\ncommon use cases are what you want, just use those functions. If you\nwant to specify your own reducer you can use this function.\n\nSee also: `TimeSeries.timeSeriesListSum()`\n\n**Kind**: static method of <code>[Event](#Event)</code>  \n**Returns**: <code>Immutable.List</code> &#124; <code>array</code> - An Immutable.List or array of events  \n**Params**\n\n- events <code>Immutable.List</code> | <code>array</code> - Array of event objects\n- fieldSpec <code>string</code> | <code>array</code> - Column or columns to look up. If you need\n                                         to retrieve multiple deep nested values that\n                                         [\'can.be\', \'done.with\', \'this.notation\'].\n                                         A single deep value with a string.like.this.\n                                         If not supplied, all columns will be operated on.\n- reducer <code>function</code> - Reducer function to apply to column data.\n\n<a name="Event.combiner"></a>\n\n### Event.combiner()\nReturns a function that will take a list of events and combine them\ntogether using the fieldSpec and reducer function provided. This is\nused as an event reducer for merging multiple TimeSeries together\nwith `timeSeriesListReduce()`.\n\n**Kind**: static method of <code>[Event](#Event)</code>  \n<a name="Event.merger"></a>\n\n### Event.merger()\nReturns a function that will take a list of events and merge them\ntogether using the fieldSpec provided. This is used as a reducer for\nmerging multiple TimeSeries together with `timeSeriesListMerge()`.\n\n**Kind**: static method of <code>[Event](#Event)</code>  \n<a name="Event.map"></a>\n\n### Event.map(fieldSpec)\nMaps a list of events according to the fieldSpec\npassed in. The spec maybe a single field name, a\nlist of field names, or a function that takes an\nevent and returns a key/value pair.\n\n**Kind**: static method of <code>[Event](#Event)</code>  \n**Params**\n\n- fieldSpec <code>string</code> | <code>array</code> - Column or columns to look up. If you need\n                                 to retrieve multiple deep nested values that\n                                 [\'can.be\', \'done.with\', \'this.notation\'].\n                                 A single deep value with a string.like.this.\n                                 If not supplied, all columns will be operated on.\n                                 If field_spec is a function, the function should\n                                 return a map. The keys will be come the\n                                 "column names" that will be used in the map that\n                                 is returned.\n\n**Example**  \n````\n        in   out\n 3am    1    2\n 4am    3    4\n\nMapper result:  { in: [1, 3], out: [2, 4]}\n```\n<a name="Event.reduce"></a>\n\n### Event.reduce(mapped, reducer)\nTakes a list of events and a reducer function and returns\na new Event with the result, for each column. The reducer is\nof the form:\n```\n    function sum(valueList) {\n        return calcValue;\n    }\n```\n\n**Kind**: static method of <code>[Event](#Event)</code>  \n**Params**\n\n- mapped <code>map</code> - A map, as produced from map()\n- reducer <code>function</code> - The reducer function\n\n';
},function(e,n){e.exports='<a name="Index"></a>\n\n## Index\nAn index is simply a string that represents a fixed range of time. There are two basic types:\n*Multiplier index* - the number of some unit of time (hours, days etc) since the UNIX epoch.\n*Calendar index* - The second represents a calendar range, such as Oct 2014.\n\nFor the first type, a multiplier index, an example might be:\n\n```text\n    1d-12355      //  30th Oct 2003 (GMT), the 12355th day since the UNIX epoch\n```\n\nYou can also use seconds (e.g. 30s), minutes (e.g. 5m), hours (e.g. 1h) or days (e.g. 7d).\n\nHere are several examples of a calendar index:\n\n```text\n    2003-10-30    // 30th Oct 2003\n    2014-09       // Sept 2014\n    2015          // All of the year 2015\n```\n\nAn Index is a nice representation of certain types of time intervals because it can be cached with its string representation as a key. A specific chunk of time, and associated data can be looked up based on that string. It also allows us to represent things like months, which have variable length.\n\nAn Index is also useful when collecting into specific time ranges, for example generating all the 5 min ("5m") maximum rollups within a specific day ("1d"). See the processing section within these docs.\n\n**Kind**: global class  \n\n* [Index](#Index)\n    * _instance_\n        * [.toJSON()](#Index+toJSON)\n        * [.toString()](#Index+toString)\n        * [.toNiceString()](#Index+toNiceString)\n        * [.asString()](#Index+asString)\n        * [.asTimerange()](#Index+asTimerange)\n        * [.begin()](#Index+begin)\n        * [.end()](#Index+end)\n    * _static_\n        * [.getIndexString()](#Index.getIndexString)\n        * [.getIndexStringList()](#Index.getIndexStringList)\n        * [.getDailyIndexString()](#Index.getDailyIndexString)\n        * [.getMonthlyIndexString()](#Index.getMonthlyIndexString)\n        * [.getYearlyIndexString()](#Index.getYearlyIndexString)\n\n<a name="Index+toJSON"></a>\n\n### index.toJSON()\nReturns the Index as JSON, which will just be its string\nrepresentation\n\n**Kind**: instance method of <code>[Index](#Index)</code>  \n<a name="Index+toString"></a>\n\n### index.toString()\nSimply returns the Index as its string\n\n**Kind**: instance method of <code>[Index](#Index)</code>  \n<a name="Index+toNiceString"></a>\n\n### index.toNiceString()\nfor the calendar range style Indexes, this lets you return\nthat calendar range as a human readable format, e.g. "June, 2014".\nThe format specified is a Moment.format.\n\n**Kind**: instance method of <code>[Index](#Index)</code>  \n<a name="Index+asString"></a>\n\n### index.asString()\nAlias for toString()\n\n**Kind**: instance method of <code>[Index](#Index)</code>  \n<a name="Index+asTimerange"></a>\n\n### index.asTimerange()\nReturns the Index as a TimeRange\n\n**Kind**: instance method of <code>[Index](#Index)</code>  \n<a name="Index+begin"></a>\n\n### index.begin()\nReturns the start date of the Index\n\n**Kind**: instance method of <code>[Index](#Index)</code>  \n<a name="Index+end"></a>\n\n### index.end()\nReturns the end date of the Index\n\n**Kind**: instance method of <code>[Index](#Index)</code>  \n<a name="Index.getIndexString"></a>\n\n### Index.getIndexString()\nReturn the index string given an index prefix and a datetime object.\n\n**Kind**: static method of <code>[Index](#Index)</code>  \n<a name="Index.getIndexStringList"></a>\n\n### Index.getIndexStringList()\nGiven the time range, return a list of strings of index values every <prefix> tick.\n\n**Kind**: static method of <code>[Index](#Index)</code>  \n<a name="Index.getDailyIndexString"></a>\n\n### Index.getDailyIndexString()\nGenerate an index string with day granularity.\n\n**Kind**: static method of <code>[Index](#Index)</code>  \n<a name="Index.getMonthlyIndexString"></a>\n\n### Index.getMonthlyIndexString()\nGenerate an index string with month granularity.\n\n**Kind**: static method of <code>[Index](#Index)</code>  \n<a name="Index.getYearlyIndexString"></a>\n\n### Index.getYearlyIndexString()\nGenerate an index string with month granularity.\n\n**Kind**: static method of <code>[Index](#Index)</code>  \n'},function(e,n){e.exports='<a name="IndexedEvent"></a>\n\n## IndexedEvent\nAn `IndexedEvent` uses an `Index` to specify a timerange over which the event\noccurs and maps that to a data object representing some measurement or metric\nduring that time range.\n\nYou can supply the index as a string or as an Index object.\n\nExample Indexes are:\n * 1d-1565 is the entire duration of the 1565th day since the UNIX epoch\n * 2014-03 is the entire duration of march in 2014\n\nThe range, as expressed by the `Index`, is provided by the convenience method\n`range()`, which returns a `TimeRange` instance. Alternatively the begin\nand end times represented by the Index can be found with `begin()`\nand `end()` respectively.\n\nThe data is also specified during construction, and is generally expected to\nbe an object or an Immutable Map. If an object is provided it will be stored\ninternally as an Immutable Map. If the data provided is some other type then\nit will be equivalent to supplying an object of `{value: data}`. Data may be\nundefined.\n\nThe get the data out of an IndexedEvent instance use `data()`. It will return\nan Immutable.Map.\n\n**Kind**: global class  \n\n* [IndexedEvent](#IndexedEvent)\n    * [new IndexedEvent()](#new_IndexedEvent_new)\n    * _instance_\n        * [.key()](#IndexedEvent+key)\n        * [.toJSON()](#IndexedEvent+toJSON)\n        * [.toPoint()](#IndexedEvent+toPoint)\n        * [.index()](#IndexedEvent+index) ⇒ <code>[Index](#Index)</code>\n        * [.indexAsString()](#IndexedEvent+indexAsString) ⇒ <code>string</code>\n        * [.timerangeAsUTCString()](#IndexedEvent+timerangeAsUTCString) ⇒ <code>string</code>\n        * [.timerangeAsLocalString()](#IndexedEvent+timerangeAsLocalString) ⇒ <code>string</code>\n        * [.timerange()](#IndexedEvent+timerange) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.begin()](#IndexedEvent+begin) ⇒ <code>Data</code>\n        * [.end()](#IndexedEvent+end) ⇒ <code>Data</code>\n        * [.timestamp()](#IndexedEvent+timestamp) ⇒ <code>Data</code>\n    * _static_\n        * [.keySchema()](#IndexedEvent.keySchema)\n\n<a name="new_IndexedEvent_new"></a>\n\n### new IndexedEvent()\nThe creation of an IndexedEvent is done by combining two parts:\nthe Index and the data.\n\nTo construct you specify an Index, along with the data.\n\nThe index may be an Index, or a string.\n\nTo specify the data you can supply either:\n    - a Javascript object containing key values pairs\n    - an Immutable.Map, or\n    - a simple type such as an integer. In the case of the simple type\n      this is a shorthand for supplying {"value": v}.\n\n<a name="IndexedEvent+key"></a>\n\n### indexedEvent.key()\nReturns the timestamp (as ms since the epoch)\n\n**Kind**: instance method of <code>[IndexedEvent](#IndexedEvent)</code>  \n<a name="IndexedEvent+toJSON"></a>\n\n### indexedEvent.toJSON()\nExpress the IndexedEvent as a JSON object\n\n**Kind**: instance method of <code>[IndexedEvent](#IndexedEvent)</code>  \n<a name="IndexedEvent+toPoint"></a>\n\n### indexedEvent.toPoint()\nReturns a flat array starting with the index, followed by the values.\n\n**Kind**: instance method of <code>[IndexedEvent](#IndexedEvent)</code>  \n<a name="IndexedEvent+index"></a>\n\n### indexedEvent.index() ⇒ <code>[Index](#Index)</code>\nReturns the Index associated with the data in this Event\n\n**Kind**: instance method of <code>[IndexedEvent](#IndexedEvent)</code>  \n**Returns**: <code>[Index](#Index)</code> - The Index  \n<a name="IndexedEvent+indexAsString"></a>\n\n### indexedEvent.indexAsString() ⇒ <code>string</code>\nReturns the Index as a string, same as event.index().toString()\n\n**Kind**: instance method of <code>[IndexedEvent](#IndexedEvent)</code>  \n**Returns**: <code>string</code> - The Index  \n<a name="IndexedEvent+timerangeAsUTCString"></a>\n\n### indexedEvent.timerangeAsUTCString() ⇒ <code>string</code>\nThe TimeRange of this data, in UTC, as a string.\n\n**Kind**: instance method of <code>[IndexedEvent](#IndexedEvent)</code>  \n**Returns**: <code>string</code> - TimeRange of this data.  \n<a name="IndexedEvent+timerangeAsLocalString"></a>\n\n### indexedEvent.timerangeAsLocalString() ⇒ <code>string</code>\nThe TimeRange of this data, in Local time, as a string.\n\n**Kind**: instance method of <code>[IndexedEvent](#IndexedEvent)</code>  \n**Returns**: <code>string</code> - TimeRange of this data.  \n<a name="IndexedEvent+timerange"></a>\n\n### indexedEvent.timerange() ⇒ <code>[TimeRange](#TimeRange)</code>\nThe TimeRange of this data\n\n**Kind**: instance method of <code>[IndexedEvent](#IndexedEvent)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - TimeRange of this data.  \n<a name="IndexedEvent+begin"></a>\n\n### indexedEvent.begin() ⇒ <code>Data</code>\nThe begin time of this Event\n\n**Kind**: instance method of <code>[IndexedEvent](#IndexedEvent)</code>  \n**Returns**: <code>Data</code> - Begin time  \n<a name="IndexedEvent+end"></a>\n\n### indexedEvent.end() ⇒ <code>Data</code>\nThe end time of this Event\n\n**Kind**: instance method of <code>[IndexedEvent](#IndexedEvent)</code>  \n**Returns**: <code>Data</code> - End time  \n<a name="IndexedEvent+timestamp"></a>\n\n### indexedEvent.timestamp() ⇒ <code>Data</code>\nAlias for the begin() time.\n\n**Kind**: instance method of <code>[IndexedEvent](#IndexedEvent)</code>  \n**Returns**: <code>Data</code> - Time representing this Event  \n<a name="IndexedEvent.keySchema"></a>\n\n### IndexedEvent.keySchema()\nFor Avro serialization, this defines the event\'s key (the Index)\nas a simple string\n\n**Kind**: static method of <code>[IndexedEvent](#IndexedEvent)</code>  \n'},function(e,n){e.exports='<a name="Pipeline"></a>\n\n## Pipeline\nA pipeline manages a processing chain, for either batch or stream processing\nof collection data.\n\n**Kind**: global class  \n\n* [Pipeline](#Pipeline)\n    * [new Pipeline([arg])](#new_Pipeline_new)\n    * [.windowBy(w)](#Pipeline+windowBy) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.clearWindow()](#Pipeline+clearWindow) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.groupBy(k)](#Pipeline+groupBy) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.clearGroupBy()](#Pipeline+clearGroupBy) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.emitOn(trigger)](#Pipeline+emitOn) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.from(src)](#Pipeline+from) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.toEventList()](#Pipeline+toEventList) ⇒ <code>array</code> &#124; <code>map</code>\n    * [.toKeyedCollections()](#Pipeline+toKeyedCollections) ⇒ <code>array</code> &#124; <code>map</code>\n    * [.to()](#Pipeline+to) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.count(observer, force)](#Pipeline+count) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.offsetBy(by, fieldSpec)](#Pipeline+offsetBy) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.aggregate(fields)](#Pipeline+aggregate) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.asTimeEvents(options)](#Pipeline+asTimeEvents) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.map(op)](#Pipeline+map) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.filter(op)](#Pipeline+filter) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.select(fieldSpec)](#Pipeline+select) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.collapse(fieldSpecList, name, reducer, append)](#Pipeline+collapse) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.fill()](#Pipeline+fill) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.take(limit)](#Pipeline+take) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.asTimeRangeEvents(options)](#Pipeline+asTimeRangeEvents) ⇒ <code>[Pipeline](#Pipeline)</code>\n    * [.asIndexedEvents(options)](#Pipeline+asIndexedEvents) ⇒ <code>[Pipeline](#Pipeline)</code>\n\n<a name="new_Pipeline_new"></a>\n\n### new Pipeline([arg])\nBuild a new Pipeline.\n\n**Params**\n\n- [arg] <code>[Pipeline](#Pipeline)</code> | <code>Immutable.Map</code> | <code>null</code> - May be either:\n * a Pipeline (copy contructor)\n * an Immutable.Map, in which case the internal state of the\n   Pipeline will be contructed from the Map\n * not specified\n\nUsually you would initialize a Pipeline using the factory\nfunction, rather than this object directly with `new`.\n\n**Example**  \n```\nimport { Pipeline } from "pondjs";\nconst p = Pipeline()...`\n```\n<a name="Pipeline+windowBy"></a>\n\n### pipeline.windowBy(w) ⇒ <code>[Pipeline](#Pipeline)</code>\nSet the window, returning a new Pipeline. A new window will\nhave a type and duration associated with it. Current available\ntypes are:\n  * fixed (e.g. every 5m)\n  * calendar based windows (e.g. every month)\n\nWindows are a type of grouping. Typically you\'d define a window\non the pipeline before doing an aggregation or some other operation\non the resulting grouped collection. You can combine window-based\ngrouping with key-grouping (see groupBy()).\n\nThere are several ways to define a window. The general format is\nan options object containing a `type` field and a `duration` field.\n\nCurrently the only accepted type is `fixed`, but others are planned.\nFor duration, this is a duration string, for example "30s" or "1d".\nSupported are: seconds (s), minutes (m), hours (h) and days (d).\n\nIf no arg is supplied, the window type is set to \'global\' and there\nis no duration.\n\nThere is also a short-cut notation for a fixed window or a calendar\nwindow. Simply supplying the duration string ("30s" for example) will\nresult in a `fixed` window type with the supplied duration.\n\nCalendar types are specified by simply specifying "daily", "monthly"\nor "yearly".\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- w <code>string</code> | <code>object</code> - Window or duration - See above\n\n<a name="Pipeline+clearWindow"></a>\n\n### pipeline.clearWindow() ⇒ <code>[Pipeline](#Pipeline)</code>\nRemove windowing from the Pipeline. This will\nreturn the pipeline to no window grouping. This is\nuseful if you have first done some aggregated by\nsome window size and then wish to collect together\nthe all resulting events.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n<a name="Pipeline+groupBy"></a>\n\n### pipeline.groupBy(k) ⇒ <code>[Pipeline](#Pipeline)</code>\nSets a new key grouping. Returns a new Pipeline.\n\nGrouping is a state set on the Pipeline. Operations downstream\nof the group specification will use that state. For example, an\naggregation would occur over any grouping specified. You can\ncombine a key grouping with windowing (see windowBy()).\n\nNote: the key, if it is a field path, is not a list of multiple\ncolumns, it is the path to a single column to pull group by keys\nfrom. For example, a column called \'status\' that contains the\nvalues \'OK\' and \'FAIL\' - then the key would be \'status\' and two\ncollections OK and FAIL will be generated.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- k <code>function</code> | <code>array</code> | <code>string</code> - The key to group by.\n                                     You can groupBy using a function\n                                     `(event) => return key`,\n                                     a field path (a field name, or dot\n                                     delimitted path to a field),\n                                     or a array of field paths.\n\n<a name="Pipeline+clearGroupBy"></a>\n\n### pipeline.clearGroupBy() ⇒ <code>[Pipeline](#Pipeline)</code>\nRemove the grouping from the pipeline. In other words\nrecombine the events.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n<a name="Pipeline+emitOn"></a>\n\n### pipeline.emitOn(trigger) ⇒ <code>[Pipeline](#Pipeline)</code>\nSets the condition under which an accumulated collection will\nbe emitted. If specified before an aggregation this will control\nwhen the resulting event will be emitted relative to the\nwindow accumulation. Current options are:\n * to emit on every event, or\n * just when the collection is complete, or\n * when a flush signal is received, either manually calling done(),\n   or at the end of a bounded source\n\nThe difference will depend on the output you want, how often\nyou want to get updated, and if you need to get a partial state.\nThere\'s currently no support for late data or watermarks. If an\nevent passes comes in after a collection window, that collection\nis considered finished.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- trigger <code>string</code> - A string indicating how to trigger a\nCollection should be emitted. May be:\n    * "eachEvent" - when a new event comes in, all currently\n                    maintained collections will emit their result\n    * "discard"   - when a collection is to be discarded,\n                    first it will emit. But only then.\n    * "flush"     - when a flush signal is received\n\n<a name="Pipeline+from"></a>\n\n### pipeline.from(src) ⇒ <code>[Pipeline](#Pipeline)</code>\nThe source to get events from. The source needs to be able to\niterate its events using `for..of` loop for bounded Ins, or\nbe able to emit() for unbounded Ins. The actual batch, or stream\nconnection occurs when an output is defined with `to()`.\n\nPipelines can be chained together since a source may be another\nPipeline.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- src <code>Bounded</code> | <code>Stream</code> - The source for the Pipeline\n\n<a name="Pipeline+toEventList"></a>\n\n### pipeline.toEventList() ⇒ <code>array</code> &#124; <code>map</code>\nDirectly return the results from the processor rather than\nfeeding to a callback. This breaks the chain, causing a result to\nbe returned (the array of events) rather than a reference to the\nPipeline itself. This function is only available for sync batch\nprocessing.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>array</code> &#124; <code>map</code> - Returns the _results attribute from a Pipeline\n                        object after processing. Will contain Collection\n                        objects.  \n<a name="Pipeline+toKeyedCollections"></a>\n\n### pipeline.toKeyedCollections() ⇒ <code>array</code> &#124; <code>map</code>\nDirectly return the results from the processor rather than\npassing a callback in. This breaks the chain, causing a result to\nbe returned (the collections) rather than a reference to the\nPipeline itself. This function is only available for sync batch\nprocessing.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>array</code> &#124; <code>map</code> - Returns the _results attribute from a Pipeline\n                        object after processing. Will contain Collection\n                        objects.  \n<a name="Pipeline+to"></a>\n\n### pipeline.to() ⇒ <code>[Pipeline](#Pipeline)</code>\nSets up the destination sink for the pipeline.\n\nFor a batch mode connection, i.e. one with a Bounded source,\nthe output is connected to a clone of the parts of the Pipeline dependencies\nthat lead to this output. This is done by a Runner. The source input is\nthen iterated over to process all events into the pipeline and though to the Out.\n\nFor stream mode connections, the output is connected and from then on\nany events added to the input will be processed down the pipeline to\nthe out.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Example**  \n```\nconst p = Pipeline()\n ...\n .to(EventOut, {}, event => {\n     result[`${event.index()}`] = event;\n });\n```\n<a name="Pipeline+count"></a>\n\n### pipeline.count(observer, force) ⇒ <code>[Pipeline](#Pipeline)</code>\nOutputs the count of events\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- observer <code>function</code> - The callback function. This will be\n                             passed the count, the windowKey and\n                             the groupByKey\n- force <code>Boolean</code> <code> = true</code> - Flush at the end of processing batch\n                           events, output again with possibly partial\n                           result.\n\n<a name="Pipeline+offsetBy"></a>\n\n### pipeline.offsetBy(by, fieldSpec) ⇒ <code>[Pipeline](#Pipeline)</code>\nProcessor to offset a set of fields by a value. Mostly used for\ntesting processor and pipeline operations with a simple operation.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The modified Pipeline  \n**Params**\n\n- by <code>number</code> - The amount to offset by\n- fieldSpec <code>string</code> | <code>array</code> - The field(s)\n\n<a name="Pipeline+aggregate"></a>\n\n### pipeline.aggregate(fields) ⇒ <code>[Pipeline](#Pipeline)</code>\nUses the current Pipeline windowing and grouping\nstate to build collections of events and aggregate them.\n\n`IndexedEvent`s will be emitted out of the aggregator based\non the `emitOn` state of the Pipeline.\n\nTo specify what part of the incoming events should\nbe aggregated together you specify a `fields`\nobject. This is a map from fieldName to operator.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- fields <code>object</code> - Fields and operators to be aggregated\n\n**Example**  \n```\nimport { Pipeline, EventOut, functions } from "pondjs";\nconst { avg } = functions;\n\nconst p = Pipeline()\n  .from(input)\n  .windowBy("1h")           // 1 day fixed windows\n  .emitOn("eachEvent")      // emit result on each event\n  .aggregate({\n     in_avg: {in: avg},\n     out_avg: {in: avg}\n  })\n  .asTimeEvents()\n  .to(EventOut, {}, event => {\n     result[`${event.index()}`] = event; // Result\n  });\n```\n<a name="Pipeline+asTimeEvents"></a>\n\n### pipeline.asTimeEvents(options) ⇒ <code>[Pipeline](#Pipeline)</code>\nConverts incoming TimeRangeEvents or IndexedEvents to\nTimeEvents. This is helpful since some processors,\nespecially aggregators, will emit TimeRangeEvents or\nIndexedEvents, which may be unsuitable for some applications.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- options <code>object</code> - To convert to an TimeEvent you need\nto convert a time range to a single time. There are three options:\n 1. use the beginning time (options = {alignment: "lag"})\n 2. use the center time (options = {alignment: "center"})\n 3. use the end time (options = {alignment: "lead"})\n\n<a name="Pipeline+map"></a>\n\n### pipeline.map(op) ⇒ <code>[Pipeline](#Pipeline)</code>\nMap the event stream using an operator\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- op <code>function</code> - A function that returns a new Event\n\n<a name="Pipeline+filter"></a>\n\n### pipeline.filter(op) ⇒ <code>[Pipeline](#Pipeline)</code>\nFilter the event stream using an operator\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- op <code>function</code> - A function that returns true or false\n\n<a name="Pipeline+select"></a>\n\n### pipeline.select(fieldSpec) ⇒ <code>[Pipeline](#Pipeline)</code>\nSelect a subset of columns\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- fieldSpec <code>string</code> | <code>array</code> - Column or columns to look up. If you need\n                                 to retrieve multiple deep nested values that\n                                 [\'can.be\', \'done.with\', \'this.notation\'].\n                                 A single deep value with a string.like.this.\n                                 If not supplied, the \'value\' column will be used.\n\n<a name="Pipeline+collapse"></a>\n\n### pipeline.collapse(fieldSpecList, name, reducer, append) ⇒ <code>[Pipeline](#Pipeline)</code>\nCollapse a subset of columns using a reducer function\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- fieldSpecList <code>string</code> | <code>array</code> - Column or columns to collapse. If you need\n                                     to retrieve multiple deep nested values that\n                                     [\'can.be\', \'done.with\', \'this.notation\'].\n- name <code>string</code> - The resulting output column\'s name\n- reducer <code>function</code> - Function to use to do the reduction\n- append <code>boolean</code> - Add the new column to the existing ones,\n                                 or replace them.\n\n**Example**  \n```\n const timeseries = new TimeSeries(inOutData);\n Pipeline()\n     .from(timeseries)\n     .collapse(["in", "out"], "in_out_sum", sum)\n     .emitOn("flush")\n     .to(CollectionOut, c => {\n          const ts = new TimeSeries({name: "subset", collection: c});\n          ...\n     }, true);\n```\n<a name="Pipeline+fill"></a>\n\n### pipeline.fill() ⇒ <code>[Pipeline](#Pipeline)</code>\nTake the data in this event steam and "fill" any missing\nor invalid values. This could be setting `null` values to `0`\nso mathematical operations will succeed, interpolate a new\nvalue, or pad with the previously given value.\n\nIf one wishes to limit the number of filled events in the result\nset, use Pipeline.keep() in the chain. See: TimeSeries.fill()\nfor an example.\n\nFill takes a single arg `options` which should be composed of:\n * fieldSpec - Column or columns to look up. If you need\n               to retrieve multiple deep nested values that\n               [\'can.be\', \'done.with\', \'this.notation\'].\n               A single deep value with a string.like.this.\n * method -    Filling method: zero | linear | pad\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n<a name="Pipeline+take"></a>\n\n### pipeline.take(limit) ⇒ <code>[Pipeline](#Pipeline)</code>\nTake events up to the supplied limit, per key.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- limit <code>number</code> - Integer number of events to take\n\n<a name="Pipeline+asTimeRangeEvents"></a>\n\n### pipeline.asTimeRangeEvents(options) ⇒ <code>[Pipeline](#Pipeline)</code>\nConverts incoming Events or IndexedEvents to TimeRangeEvents.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- options <code>object</code> - To convert from an Event you need\nto convert a single time to a time range. To control this you\nneed to specify the duration of that time range, along with\nthe positioning (alignment) of the time range with respect to\nthe time stamp of the Event.\n\nThere are three option for alignment:\n 1. time range will be in front of the timestamp (options = {alignment: "front"})\n 2. time range will be centered on the timestamp (options = {alignment: "center"})\n 3. time range will be positoned behind the timestamp (options = {alignment: "behind"})\n\nThe duration is of the form "1h" for one hour, "30s" for 30 seconds and so on.\n\n<a name="Pipeline+asIndexedEvents"></a>\n\n### pipeline.asIndexedEvents(options) ⇒ <code>[Pipeline](#Pipeline)</code>\nConverts incoming Events to IndexedEvents.\n\nNote: It isn\'t possible to convert TimeRangeEvents to IndexedEvents.\n\n**Kind**: instance method of <code>[Pipeline](#Pipeline)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline  \n**Params**\n\n- options <code>Object</code> - An object containing the conversion\noptions. In this case the duration string of the Index is expected.\n    - .duration <code>string</code> - The duration string is of the form "1h" for one hour, "30s"\nfor 30 seconds and so on.\n\n'},function(e,n){e.exports='<a name="TimeEvent"></a>\n\n## TimeEvent\nThe creation of an TimeEvent is done by combining two parts:\n * the timestamp\n * the data\n\nTo specify the data you can supply:\n * a Javascript object of key/values. The object may contained nested data.\n * an Immutable.Map\n * a simple type such as an integer. This is a shorthand for supplying {"value": v}.\n\nExample:\n\n```\nconst t = new Date("2015-04-22T03:30:00Z");\nconst event1 = new TimeEvent(t, { a: 5, b: 6 });\n```\n\n**Kind**: global class  \n\n* [TimeEvent](#TimeEvent)\n    * [new TimeEvent()](#new_TimeEvent_new)\n    * _instance_\n        * [.key()](#TimeEvent+key)\n        * [.toJSON()](#TimeEvent+toJSON) ⇒ <code>Object</code>\n        * [.toPoint()](#TimeEvent+toPoint)\n        * [.timestampAsUTCString()](#TimeEvent+timestampAsUTCString)\n        * [.timestampAsLocalString()](#TimeEvent+timestampAsLocalString)\n        * [.timestamp()](#TimeEvent+timestamp)\n        * [.begin()](#TimeEvent+begin)\n        * [.end()](#TimeEvent+end)\n        * [.stringify()](#TimeEvent+stringify) ⇒ <code>string</code>\n    * _static_\n        * [.keySchema()](#TimeEvent.keySchema)\n\n<a name="new_TimeEvent_new"></a>\n\n### new TimeEvent()\nThe creation of an TimeEvent is done by combining two parts:\nthe timestamp and the data.\n\nTo construct you specify the timestamp as either:\n    - Javascript Date object\n    - a Moment, or\n    - millisecond timestamp: the number of ms since the UNIX epoch\n\nTo specify the data you can supply either:\n    - a Javascript object containing key values pairs\n    - an Immutable.Map, or\n    - a simple type such as an integer. In the case of the simple type\n      this is a shorthand for supplying {"value": v}.\n\n<a name="TimeEvent+key"></a>\n\n### timeEvent.key()\nReturns the timestamp (as ms since the epoch)\n\n**Kind**: instance method of <code>[TimeEvent](#TimeEvent)</code>  \n<a name="TimeEvent+toJSON"></a>\n\n### timeEvent.toJSON() ⇒ <code>Object</code>\nReturns the Event as a JSON object, essentially:\n {time: t, data: {key: value, ...}}\n\n**Kind**: instance method of <code>[TimeEvent](#TimeEvent)</code>  \n**Returns**: <code>Object</code> - The event as JSON.  \n<a name="TimeEvent+toPoint"></a>\n\n### timeEvent.toPoint()\nReturns a flat array starting with the timestamp, followed by the values.\n\n**Kind**: instance method of <code>[TimeEvent](#TimeEvent)</code>  \n<a name="TimeEvent+timestampAsUTCString"></a>\n\n### timeEvent.timestampAsUTCString()\nThe timestamp of this data, in UTC time, as a string.\n\n**Kind**: instance method of <code>[TimeEvent](#TimeEvent)</code>  \n<a name="TimeEvent+timestampAsLocalString"></a>\n\n### timeEvent.timestampAsLocalString()\nThe timestamp of this data, in Local time, as a string.\n\n**Kind**: instance method of <code>[TimeEvent](#TimeEvent)</code>  \n<a name="TimeEvent+timestamp"></a>\n\n### timeEvent.timestamp()\nThe timestamp of this data\n\n**Kind**: instance method of <code>[TimeEvent](#TimeEvent)</code>  \n<a name="TimeEvent+begin"></a>\n\n### timeEvent.begin()\nThe begin time of this Event, which will be just the timestamp\n\n**Kind**: instance method of <code>[TimeEvent](#TimeEvent)</code>  \n<a name="TimeEvent+end"></a>\n\n### timeEvent.end()\nThe end time of this Event, which will be just the timestamp\n\n**Kind**: instance method of <code>[TimeEvent](#TimeEvent)</code>  \n<a name="TimeEvent+stringify"></a>\n\n### timeEvent.stringify() ⇒ <code>string</code>\nTurn the Collection data into a string\n\n**Kind**: instance method of <code>[TimeEvent](#TimeEvent)</code>  \n**Returns**: <code>string</code> - The collection as a string  \n<a name="TimeEvent.keySchema"></a>\n\n### TimeEvent.keySchema()\nFor Avro serialization, this defines the event\'s key (the timestamp)\nas a simple a long (logicalType of timestamp milliseconds)\n\n**Kind**: static method of <code>[TimeEvent](#TimeEvent)</code>  \n';
},function(e,n){e.exports='<a name="TimeRange"></a>\n\n## TimeRange\nA time range is a simple representation of a begin and end time, used\nto maintain consistency across an application.\n\n### Construction\n\nYou can define a TimeRange with moments, Javascript Date objects\nor ms since UNIX epoch. Here we construct one with two moments:\n\n```js\nvar fmt = "YYYY-MM-DD HH:mm";\nvar beginTime = moment("2012-01-11 11:11", fmt);\nvar endTime =   moment("2012-02-22 12:12", fmt);\nvar range = new TimeRange(beginTime, endTime);\n```\n\nor with ms times:\n\n```js\nvar range = new TimeRange([1326309060000, 1329941520000]);\n```\n\n**Kind**: global class  \n\n* [TimeRange](#TimeRange)\n    * [new TimeRange()](#new_TimeRange_new)\n    * _instance_\n        * [.range()](#TimeRange+range) ⇒ <code>Immutable.List</code>\n        * [.toJSON()](#TimeRange+toJSON) ⇒ <code>Array.&lt;number&gt;</code>\n        * [.toString()](#TimeRange+toString) ⇒ <code>string</code>\n        * [.toLocalString()](#TimeRange+toLocalString) ⇒ <code>string</code>\n        * [.toUTCString()](#TimeRange+toUTCString) ⇒ <code>string</code>\n        * [.humanize()](#TimeRange+humanize) ⇒ <code>string</code>\n        * [.relativeString()](#TimeRange+relativeString) ⇒ <code>string</code>\n        * [.begin()](#TimeRange+begin) ⇒ <code>Date</code>\n        * [.end()](#TimeRange+end) ⇒ <code>Date</code>\n        * [.setBegin(t)](#TimeRange+setBegin) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.setEnd(t)](#TimeRange+setEnd) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.equals(other)](#TimeRange+equals) ⇒ <code>boolean</code>\n        * [.contains(other)](#TimeRange+contains) ⇒ <code>boolean</code>\n        * [.within(other)](#TimeRange+within) ⇒ <code>boolean</code>\n        * [.overlaps(other)](#TimeRange+overlaps) ⇒ <code>boolean</code>\n        * [.disjoint(other)](#TimeRange+disjoint) ⇒ <code>boolean</code>\n        * [.extents(other)](#TimeRange+extents) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.intersection(other)](#TimeRange+intersection) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.duration()](#TimeRange+duration) ⇒ <code>number</code>\n        * [.humanizeDuration()](#TimeRange+humanizeDuration) ⇒ <code>string</code>\n    * _static_\n        * [.lastDay()](#TimeRange.lastDay) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.lastSevenDays()](#TimeRange.lastSevenDays) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.lastThirtyDays()](#TimeRange.lastThirtyDays) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.lastMonth()](#TimeRange.lastMonth) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.lastNinetyDays()](#TimeRange.lastNinetyDays) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.lastYear()](#TimeRange.lastYear) ⇒ <code>[TimeRange](#TimeRange)</code>\n\n<a name="new_TimeRange_new"></a>\n\n### new TimeRange()\nBuilds a new TimeRange which may be of several different formats:\n  - Another TimeRange (copy constructor)\n  - An Immutable.List containing two Dates.\n  - A Javascript array containing two Date or ms timestamps\n  - Two arguments, begin and end, each of which may be a Data,\n    a Moment, or a ms timestamp.\n\n<a name="TimeRange+range"></a>\n\n### timeRange.range() ⇒ <code>Immutable.List</code>\nReturns the internal range, which is an Immutable List containing\nbegin and end times.\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>Immutable.List</code> - List containing the begin and end of the time range.  \n<a name="TimeRange+toJSON"></a>\n\n### timeRange.toJSON() ⇒ <code>Array.&lt;number&gt;</code>\nReturns the TimeRange as JSON, which will be a Javascript array\nof two ms timestamps.\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>Array.&lt;number&gt;</code> - JSON representation of the TimeRange  \n<a name="TimeRange+toString"></a>\n\n### timeRange.toString() ⇒ <code>string</code>\nReturns the TimeRange as a string, useful for serialization.\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>string</code> - String representation of the TimeRange  \n<a name="TimeRange+toLocalString"></a>\n\n### timeRange.toLocalString() ⇒ <code>string</code>\nReturns the TimeRange as a string expressed in local time\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>string</code> - String representation of the TimeRange  \n<a name="TimeRange+toUTCString"></a>\n\n### timeRange.toUTCString() ⇒ <code>string</code>\nReturns the TimeRange as a string expressed in UTC time\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>string</code> - String representation of the TimeRange  \n<a name="TimeRange+humanize"></a>\n\n### timeRange.humanize() ⇒ <code>string</code>\nReturns a human friendly version of the TimeRange, e.g.\n"Aug 1, 2014 05:19:59 am to Aug 1, 2014 07:41:06 am"\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>string</code> - Human friendly string representation of the TimeRange  \n<a name="TimeRange+relativeString"></a>\n\n### timeRange.relativeString() ⇒ <code>string</code>\nReturns a human friendly version of the TimeRange\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>string</code> - Human friendly string representation of the TimeRange  \n**Example**  \n```js\n"a few seconds ago to a month ago"\n```\n<a name="TimeRange+begin"></a>\n\n### timeRange.begin() ⇒ <code>Date</code>\nReturns the begin time of the TimeRange.\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>Date</code> - The begin time of the TimeRange  \n<a name="TimeRange+end"></a>\n\n### timeRange.end() ⇒ <code>Date</code>\nReturns the end time of the TimeRange.\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>Date</code> - The end time of the TimeRange  \n<a name="TimeRange+setBegin"></a>\n\n### timeRange.setBegin(t) ⇒ <code>[TimeRange](#TimeRange)</code>\nSets a new begin time on the TimeRange. The result will be\na new TimeRange.\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - The new mutated TimeRange  \n**Params**\n\n- t <code>Date</code> - Time to set the begin time to\n\n<a name="TimeRange+setEnd"></a>\n\n### timeRange.setEnd(t) ⇒ <code>[TimeRange](#TimeRange)</code>\nSets a new end time on the TimeRange. The result will be\na new TimeRange.\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - The new mutated TimeRange  \n**Params**\n\n- t <code>Date</code> - Time to set the end time to\n\n<a name="TimeRange+equals"></a>\n\n### timeRange.equals(other) ⇒ <code>boolean</code>\nReturns if the two TimeRanges can be considered equal,\nin that they have the same times.\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>boolean</code> - Result  \n**Params**\n\n- other <code>[TimeRange](#TimeRange)</code> - The TimeRange to compare to\n\n<a name="TimeRange+contains"></a>\n\n### timeRange.contains(other) ⇒ <code>boolean</code>\nReturns true if other is completely inside this.\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>boolean</code> - Result  \n**Params**\n\n- other <code>[TimeRange](#TimeRange)</code> - The TimeRange to compare to\n\n<a name="TimeRange+within"></a>\n\n### timeRange.within(other) ⇒ <code>boolean</code>\nReturns true if this TimeRange is completely within the supplied\nother TimeRange.\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>boolean</code> - Result  \n**Params**\n\n- other <code>[TimeRange](#TimeRange)</code> - The TimeRange to compare to\n\n<a name="TimeRange+overlaps"></a>\n\n### timeRange.overlaps(other) ⇒ <code>boolean</code>\nReturns true if the passed in other TimeRange overlaps this time Range.\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>boolean</code> - Result  \n**Params**\n\n- other <code>[TimeRange](#TimeRange)</code> - The TimeRange to compare to\n\n<a name="TimeRange+disjoint"></a>\n\n### timeRange.disjoint(other) ⇒ <code>boolean</code>\nReturns true if the passed in other Range in no way\noverlaps this time Range.\n\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>boolean</code> - Result  \n**Params**\n\n- other <code>[TimeRange](#TimeRange)</code> - The TimeRange to compare to\n\n<a name="TimeRange+extents"></a>\n\n### timeRange.extents(other) ⇒ <code>[TimeRange](#TimeRange)</code>\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - a new Timerange which covers the extents of this and\nother combined.  \n**Params**\n\n- other <code>[TimeRange](#TimeRange)</code> - The TimeRange to extend with\n\n<a name="TimeRange+intersection"></a>\n\n### timeRange.intersection(other) ⇒ <code>[TimeRange](#TimeRange)</code>\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - A new TimeRange which represents the intersection\n(overlapping) part of this and other.  \n**Params**\n\n- other <code>[TimeRange](#TimeRange)</code> - The TimeRange to intersect with\n\n<a name="TimeRange+duration"></a>\n\n### timeRange.duration() ⇒ <code>number</code>\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>number</code> - The duration of the TimeRange in milliseconds  \n<a name="TimeRange+humanizeDuration"></a>\n\n### timeRange.humanizeDuration() ⇒ <code>string</code>\n**Kind**: instance method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>string</code> - A user friendly version of the duration.  \n<a name="TimeRange.lastDay"></a>\n\n### TimeRange.lastDay() ⇒ <code>[TimeRange](#TimeRange)</code>\n**Kind**: static method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - The last day, as a TimeRange  \n<a name="TimeRange.lastSevenDays"></a>\n\n### TimeRange.lastSevenDays() ⇒ <code>[TimeRange](#TimeRange)</code>\n**Kind**: static method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - The last seven days, as a TimeRange  \n<a name="TimeRange.lastThirtyDays"></a>\n\n### TimeRange.lastThirtyDays() ⇒ <code>[TimeRange](#TimeRange)</code>\n**Kind**: static method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - The last thirty days, as a TimeRange  \n<a name="TimeRange.lastMonth"></a>\n\n### TimeRange.lastMonth() ⇒ <code>[TimeRange](#TimeRange)</code>\n**Kind**: static method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - The last month, as a TimeRange  \n<a name="TimeRange.lastNinetyDays"></a>\n\n### TimeRange.lastNinetyDays() ⇒ <code>[TimeRange](#TimeRange)</code>\n**Kind**: static method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - The last 90 days, as a TimeRange  \n<a name="TimeRange.lastYear"></a>\n\n### TimeRange.lastYear() ⇒ <code>[TimeRange](#TimeRange)</code>\n**Kind**: static method of <code>[TimeRange](#TimeRange)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - The last year, as a TimeRange  \n'},function(e,n){e.exports='<a name="TimeRangeEvent"></a>\n\n## TimeRangeEvent\nA `TimeRangeEvent` uses a `TimeRange` to specify the range over\nwhich the event occurs and maps that to a data object representing\nsome measurements or metrics during that time range.\n\nYou supply the timerange as a `TimeRange` object.\n\nThe data is also specified during construction and maybe either:\n 1) a Javascript object or simple type\n 2) an Immutable.Map.\n 3) Simple measurement\n\nIf an Javascript object is provided it will be stored internally as an\nImmutable Map. If the data provided is some other simple type (such as an\ninteger) then it will be equivalent to supplying an object of {value: data}.\nData may also be undefined.\n\n```\nconst e = new TimeRangeEvent(timerange, data);\n```\n\nTo get the data out of an TimeRangeEvent instance use `data()`.\nIt will return an Immutable.Map. Alternatively you can call `toJSON()`\nto return a Javascript object representation of the data, while\n`toString()` will serialize the entire event to a string.\n\n**Example:**\n\nGiven some source of data that looks like this:\n\n```json\nconst event = {\n    "start_time": "2015-04-22T03:30:00Z",\n    "end_time": "2015-04-22T13:00:00Z",\n    "description": "At 13:33 pacific circuit 06519 went down.",\n    "title": "STAR-CR5 - Outage",\n    "completed": true,\n    "external_ticket": "",\n    "esnet_ticket": "ESNET-20150421-013",\n    "organization": "Internet2 / Level 3",\n    "type": "U"\n}\n```\n\nWe first extract the begin and end times to build a TimeRange:\n\n```js\nlet b = new Date(event.start_time);\nlet e = new Date(event.end_time);\nlet timerange = new TimeRange(b, e);\n```\n\nThen we combine the TimeRange and the event itself to create the Event.\n\n```js\nlet outageEvent = new TimeRangeEvent(timerange, sampleEvent);\n```\n\nOnce we have an event we can get access the time range with:\n\n```js\noutageEvent.begin().getTime()   // 1429673400000\noutageEvent.end().getTime())    // 1429707600000\noutageEvent.humanizeDuration()) // "10 hours"\n```\n\nAnd we can access the data like so:\n\n```js\noutageEvent.get("title")  // "STAR-CR5 - Outage"\n```\n\n**Kind**: global class  \n\n* [TimeRangeEvent](#TimeRangeEvent)\n    * [new TimeRangeEvent()](#new_TimeRangeEvent_new)\n    * _instance_\n        * [.key()](#TimeRangeEvent+key)\n        * [.toJSON()](#TimeRangeEvent+toJSON)\n        * [.toPoint()](#TimeRangeEvent+toPoint)\n        * [.timerange()](#TimeRangeEvent+timerange) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.timerangeAsUTCString()](#TimeRangeEvent+timerangeAsUTCString) ⇒ <code>string</code>\n        * [.timerangeAsLocalString()](#TimeRangeEvent+timerangeAsLocalString) ⇒ <code>string</code>\n        * [.begin()](#TimeRangeEvent+begin) ⇒ <code>Data</code>\n        * [.end()](#TimeRangeEvent+end) ⇒ <code>Data</code>\n        * [.timestamp()](#TimeRangeEvent+timestamp) ⇒ <code>Data</code>\n        * [.humanizeDuration()](#TimeRangeEvent+humanizeDuration)\n    * _static_\n        * [.keySchema()](#TimeRangeEvent.keySchema)\n\n<a name="new_TimeRangeEvent_new"></a>\n\n### new TimeRangeEvent()\nThe creation of an TimeRangeEvent is done by combining two parts:\nthe timerange and the data.\n\nTo construct you specify a TimeRange, along with the data.\n\nTo specify the data you can supply either:\n    - a Javascript object containing key values pairs\n    - an Immutable.Map, or\n    - a simple type such as an integer. In the case of the simple type\n      this is a shorthand for supplying {"value": v}.\n\n<a name="TimeRangeEvent+key"></a>\n\n### timeRangeEvent.key()\nReturns the timerange as a string\n\n**Kind**: instance method of <code>[TimeRangeEvent](#TimeRangeEvent)</code>  \n<a name="TimeRangeEvent+toJSON"></a>\n\n### timeRangeEvent.toJSON()\nReturns the TimeRangeEvent as a JSON object, converting all\nImmutable structures in the process.\n\n**Kind**: instance method of <code>[TimeRangeEvent](#TimeRangeEvent)</code>  \n<a name="TimeRangeEvent+toPoint"></a>\n\n### timeRangeEvent.toPoint()\nReturns a flat array starting with the timestamp, followed by the values.\n\n**Kind**: instance method of <code>[TimeRangeEvent](#TimeRangeEvent)</code>  \n<a name="TimeRangeEvent+timerange"></a>\n\n### timeRangeEvent.timerange() ⇒ <code>[TimeRange](#TimeRange)</code>\nThe timerange of this data as a `TimeRange` object\n\n**Kind**: instance method of <code>[TimeRangeEvent](#TimeRangeEvent)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - TimeRange of this data.  \n<a name="TimeRangeEvent+timerangeAsUTCString"></a>\n\n### timeRangeEvent.timerangeAsUTCString() ⇒ <code>string</code>\nThe TimeRange of this event, in UTC, as a string.\n\n**Kind**: instance method of <code>[TimeRangeEvent](#TimeRangeEvent)</code>  \n**Returns**: <code>string</code> - TimeRange of this data.  \n<a name="TimeRangeEvent+timerangeAsLocalString"></a>\n\n### timeRangeEvent.timerangeAsLocalString() ⇒ <code>string</code>\nThe TimeRange of this event, in Local time, as a string.\n\n**Kind**: instance method of <code>[TimeRangeEvent](#TimeRangeEvent)</code>  \n**Returns**: <code>string</code> - TimeRange of this data.  \n<a name="TimeRangeEvent+begin"></a>\n\n### timeRangeEvent.begin() ⇒ <code>Data</code>\nThe begin time of this Event\n\n**Kind**: instance method of <code>[TimeRangeEvent](#TimeRangeEvent)</code>  \n**Returns**: <code>Data</code> - Begin time  \n<a name="TimeRangeEvent+end"></a>\n\n### timeRangeEvent.end() ⇒ <code>Data</code>\nThe end time of this Event\n\n**Kind**: instance method of <code>[TimeRangeEvent](#TimeRangeEvent)</code>  \n**Returns**: <code>Data</code> - End time  \n<a name="TimeRangeEvent+timestamp"></a>\n\n### timeRangeEvent.timestamp() ⇒ <code>Data</code>\nAlias for the begin() time.\n\n**Kind**: instance method of <code>[TimeRangeEvent](#TimeRangeEvent)</code>  \n**Returns**: <code>Data</code> - Time representing this Event  \n<a name="TimeRangeEvent+humanizeDuration"></a>\n\n### timeRangeEvent.humanizeDuration()\nA human friendly version of the duration of this event\n\n**Kind**: instance method of <code>[TimeRangeEvent](#TimeRangeEvent)</code>  \n<a name="TimeRangeEvent.keySchema"></a>\n\n### TimeRangeEvent.keySchema()\nFor Avro serialization, this defines the event\'s key (the TimeRange in this case)\nas an Avro schema (as an array containing the start and end timestamps in this\ncase)\n\n**Kind**: static method of <code>[TimeRangeEvent](#TimeRangeEvent)</code>  \n'},function(e,n){e.exports='<a name="TimeSeries"></a>\n\n## TimeSeries\nA `TimeSeries` represents a series of events, with each event being a combination of:\n\n - time (or `TimeRange`, or `Index`)\n - data - corresponding set of key/values.\n\n### Construction\n\nCurrently you can initialize a `TimeSeries` with either a list of events, or with a data format that looks like this:\n\n```javascript\nconst data = {\n    name: "trafficc",\n    columns: ["time", "value"],\n    points: [\n        [1400425947000, 52],\n        [1400425948000, 18],\n        [1400425949000, 26],\n        [1400425950000, 93],\n        ...\n    ]\n};\n```\n\nTo create a new TimeSeries object from the above format, simply use the constructor:\n\n```javascript\nconst series = new TimeSeries(data);\n```\n\nThe format of the data is as follows:\n\n - **name** - optional, but a good practice\n - **columns** - are necessary and give labels to the data in the points.\n - **points** - are an array of tuples. Each row is at a different time (or timerange), and each value corresponds to the column labels.\n\nAs just hinted at, the first column may actually be:\n\n - "time"\n - "timeRange" represented by a `TimeRange`\n - "index" - a time range represented by an `Index`. By using an index it is possible, for example, to refer to a specific month:\n\n```javascript\nconst availabilityData = {\n    name: "Last 3 months availability",\n    columns: ["index", "uptime"],\n    points: [\n        ["2015-06", "100%"], // <-- 2015-06 specified here represents June 2015\n        ["2015-05", "92%"],\n        ["2015-04", "87%"],\n    ]\n};\n```\n\nAlternatively, you can construct a `TimeSeries` with a list of events.\nThese may be `TimeEvents`, `TimeRangeEvents` or `IndexedEvents`. Here\'s an example of that:\n\n```javascript\nconst events = [];\nevents.push(new TimeEvent(new Date(2015, 7, 1), {value: 27}));\nevents.push(new TimeEvent(new Date(2015, 8, 1), {value: 29}));\nconst series = new TimeSeries({\n    name: "avg temps",\n    events: events\n});\n```\n\n### Nested data\n\nThe values do not have to be simple types like the above examples. Here\'s an\nexample where each value is itself an object with "in" and "out" keys:\n\n```javascript\nconst series = new TimeSeries({\n    name: "Map Traffic",\n    columns: ["time", "NASA_north", "NASA_south"],\n    points: [\n        [1400425951000, {in: 100, out: 200}, {in: 145, out: 135}],\n        [1400425952000, {in: 200, out: 400}, {in: 146, out: 142}],\n        [1400425953000, {in: 300, out: 600}, {in: 147, out: 158}],\n        [1400425954000, {in: 400, out: 800}, {in: 155, out: 175}],\n    ]\n});\n```\n\nComplex data is stored in an Immutable structure. To get a value out of nested\ndata like this you will get the event you want (by row), as usual, and then use\n`get()` to fetch the value by column name. The result of this call will be a\nJSON copy of the Immutable data so you can query deeper in the usual way:\n\n```javascript\nseries.at(0).get("NASA_north")["in"]  // 200`\n```\n\nIt is then possible to use a value mapper function when calculating different\nproperties. For example, to get the average "in" value of the NASA_north column:\n\n```javascript\nseries.avg("NASA_north", d => d.in);  // 250\n```\n\n**Kind**: global class  \n\n* [TimeSeries](#TimeSeries)\n    * _instance_\n        * [.metaSchema()](#TimeSeries+metaSchema)\n        * [.toAvro()](#TimeSeries+toAvro)\n        * [.toJSON()](#TimeSeries+toJSON)\n        * [.toString()](#TimeSeries+toString)\n        * [.timerange()](#TimeSeries+timerange)\n        * [.range()](#TimeSeries+range)\n        * [.begin()](#TimeSeries+begin) ⇒ <code>Date</code>\n        * [.end()](#TimeSeries+end) ⇒ <code>Date</code>\n        * [.at(pos)](#TimeSeries+at)\n        * [.atTime(time)](#TimeSeries+atTime) ⇒ <code>[TimeEvent](#TimeEvent)</code> &#124; <code>[IndexedEvent](#IndexedEvent)</code> &#124; <code>[TimeRangeEvent](#TimeRangeEvent)</code>\n        * [.atFirst()](#TimeSeries+atFirst) ⇒ <code>[TimeEvent](#TimeEvent)</code> &#124; <code>[IndexedEvent](#IndexedEvent)</code> &#124; <code>[TimeRangeEvent](#TimeRangeEvent)</code>\n        * [.atLast()](#TimeSeries+atLast) ⇒ <code>[TimeEvent](#TimeEvent)</code> &#124; <code>[IndexedEvent](#IndexedEvent)</code> &#124; <code>[TimeRangeEvent](#TimeRangeEvent)</code>\n        * [.events()](#TimeSeries+events)\n        * [.setCollection(collection, isChronological)](#TimeSeries+setCollection) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.bisect(t, b)](#TimeSeries+bisect) ⇒ <code>number</code>\n        * [.slice(begin, end)](#TimeSeries+slice) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.crop(timerange)](#TimeSeries+crop) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.clean(fieldPath)](#TimeSeries+clean) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.events()](#TimeSeries+events)\n        * [.name()](#TimeSeries+name) ⇒ <code>string</code>\n        * [.setName()](#TimeSeries+setName)\n        * [.index()](#TimeSeries+index) ⇒ <code>[Index](#Index)</code>\n        * [.indexAsString()](#TimeSeries+indexAsString) ⇒ <code>string</code>\n        * [.indexAsRange()](#TimeSeries+indexAsRange) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.isUTC()](#TimeSeries+isUTC) ⇒ <code>[TimeRange](#TimeRange)</code>\n        * [.columns()](#TimeSeries+columns) ⇒ <code>array</code>\n        * [.collection()](#TimeSeries+collection) ⇒ <code>[Collection](#Collection)</code>\n        * [.meta(key)](#TimeSeries+meta) ⇒ <code>object</code>\n        * [.setMeta()](#TimeSeries+setMeta)\n        * [.size()](#TimeSeries+size) ⇒ <code>number</code>\n        * [.sizeValid()](#TimeSeries+sizeValid) ⇒ <code>number</code>\n        * [.count()](#TimeSeries+count) ⇒ <code>number</code>\n        * [.sum(fieldPath, filter)](#TimeSeries+sum) ⇒ <code>number</code>\n        * [.max(fieldPath)](#TimeSeries+max) ⇒ <code>number</code>\n        * [.min(fieldPath, filter)](#TimeSeries+min) ⇒ <code>number</code>\n        * [.avg(fieldPath, filter)](#TimeSeries+avg) ⇒ <code>number</code>\n        * [.mean(fieldPath, filter)](#TimeSeries+mean) ⇒ <code>number</code>\n        * [.median(fieldPath, filter)](#TimeSeries+median) ⇒ <code>number</code>\n        * [.stdev(fieldPath, filter)](#TimeSeries+stdev) ⇒ <code>number</code>\n        * [.percentile(q, fieldPath, interp, filter)](#TimeSeries+percentile) ⇒ <code>number</code>\n        * [.aggregate(func, fieldPath)](#TimeSeries+aggregate) ⇒ <code>number</code>\n        * [.quantile(n, fieldPath, interp)](#TimeSeries+quantile) ⇒ <code>array</code>\n        * [.pipeline()](#TimeSeries+pipeline) ⇒ <code>[Pipeline](#Pipeline)</code>\n        * [.map(operator)](#TimeSeries+map) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.select(options)](#TimeSeries+select) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.collapse(options)](#TimeSeries+collapse) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.renameColumns(options)](#TimeSeries+renameColumns) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.fill(options)](#TimeSeries+fill) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.align(options)](#TimeSeries+align) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.rate(options)](#TimeSeries+rate) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.fixedWindowRollup(options)](#TimeSeries+fixedWindowRollup) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.hourlyRollup(options)](#TimeSeries+hourlyRollup) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.dailyRollup(options)](#TimeSeries+dailyRollup) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.monthlyRollup(options)](#TimeSeries+monthlyRollup) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.yearlyRollup(options)](#TimeSeries+yearlyRollup) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.collectByFixedWindow(options)](#TimeSeries+collectByFixedWindow) ⇒ <code>map</code>\n    * _static_\n        * [.event()](#TimeSeries.event)\n        * [.equal(series1, series2)](#TimeSeries.equal) ⇒ <code>bool</code>\n        * [.is(series1, series2)](#TimeSeries.is) ⇒ <code>bool</code>\n        * [.timeSeriesListReduce(options)](#TimeSeries.timeSeriesListReduce) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n        * [.timeSeriesListMerge(options)](#TimeSeries.timeSeriesListMerge) ⇒ <code>[TimeSeries](#TimeSeries)</code>\n\n<a name="TimeSeries+metaSchema"></a>\n\n### timeSeries.metaSchema()\nShould return a list of definitions. e.g.\n```\n    [\n        {name: "name", type: "string"},\n        {name: "myvalue", type: "long"}\n    ]\n```\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n<a name="TimeSeries+toAvro"></a>\n\n### timeSeries.toAvro()\nExpress the event as an avro buffer\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n<a name="TimeSeries+toJSON"></a>\n\n### timeSeries.toJSON()\nTurn the TimeSeries into regular javascript objects\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n<a name="TimeSeries+toString"></a>\n\n### timeSeries.toString()\nRepresent the TimeSeries as a string\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n<a name="TimeSeries+timerange"></a>\n\n### timeSeries.timerange()\nReturns the extents of the TimeSeries as a TimeRange.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n<a name="TimeSeries+range"></a>\n\n### timeSeries.range()\nAlias for `timerange()`\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n<a name="TimeSeries+begin"></a>\n\n### timeSeries.begin() ⇒ <code>Date</code>\nGets the earliest time represented in the TimeSeries.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>Date</code> - Begin time  \n<a name="TimeSeries+end"></a>\n\n### timeSeries.end() ⇒ <code>Date</code>\nGets the latest time represented in the TimeSeries.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>Date</code> - End time  \n<a name="TimeSeries+at"></a>\n\n### timeSeries.at(pos)\nAccess a specific TimeSeries event via its position\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Params**\n\n- pos <code>number</code> - The event position\n\n<a name="TimeSeries+atTime"></a>\n\n### timeSeries.atTime(time) ⇒ <code>[TimeEvent](#TimeEvent)</code> &#124; <code>[IndexedEvent](#IndexedEvent)</code> &#124; <code>[TimeRangeEvent](#TimeRangeEvent)</code>\nReturns an event in the series by its time. This is the same\nas calling `bisect` first and then using `at` with the index.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Params**\n\n- time <code>Date</code> - The time of the event.\n\n<a name="TimeSeries+atFirst"></a>\n\n### timeSeries.atFirst() ⇒ <code>[TimeEvent](#TimeEvent)</code> &#124; <code>[IndexedEvent](#IndexedEvent)</code> &#124; <code>[TimeRangeEvent](#TimeRangeEvent)</code>\nReturns the first event in the series.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n<a name="TimeSeries+atLast"></a>\n\n### timeSeries.atLast() ⇒ <code>[TimeEvent](#TimeEvent)</code> &#124; <code>[IndexedEvent](#IndexedEvent)</code> &#124; <code>[TimeRangeEvent](#TimeRangeEvent)</code>\nReturns the last event in the series.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n<a name="TimeSeries+events"></a>\n\n### timeSeries.events()\nGenerator to return all the events in the series\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Example**  \n```\nfor (let event of series.events()) {\n    console.log(event.toString());\n}\n```\n<a name="TimeSeries+setCollection"></a>\n\n### timeSeries.setCollection(collection, isChronological) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nSets a new underlying collection for this TimeSeries.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - A new TimeSeries  \n**Params**\n\n- collection <code>[Collection](#Collection)</code> - The new collection\n- isChronological <code>boolean</code> <code> = false</code> - Causes the chronological\n                                      order of the events to\n                                      not be checked\n\n<a name="TimeSeries+bisect"></a>\n\n### timeSeries.bisect(t, b) ⇒ <code>number</code>\nReturns the index that bisects the TimeSeries at the time specified.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - The row number that is the greatest, but still below t.  \n**Params**\n\n- t <code>Date</code> - The time to bisect the TimeSeries with\n- b <code>number</code> - The position to begin searching at\n\n<a name="TimeSeries+slice"></a>\n\n### timeSeries.slice(begin, end) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nPerform a slice of events within the TimeSeries, returns a new\nTimeSeries representing a portion of this TimeSeries from\nbegin up to but not including end.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The new, sliced, TimeSeries.  \n**Params**\n\n- begin <code>Number</code> - The position to begin slicing\n- end <code>Number</code> - The position to end slicing\n\n<a name="TimeSeries+crop"></a>\n\n### timeSeries.crop(timerange) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nCrop the TimeSeries to the specified TimeRange and\nreturn a new TimeSeries.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The new, cropped, TimeSeries.  \n**Params**\n\n- timerange <code>[TimeRange](#TimeRange)</code> - The bounds of the new TimeSeries\n\n<a name="TimeSeries+clean"></a>\n\n### timeSeries.clean(fieldPath) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nReturns a new TimeSeries by testing the fieldPath\nvalues for being valid (not NaN, null or undefined).\n\nThe resulting TimeSeries will be clean (for that fieldPath).\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - A new, modified, TimeSeries.  \n**Params**\n\n- fieldPath <code>string</code> - Name of value to look up. If not supplied,\n                                 defaults to [\'value\']. "Deep" syntax is\n                                 [\'deep\', \'value\'] or \'deep.value\'\n\n<a name="TimeSeries+events"></a>\n\n### timeSeries.events()\nGenerator to return all the events in the collection.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Example**  \n```\nfor (let event of timeseries.events()) {\n    console.log(event.toString());\n}\n```\n<a name="TimeSeries+name"></a>\n\n### timeSeries.name() ⇒ <code>string</code>\nFetch the timeseries name\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>string</code> - The name given to this TimeSeries  \n<a name="TimeSeries+setName"></a>\n\n### timeSeries.setName()\nRename the timeseries\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n<a name="TimeSeries+index"></a>\n\n### timeSeries.index() ⇒ <code>[Index](#Index)</code>\nFetch the timeseries Index, if it has one.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[Index](#Index)</code> - The Index given to this TimeSeries  \n<a name="TimeSeries+indexAsString"></a>\n\n### timeSeries.indexAsString() ⇒ <code>string</code>\nFetch the timeseries Index, as a string, if it has one.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>string</code> - The Index, as a string, given to this TimeSeries  \n<a name="TimeSeries+indexAsRange"></a>\n\n### timeSeries.indexAsRange() ⇒ <code>[TimeRange](#TimeRange)</code>\nFetch the timeseries `Index`, as a `TimeRange`, if it has one.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - The `Index`, as a `TimeRange`, given to this `TimeSeries`  \n<a name="TimeSeries+isUTC"></a>\n\n### timeSeries.isUTC() ⇒ <code>[TimeRange](#TimeRange)</code>\nFetch the UTC flag, i.e. are the events in this `TimeSeries` in\nUTC or local time (if they are `IndexedEvent`s an event might be\n"2014-08-31". The actual time range of that representation\ndepends on where you are. Pond supports thinking about that in\neither as a UTC day, or a local day).\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeRange](#TimeRange)</code> - The Index, as a TimeRange, given to this TimeSeries  \n<a name="TimeSeries+columns"></a>\n\n### timeSeries.columns() ⇒ <code>array</code>\nFetch the list of column names. This is determined by\ntraversing though the events and collecting the set.\n\nNote: the order is not defined\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>array</code> - List of columns  \n<a name="TimeSeries+collection"></a>\n\n### timeSeries.collection() ⇒ <code>[Collection](#Collection)</code>\nReturns the internal `Collection` of events for this `TimeSeries`\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[Collection](#Collection)</code> - The collection backing this `TimeSeries`  \n<a name="TimeSeries+meta"></a>\n\n### timeSeries.meta(key) ⇒ <code>object</code>\nReturns the meta data about this TimeSeries as a JSON object.\nAny extra data supplied to the TimeSeries constructor will be\nplaced in the meta data object. This returns either all of that\ndata as a JSON object, or a specific key if `key` is supplied.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>object</code> - The meta data  \n**Params**\n\n- key <code>string</code> - Optional specific part of the meta data\n\n<a name="TimeSeries+setMeta"></a>\n\n### timeSeries.setMeta()\nSet new meta data for the TimeSeries. The result will\nbe a new TimeSeries.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n<a name="TimeSeries+size"></a>\n\n### timeSeries.size() ⇒ <code>number</code>\nReturns the number of events in this TimeSeries\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - Count of events  \n<a name="TimeSeries+sizeValid"></a>\n\n### timeSeries.sizeValid() ⇒ <code>number</code>\nReturns the number of valid items in this TimeSeries.\n\nUses the fieldSpec to look up values in all events.\nIt then counts the number that are considered valid, which\nspecifically are not NaN, undefined or null.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - Count of valid events  \n<a name="TimeSeries+count"></a>\n\n### timeSeries.count() ⇒ <code>number</code>\nReturns the number of events in this TimeSeries. Alias\nfor size().\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - Count of events  \n<a name="TimeSeries+sum"></a>\n\n### timeSeries.sum(fieldPath, filter) ⇒ <code>number</code>\nReturns the sum for the fieldspec\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - The sum  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the stdev of. A deep value can\n                           be referenced with a string.like.this.  If not supplied\n                           the `value` column will be aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="TimeSeries+max"></a>\n\n### timeSeries.max(fieldPath) ⇒ <code>number</code>\nAggregates the events down to their maximum value\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - The max value for the field  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the max of. A deep value can\n                           be referenced with a string.like.this.  If not supplied\n                           the `value` column will be aggregated.\n\n<a name="TimeSeries+min"></a>\n\n### timeSeries.min(fieldPath, filter) ⇒ <code>number</code>\nAggregates the events down to their minimum value\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - The min value for the field  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the min of. A deep value can\n                           be referenced with a string.like.this.  If not supplied\n                           the `value` column will be aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="TimeSeries+avg"></a>\n\n### timeSeries.avg(fieldPath, filter) ⇒ <code>number</code>\nAggregates the events in the TimeSeries down to their average\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - The average  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the avg of. A deep value can\n                           be referenced with a string.like.this.  If not supplied\n                           the `value` column will be aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="TimeSeries+mean"></a>\n\n### timeSeries.mean(fieldPath, filter) ⇒ <code>number</code>\nAggregates the events in the TimeSeries down to their mean (same as avg)\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - The mean  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the mean of. A deep value can\n                           be referenced with a string.like.this.  If not supplied\n                           the `value` column will be aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="TimeSeries+median"></a>\n\n### timeSeries.median(fieldPath, filter) ⇒ <code>number</code>\nAggregates the events down to their medium value\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - The resulting median value  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the median of. A deep value can\n                           be referenced with a string.like.this.  If not supplied\n                           the `value` column will be aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="TimeSeries+stdev"></a>\n\n### timeSeries.stdev(fieldPath, filter) ⇒ <code>number</code>\nAggregates the events down to their stdev\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - The resulting stdev value  \n**Params**\n\n- fieldPath <code>string</code> - Column to find the stdev of. A deep value can\n                           be referenced with a string.like.this.  If not supplied\n                           the `value` column will be aggregated.\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="TimeSeries+percentile"></a>\n\n### timeSeries.percentile(q, fieldPath, interp, filter) ⇒ <code>number</code>\nGets percentile q within the TimeSeries. This works the same way as numpy.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - The percentile  \n**Params**\n\n- q <code>integer</code> - The percentile (should be between 0 and 100)\n- fieldPath <code>string</code> - Column to find the qth percentile of. A deep value can\n                            be referenced with a string.like.this.  If not supplied\n                            the `value` column will be aggregated.\n- interp <code>string</code> <code> = &quot;linear&quot;</code> - Specifies the interpolation method\n                            to use when the desired quantile lies between\n                            two data points. Options are: "linear", "lower", "higher",\n                            "nearest", "midpoint"\n- filter <code>function</code> - Optional filter function used to clean data before aggregating\n\n<a name="TimeSeries+aggregate"></a>\n\n### timeSeries.aggregate(func, fieldPath) ⇒ <code>number</code>\nAggregates the events down using a user defined function to\ndo the reduction.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>number</code> - The resulting value  \n**Params**\n\n- func <code>function</code> - User defined reduction function. Will be\n                           passed a list of values. Should return a\n                           singe value.\n- fieldPath <code>string</code> - Column to aggregate over. A deep value can\n                           be referenced with a string.like.this.  If not supplied\n                           the `value` column will be aggregated.\n\n<a name="TimeSeries+quantile"></a>\n\n### timeSeries.quantile(n, fieldPath, interp) ⇒ <code>array</code>\nGets n quantiles within the TimeSeries. This works the same way as numpy\'s percentile().\nFor example `timeseries.quantile(4)` would be the same as using percentile with q = 0.25, 0.5 and 0.75.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>array</code> - An array of n quantiles  \n**Params**\n\n- n <code>integer</code> - The number of quantiles to divide the\n                           TimeSeries into.\n- fieldPath <code>string</code> - Column to calculate over. A deep value can\n                           be referenced with a string.like.this.  If not supplied\n                           the `value` column will be aggregated.\n- interp <code>string</code> - Specifies the interpolation method\n                           to use when the desired quantile lies between\n                           two data points. Options are: "linear", "lower", "higher",\n                           "nearest", "midpoint".\n\n<a name="TimeSeries+pipeline"></a>\n\n### timeSeries.pipeline() ⇒ <code>[Pipeline](#Pipeline)</code>\nReturns a new Pipeline with input source being initialized to\nthis TimeSeries collection. This allows pipeline operations\nto be chained directly onto the TimeSeries to produce a new\nTimeSeries or event result.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[Pipeline](#Pipeline)</code> - The Pipeline.  \n**Example**  \n```\ntimeseries.pipeline()\n    .offsetBy(1)\n    .offsetBy(2)\n    .to(CollectionOut, c => out = c);\n```\n<a name="TimeSeries+map"></a>\n\n### timeSeries.map(operator) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nTakes an operator that is used to remap events from this TimeSeries to\na new set of events.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - A TimeSeries containing the remapped events  \n**Params**\n\n- operator <code>function</code> - An operator which will be passed each\n                                   event and which should return a new event.\n\n<a name="TimeSeries+select"></a>\n\n### timeSeries.select(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nTakes a fieldSpec (list of column names) and outputs to the callback just those\ncolumns in a new TimeSeries.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The resulting TimeSeries with renamed columns  \n**Params**\n\n- options - An object containing options for the command\n    - .fieldSpec <code>string</code> | <code>array</code> - Column or columns to select into the new TimeSeries.\n                                        If you need to retrieve multiple deep nested values\n                                        that [\'can.be\', \'done.with\', \'this.notation\'].\n                                        A single deep value with a string.like.this.\n\n**Example**  \n```\n    const ts = timeseries.select({fieldSpec: ["uptime", "notes"]});\n```\n<a name="TimeSeries+collapse"></a>\n\n### timeSeries.collapse(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nTakes a `fieldSpecList` (list of column names) and collapses\nthem to a new column named `name` which is the reduction (using\nthe `reducer` function) of the matched columns in the `fieldSpecList`.\n\nThe column may be appended to the existing columns, or replace them,\nbased on the `append` boolean.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The resulting collapsed TimeSeries  \n**Params**\n\n- options - An object containing options:\n    - .fieldSpecList <code>array</code> - The list of columns to collapse. (required)\n    - .name <code>string</code> - The resulting collapsed column name (required)\n    - .reducer <code>function</code> - The reducer function (required)\n    - .append <code>bool</code> - Append the collapsed column, rather\n                                             than replace\n\n**Example**  \n```\n    const sums = ts.collapse({\n         name: "sum_series",\n         fieldSpecList: ["in", "out"],\n         reducer: sum(),\n         append: false\n    });\n```\n<a name="TimeSeries+renameColumns"></a>\n\n### timeSeries.renameColumns(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nRename columns in the underlying events.\n\nTakes a object of columns to rename. Returns a new `TimeSeries` containing\nnew events. Columns not in the dict will be retained and not renamed.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The resulting TimeSeries with renamed columns  \n**Note**: As the name implies, this will only rename the main\n"top level" (ie: non-deep) columns. If you need more\nextravagant renaming, roll your own using `TimeSeries.map()`.  \n**Params**\n\n- options - An object containing options:\n    - .renameMap <code>Object</code> - Columns to rename.\n\n**Example**  \n```\nnew_ts = ts.renameColumns({\n    renameMap: {in: "new_in", out: "new_out"}\n});\n```\n<a name="TimeSeries+fill"></a>\n\n### timeSeries.fill(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nTake the data in this TimeSeries and "fill" any missing or invalid\nvalues. This could be setting `null` values to zero so mathematical\noperations will succeed, interpolate a new value, or pad with the\npreviously given value.\n\nThe `fill()` method takes a single `options` arg.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The resulting filled TimeSeries  \n**Params**\n\n- options - An object containing options:\n    - .fieldSpec <code>string</code> | <code>array</code> - Column or columns to fill. If you need to\n                                             retrieve multiple deep nested values\n                                             that [\'can.be\', \'done.with\', \'this.notation\'].\n                                             A single deep value with a string.like.this.\n    - .method <code>string</code> - "linear" or "pad" or "zero" style interpolation\n    - .limit <code>number</code> - The maximum number of points which should be\n                                             interpolated onto missing points. You might set this to\n                                             2 if you are willing to fill 2 new points,\n                                             and then beyond that leave data with missing values.\n\n**Example**  \n```\nconst filled = timeseries.fill({\n    fieldSpec: ["direction.in", "direction.out"],\n    method: "zero",\n    limit: 3\n});\n```\n<a name="TimeSeries+align"></a>\n\n### timeSeries.align(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nAlign event values to regular time boundaries. The value at\nthe boundary is interpolated. Only the new interpolated\npoints are returned. If limit is reached nulls will be\nreturned at each boundary position.\n\nOne use case for this is to modify irregular data (i.e. data\nthat falls at slightly irregular times) so that it falls into a\nsequence of evenly spaced values. We use this to take data we\nget from the network which is approximately every 30 second\n(:32, 1:02, 1:34, ...) and output data on exact 30 second\nboundaries (:30, 1:00, 1:30, ...).\n\nAnother use case is data that might be already aligned to\nsome regular interval, but that contains missing points.\nWhile `fill()` can be used to replace `null` values, `align()`\ncan be used to add in missing points completely. Those points\ncan have an interpolated value, or by setting limit to 0,\ncan be filled with nulls. This is really useful when downstream\nprocessing depends on complete sequences.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The resulting aligned TimeSeries  \n**Params**\n\n- options - An object containing options:\n    - .fieldSpec <code>string</code> | <code>array</code> - Column or columns to align. If you need to\n                                             retrieve multiple deep nested values\n                                             that [\'can.be\', \'done.with\', \'this.notation\'].\n                                             A single deep value with a string.like.this.\n    - .period <code>string</code> - Spacing of aligned values. e.g. "6h" or "5m"\n    - .method <code>string</code> - "linear" or "pad" style interpolation to boundaries.\n    - .limit <code>number</code> - The maximum number of points which should be\n                                             interpolated onto boundaries. You might set this to\n                                             2 if you are willing to interpolate 2 new points,\n                                             and then beyond that just emit nulls on the boundaries.\n\n**Example**  \n```\nconst aligned = ts.align({\n    fieldSpec: "value",\n    period: "1m",\n    method: "linear"\n});\n```\n<a name="TimeSeries+rate"></a>\n\n### timeSeries.rate(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nReturns the derivative of the TimeSeries for the given columns. The result will\nbe per second. Optionally you can substitute in `null` values if the rate\nis negative. This is useful when a negative rate would be considered invalid.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The resulting `TimeSeries` containing calculated rates.  \n**Params**\n\n- options - An object containing options:\n    - .fieldSpec <code>string</code> | <code>array</code> - Column or columns to get the rate of. If you\n                                             need to retrieve multiple deep nested values\n                                             that [\'can.be\', \'done.with\', \'this.notation\'].\n    - .allowNegative <code>bool</code> - Will output null values for negative rates.\n                                             This is useful if you are getting the rate\n                                             of a counter that always goes up, except\n                                             when perhaps it rolls around or resets.\n\n<a name="TimeSeries+fixedWindowRollup"></a>\n\n### timeSeries.fixedWindowRollup(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nBuilds a new TimeSeries by dividing events within the TimeSeries\nacross multiple fixed windows of size `windowSize`.\n\nNote that these are windows defined relative to Jan 1st, 1970,\nand are UTC, so this is best suited to smaller window sizes\n(hourly, 5m, 30s, 1s etc), or in situations where you don\'t care\nabout the specific window, just that the data is smaller.\n\nEach window then has an aggregation specification applied as\n`aggregation`. This specification describes a mapping of output\nfieldNames to aggregation functions and their fieldPath. For example:\n```\n{in_avg: {in: avg()}, out_avg: {out: avg()}}\n```\nwill aggregate both "in" and "out" using the average aggregation\nfunction and return the result as in_avg and out_avg.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The resulting rolled up `TimeSeries`  \n**Params**\n\n- options - An object containing options:\n    - .windowSize <code>string</code> - The size of the window. e.g. "6h" or "5m"\n    - .aggregation <code>object</code> - The aggregation specification (see description above)\n    - .toTimeEvents <code>bool</code> - Output as `TimeEvent`s, rather than `IndexedEvent`s\n\n**Example**  \n```\n    const timeseries = new TimeSeries(data);\n    const dailyAvg = timeseries.fixedWindowRollup({\n        windowSize: "1d",\n        aggregation: {value: {value: avg()}}\n    });\n```\n<a name="TimeSeries+hourlyRollup"></a>\n\n### timeSeries.hourlyRollup(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nBuilds a new TimeSeries by dividing events into hours.\n\nEach window then has an aggregation specification `aggregation`\napplied. This specification describes a mapping of output\nfieldNames to aggregation functions and their fieldPath. For example:\n```\n{in_avg: {in: avg()}, out_avg: {out: avg()}}\n```\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The resulting rolled up TimeSeries  \n**Params**\n\n- options - An object containing options:\n    - .toTimeEvents <code>bool</code> - Convert the rollup events to `TimeEvent`s, otherwise it\n                                             will be returned as a `TimeSeries` of `IndexedEvent`s.\n    - .aggregation <code>object</code> - The aggregation specification (see description above)\n\n<a name="TimeSeries+dailyRollup"></a>\n\n### timeSeries.dailyRollup(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nBuilds a new TimeSeries by dividing events into days.\n\nEach window then has an aggregation specification `aggregation`\napplied. This specification describes a mapping of output\nfieldNames to aggregation functions and their fieldPath. For example:\n```\n{in_avg: {in: avg()}, out_avg: {out: avg()}}\n```\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The resulting rolled up TimeSeries  \n**Params**\n\n- options - An object containing options:\n    - .toTimeEvents <code>bool</code> - Convert the rollup events to `TimeEvent`s, otherwise it\n                                             will be returned as a `TimeSeries` of `IndexedEvent`s.\n    - .aggregation <code>object</code> - The aggregation specification (see description above)\n\n<a name="TimeSeries+monthlyRollup"></a>\n\n### timeSeries.monthlyRollup(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nBuilds a new TimeSeries by dividing events into months.\n\nEach window then has an aggregation specification `aggregation`\napplied. This specification describes a mapping of output\nfieldNames to aggregation functions and their fieldPath. For example:\n```\n{in_avg: {in: avg()}, out_avg: {out: avg()}}\n```\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The resulting rolled up `TimeSeries`  \n**Params**\n\n- options - An object containing options:\n    - .toTimeEvents <code>bool</code> - Convert the rollup events to `TimeEvent`s, otherwise it\n                                             will be returned as a `TimeSeries` of `IndexedEvent`s.\n    - .aggregation <code>object</code> - The aggregation specification (see description above)\n\n<a name="TimeSeries+yearlyRollup"></a>\n\n### timeSeries.yearlyRollup(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nBuilds a new TimeSeries by dividing events into years.\n\nEach window then has an aggregation specification `aggregation`\napplied. This specification describes a mapping of output\nfieldNames to aggregation functions and their fieldPath. For example:\n\n```\n{in_avg: {in: avg()}, out_avg: {out: avg()}}\n```\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The resulting rolled up `TimeSeries`  \n**Params**\n\n- options - An object containing options:\n    - .toTimeEvents <code>bool</code> - Convert the rollup events to `TimeEvent`s, otherwise it\n                                             will be returned as a `TimeSeries` of `IndexedEvent`s.\n    - .aggregation <code>object</code> - The aggregation specification (see description above)\n\n<a name="TimeSeries+collectByFixedWindow"></a>\n\n### timeSeries.collectByFixedWindow(options) ⇒ <code>map</code>\nBuilds multiple `Collection`s, each collects together\nevents within a window of size `windowSize`. Note that these\nare windows defined relative to Jan 1st, 1970, and are UTC.\n\n**Kind**: instance method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>map</code> - The result is a mapping from window index to a Collection.  \n**Params**\n\n- options - An object containing options:\n    - .windowSize <code>bool</code> - The size of the window. e.g. "6h" or "5m"\n\n**Example**  \n```\nconst timeseries = new TimeSeries(data);\nconst collections = timeseries.collectByFixedWindow({windowSize: "1d"});\nconsole.log(collections); // {1d-16314: Collection, 1d-16315: Collection, ...}\n```\n<a name="TimeSeries.event"></a>\n\n### TimeSeries.event()\nDefines the event type contained in this TimeSeries. The default here\nis to use the supplied type (time, timerange or index) to build either\na TimeEvent, TimeRangeEvent or IndexedEvent. However, you can also\nsubclass the TimeSeries and reimplement this to return another event\ntype. Typically you might want to do this to provide an Event subclass\nthat carries its own schema, for better validated and compact Avro\nserialization.\n\n**Kind**: static method of <code>[TimeSeries](#TimeSeries)</code>  \n<a name="TimeSeries.equal"></a>\n\n### TimeSeries.equal(series1, series2) ⇒ <code>bool</code>\nStatic function to compare two TimeSeries to each other. If the TimeSeries\nare of the same instance as each other then equals will return true.\n\n**Kind**: static method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>bool</code> - result  \n**Params**\n\n- series1 <code>[TimeSeries](#TimeSeries)</code>\n- series2 <code>[TimeSeries](#TimeSeries)</code>\n\n<a name="TimeSeries.is"></a>\n\n### TimeSeries.is(series1, series2) ⇒ <code>bool</code>\nStatic function to compare two TimeSeries to each other. If the TimeSeries\nare of the same value as each other then equals will return true.\n\n**Kind**: static method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>bool</code> - result  \n**Params**\n\n- series1 <code>[TimeSeries](#TimeSeries)</code>\n- series2 <code>[TimeSeries](#TimeSeries)</code>\n\n<a name="TimeSeries.timeSeriesListReduce"></a>\n\n### TimeSeries.timeSeriesListReduce(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nReduces a list of TimeSeries objects using a reducer function. This works\nby taking each event in each TimeSeries and collecting them together\nbased on timestamp. All events for a given time are then merged together\nusing the reducer function to produce a new event. The reducer function is\napplied to all columns in the fieldSpec. Those new events are then\ncollected together to form a new TimeSeries.\n\n**Kind**: static method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The reduced TimeSeries  \n**Params**\n\n- options - An object containing options. Additional key\n                                               values in the options will be added as meta data\n                                               to the resulting TimeSeries.\n    - .seriesList <code>array</code> - A list of `TimeSeries` (required)\n    - .reducer <code>function</code> - The reducer function e.g. `max()` (required)\n    - .fieldSpec <code>array</code> | <code>string</code> - Column or columns to reduce. If you\n                                               need to retrieve multiple deep\n                                               nested values that [\'can.be\', \'done.with\',\n                                               \'this.notation\']. A single deep value with a\n                                               string.like.this.\n\n**Example**  \nFor example you might have three TimeSeries with columns "in" and "out" which\ncorresponds to two measurements per timestamp. You could use this function to\nobtain a new TimeSeries which was the sum of the the three measurements using\nthe `sum()` reducer function and an ["in", "out"] fieldSpec.\n\n```\nconst totalSeries = TimeSeries.timeSeriesListReduce({\n    name: "totals",\n    seriesList: [inTraffic, outTraffic],\n    reducer: sum(),\n    fieldSpec: [ "in", "out" ]\n});\n```\n<a name="TimeSeries.timeSeriesListMerge"></a>\n\n### TimeSeries.timeSeriesListMerge(options) ⇒ <code>[TimeSeries](#TimeSeries)</code>\nTakes a list of TimeSeries and merges them together to form a new\nTimeseries.\n\nMerging will produce a new Event;\n only when events are conflict free, so\nit is useful in the following cases:\n * to combine multiple TimeSeries which have different time ranges, essentially\n concatenating them together\n * combine TimeSeries which have different columns, for example inTraffic has\n a column "in" and outTraffic has a column "out" and you want to produce a merged\n trafficSeries with columns "in" and "out".\n\n**Kind**: static method of <code>[TimeSeries](#TimeSeries)</code>  \n**Returns**: <code>[TimeSeries](#TimeSeries)</code> - The merged TimeSeries  \n**Params**\n\n- options - An object containing options. Additional key\n                                               values in the options will be added as meta data\n                                               to the resulting TimeSeries.\n    - .seriesList <code>array</code> - A list of `TimeSeries` (required)\n    - .fieldSpec <code>array</code> | <code>string</code> - Column or columns to merge. If you\n                                               need to retrieve multiple deep\n                                               nested values that [\'can.be\', \'done.with\',\n                                               \'this.notation\']. A single deep value with a\n                                               string.like.this.\n\n**Example**  \n```\nconst inTraffic = new TimeSeries(trafficDataIn);\nconst outTraffic = new TimeSeries(trafficDataOut);\nconst trafficSeries = TimeSeries.timeSeriesListMerge({\n    name: "traffic",\n    seriesList: [inTraffic, outTraffic]\n});\n```\n';
},function(e,n){e.exports='## SNMP counter example\n---\n\nMeasurement data we receive from our network routers comes in the form of counters. These counters generally increases monotonically. In this example we combine the alignment with the rate function to get a TimeSeries of network traffic (e.g. bits per second).\n\nWhile this example relates to network traffic, it could also apply to click streams, etc.\n\nData we get from the network is requested every 30 seconds from the routers. This is done with SNMP, a network management protocol. The response from the network arrives some time shortly after the request. At this point we timestamp the value because it is the most representative time we can come up with (the router does not timestamp the response). As a result, we typically find our incoming data events to be approximately every 30 seconds, but not quite. We might have values at 1:31, 2:02, 2:31, 3:04, etc.\n\nIn addition to this, we experience missing points from time to time (in the order of a handful per day) and we also experience counter reset where the counter reaches a numerical limit and resets itself.\n\nThe problem with this is that it makes downstream processing much harder to deal with.\n\nPond has several useful features to address this data ingestion problem. In pond.js, data can be processed as a stream (though a naive one that doesn\'t have mechanisms for dealing with out of order data), or as a batch process on a bounded source such as a TimeSeries. In either case we might want to use Pond to manage our situation.\n\n## Preparing the data\n\nLet\'s say we want to write a batch task to do this, where we read approximately a days data from some storage to process.\n\nOur initial goal is to collect our data into a `TimeSeries` object. From there we can process it either with the built in methods or by feeding it through a pipeline.\n\nTo collect data into a TimeSeries object we would generally map it from our native format into an object such as the following:\n\n```js\n    const trafficData = {\n        name: "ames-lab-traffic",\n        columns: ["time", "in"],\n        points: [\n            [[1468886425000, 30149747500170],\n            [1468886456000, 30149754529057],\n            [1468886487000, 30149765964686],\n            [1468886517000, 30149774808349],\n            [1468886548000, 30149786620883],\n            [1468886578000, 30149797218334],\n            [1468886609000, 30149806694886],\n            [1468886639000, 30149814247765],\n            [1468886640000, null],\n            [1468886670000, 30149836244496],\n            [1468886700000, 30149845139313],\n            [1468886731000, 30149853210590],\n            [1468886761000, 30149861469019]\n            ...],\n        ]\n    }\n```\n\nAnd then construct a TimeSeries from that:\n\n```js\n    const traffic = new TimeSeries(trafficData);\n```\n\n## Alignment\n\nNext we want to get our data onto exact 30 second boundaries. This is now a simple task of calling the align() function on the TimeSeries.\n\n```js\n    const aligned = traffic.align({\n        fieldSpec: "in",\n        period: "30s",\n        method: "linear",\n        limit: 2\n    });\n```\n\nSome things to note here: firstly, we refer to the "in" column with the fieldSpec. If we had both the "in" and "out" values in our TimeSeries we could have used a fieldSpec of ["in", "out"]. Secondly, we specify the alignment boundaries with the period, in this case we want to align the data to our 30 second request rate. Thirdly, we use "linear" interpolation to determine the value of the counter ("in" value) at the boundaries. And finally, we set a limit to 2. This will cause minor gaps in the data to be filled, while larger outages are left null.\n\n## Rate (derivative)\n\nFinally, we want to calculate the traffic rate from the growing counter value.\n\nTimeSeries has a method for this too: rate(). It generates a new `TimeSeries` of `TimeRangeEvent` objects which contain the derivative between columns in two consecutive `Event` objects. The start and end time of the time range events correspond to the timestamps of the two events the calculation was derived from.\n\nThe primary use case for this was to generate rate data from monotonically increasing SNMP counter values like this:\n\n```js\n    const baseRate = aligned.rate({fieldSpec: "in", allowNegative: false});\n```\n\nNow we have the `baseRate` as a TimeSeries. We\'ve taken our raw counter data, done a linearly interpolated alignment to 30 second boundaries, and then calculate the rates by calculating the derivative between the aligned boundaries.\n\nNote that we also passed in `allowNegative` to be false. This will replace a negative change in the counter value to output a null instead of a rate. You could then use `fill()` to fill in that point, or leave it as a missing value.\n'},function(e,n){e.exports="## Glossary\n---\n\nThis guide contains a description of terms that are specific to Pond. Please let us know if there are terms in the API or documentation that need further explanation and we will update this document.\n\n---\n### Alignment\n\nThis refers to taking a sequence of data that may be irregular in timestamps and converting that to fall on specific time boundaries. For instance you could have data at 1:31, 2:01, 2:34, and 3:01 and would like to align this to exact 30s boundaries (1:30, 2:00, 2:30, and 3:00). Pond can do this with `TimeSeries.align()` or in a Pipeline, with a variety of options for how the incoming data is interpolated to the aligned output.\n\n---\n### Collapsing\n\nThis is the process of taking multiple columns of data and turning it into a single column.\n\n---\n### Fields: fieldSpec and fieldPath\n\nThere are some points to note about the nomenclature that the `pypond` and `pond` code bases use to refer to the \"columns of data\" in the time series event objects. This `TimeSeries`:\n\n```\nconst DATA = {\n    name: \"traffic\",\n    columns: [\"time\", \"value\", \"status\"],\n    points: [\n        [1400425947000, 52, \"ok\"],\n        [1400425948000, 18, \"ok\"],\n        [1400425949000, 26, \"fail\"],\n        [1400425950000, 93, \"offline\"]\n    ]\n};\n```\n\ncontains two **columns**: `value` and `status`.\n\nHowever this `TimeSeries`:\n\n```\nconst DATA_FLOW = {\n    name: \"traffic\",\n    columns: [\"time\", \"direction\"],\n    points: [\n        [1400425947000, {'in': 1, 'out': 2}],\n        [1400425948000, {'in': 3, 'out': 4}],\n        [1400425949000, {'in': 5, 'out': 6}],\n        [1400425950000, {'in': 7, 'out': 8}]\n    ]\n};\n```\n\ncontains only one column `direction`, but that column has two more columns - `in` and `out` - nested under it. In the following examples, these nested columns will be referred to as **deep paths**.\n\nWhen specifying columns to the methods that set, retrieve and manipulate data, we use two argument types: `fieldSpec` and `fieldPath`. They are similar yet different enough to warrant this document.\n\n#### fieldPath\n\nA `fieldPath` refers to a **single** column in a series. Any method that takes a `fieldPath` as an argument only acts on one column at a time. The value passed to this argument can be either a string, an array or `null`.\n\n##### String variant\n\nWhen a string is passed, it can be one of the following formats:\n\n * simple path - the name of a single \"top level\" column. In the `DATA` example above, this would be either `value` or `status`.\n * deep path - the path pointing to a single nested columns with each \"segment\" of the path delimited with a period. In the `DATA_FLOW` example above, the incoming data could be retrieved with `direction.in` as the `fieldPath`.\n\n##### List variant\n\nWhen a array is passed as a `fieldPath`, each element in the array is **a single segment of the path to a column**. So to compare with the string examples:\n\n * `['value']` would be equivalent to the string `value`.\n * `['direction', 'in']` would be equivalent to the string `direction.in`.\n\nThis is particularly important to note because **this behavior is different** than passing a list to a `fieldSpec` arg.\n\n##### `None`\n\nIf no `fieldPath` is specified (defaulting to `null`), then the default column `value` will be used.\n\n#### fieldSpec\n\nA `fieldSpec` refers to **one or more** columns in a series. When a method takes a `fieldSpec`, it may act on multiple columns in a `TimeSeries`. The value passed to this argument can be either a string, an array or `null`.\n\n##### String variant\n\nThe string variant is essentially identical to the `fieldPath` string variant - it is a path to a single column of one of the following formats:\n\n * simple path - the name of a single \"top level\" column. In the `DATA` example above, this would be either `value` or `status`.\n * deep path - the path pointing to a single nested columns with each \"segment\" of the path delimited with a period. In the `DATA_FLOW` example above, the incoming data could be retrieved with `direction.in` as the `fieldSpec`.\n\n##### List variant\n\nPassing a array to `fieldSpec` is different than the aforementioned behavior in that it is explicitly referring to **one or more columns**. Rather than each element being segments of a path, **each element is a full path to a single column**.\n\nUsing the previous examples:\n\n * `['in', 'out']` would act on both the `in` and `out` columns from the `DATA` example.\n * `['direction.in', 'direction.out']` - here each element is a fully formed \"deep path\" to the two data columns in the `DATA_FLOW` example.\n\nThe lists do not have to have more than one element: `['value'] == 'value'`.\n\nNOTE: accidentally passing this style of list to an arg that is actually a `fieldPath` will most likely result in an error. Passing something like `['in', 'out']` as a `fieldPath` will attempt to retrieve the nested column `in.out` which probably doesn't exist.\n\n##### `None`\n\nIf no `fieldSpec` is specified (defaulting to `null`), then the default column `value` will be used.\n\n#### fieldSpecList\n\nThis is a less common variant of the `fieldSpec`. It is used in the case where the method is going to **specifically act on multiple columns**, such as `TimeSeries.collapse()`, where an array is expected. Therefore its usage is identical to the array variant of `fieldSpec`.\n\n---\n### Index\n\nPond refers to certain standard time ranges, such as a particular hour, using an index. An index consists of two parts: a period such as \"this refers to a 6 hour period\", described with a string as \"6h\", and a position, which is a number that describes which 6 hour period in history we are referring to. An index such as \"6h-1234\" would be the 1234th 6hr period from the UNIX epoch (Jan 1st, 1970, UTC time). This string is typically referred to as an \"Index String\". This is distinct from an Index, which is an object wrapping of this string to allow easier handling of the index.\n\n---\n### Missing values\n\nIn pond, a missing value is a `null`, `undefined` or `NaN`. That is distinct from a point on a TimeSeries that doesn't exist at all. You can use `fill()` to fill in missing values, while you might use `align()` to add new points where points where expected but non-existent.\n\nAdditionally, if you are aggregating over a `Collection` or `TimeSeries`, you can supply filter functions that will treat missing values in a variety of ways.\n\n---\n### Pipeline\n\nThis is Pond's main processing mechanism. It is an event based system that can process either streaming events, or batch process bounded collections of events such as a TimeSeries.\n\n---\n### Processor\n\nA node generated internally in a Pipeline. These nodes take events in and produce events out. You don't work with Processors directly. Instead you use the chainable methods on the Pipeline.\n\n---\n### Roll-ups\n\nWe use the term roll-up when building summary TimeSeries. An example would be turning 30 second measurement data into a TimeSeries of 5 minute average summaries.\n\nYou can perform common roll-ups directly on a TimeSeries, or as part of a Pipeline.\n\n"},function(e,n){e.exports='\n# Pond.js\n\n---\n\nPond.js is a library built on top of [immutable.js](https://facebook.github.io/immutable-js/) to provide time-based data structures, serialization and processing within our tools.\n\nFor data structures it unifies the use of time ranges, events and collections and time series. For processing it provides a chained pipeline interface to aggregate, collect and process batches or streams of events.\n\nWe are still developing Pond.js as it integrates further into our code, so it may change or be incomplete in parts. That said, it has a growing collection of tests and we will strive not to break those without careful consideration.\n\n## Rational\n\n[ESnet](http://www.es.net) runs a large research network for the US Department of Energy. Our tools consume events and time series data throughout our network visualization applications and data processing chains. As our tool set grew, so did our need to build a Javascript library to work with this type of data that was consistent and dependable. The alternative for us has been to pass ad-hoc data structures between the server and the client, making all elements of the system much more complicated. Not only do we need to deal with different formats at all layers of the system, we also repeat our processing code over and over. Pond.js was built to address these pain points.\n\nThe result might be as simple as comparing two time ranges:\n\n```js\nconst timerange = timerange1.intersection(timerange2);\ntimerange.asRelativeString();  // "a few seconds ago to a month ago"\n```\n\nOr simply getting the average value in a timeseries:\n\n```js\ntimeseries.avg("sensor");\n```\n\nOr quickly performing aggregations on a timeseries:\n\n```js\nconst timeseries = new TimeSeries(weatherData);\nconst dailyAvg = timeseries.fixedWindowRollup("1d", {value: avg});\n```\n\nOr much higher level batch or stream processing using the Pipeline API:\n\n```js\nconst p = Pipeline()\n    .from(timeseries)\n    .take(10)\n    .groupBy(e => e.value() > 65 ? "high" : "low")\n    .emitOn("flush")\n    .to(CollectionOut, (collection, windowKey, groupByKey) => {\n        result[groupByKey] = collection;\n    }, true);\n```\n\n## What does it do?\n\nPond has three main goals:\n\n 1. **Data Structures** - Provide a robust set of time-related data structures, built on Immutable.js\n 2. **Serialization** - Provide serialization of these structures for transmission across the wire as Avro buffers or strings, including to our Python version of this library\n 3. **Processing** - Provide processing operations to work with those structures\n\nHere is a summary of what is provided:\n\n* **TimeRange** - a begin and end time, packaged together\n* **Index** - A time range denoted by a string, for example "5m-1234" is a specific 5 minute time range, or "2014-09" is September 2014\n* **TimeEvent** - A timestamp and a data object packaged together\n* **IndexedEvents** - An Index and a data object packaged together. e.g. 1hr max value\n* **TimeRangeEvents** - A TimeRange and a data object packaged together. e.g. outage event occurred from 9:10am until 10:15am\n\nAnd forming together collections of events:\n\n* **Collection** - A bag of events, with a helpful set of methods for operating on those events\n* **TimeSeries** - An ordered Collection of Events and associated meta data, along with operations to roll-up, aggregate, break apart and recombine TimeSeries.\n\nAnd then high level processing via pipelines:\n\n* **Pipeline** - Stream or batch style processing of events to build more complex processing operations, either on fixed TimeSeries or incoming realtime data. Supports windowing, grouping and aggregation.\n\n# Contributing\n\nRead the [contribution guidelines](./CONTRIBUTING.md).\n\nThe library has a large and growing Jest test suite. To run the tests interactively, use:\n\n    npm test\n\n\n# License\n\nThis code is distributed under a BSD style license, see the LICENSE file for complete information.\n\n# Copyright\n\nESnet Timeseries Library ("Pond.js"), Copyright (c) 2015-2016, The Regents of the University of California, through Lawrence Berkeley National Laboratory (subject to receipt of any required approvals from the U.S. Dept. of Energy).  All rights reserved.\n \nIf you have questions about your rights to use or distribute this software, please contact Berkeley Lab\'s Innovation & Partnerships Office at  IPO@lbl.gov.\n \nNOTICE.  This software is owned by the U.S. Department of Energy.  As such, the U.S. Government has been granted for itself and others acting on its behalf a paid-up, nonexclusive, irrevocable, worldwide license in the Software to reproduce, prepare derivative works, and perform publicly and display publicly.  Beginning five (5) years after the date permission to assert copyright is obtained from the U.S. Department of Energy, and subject to any subsequent five (5) year renewals, the U.S. Government is granted for itself and others acting on its behalf a paid-up, nonexclusive, irrevocable, worldwide license in the Software to reproduce, prepare derivative works, distribute copies to the public, perform publicly and display publicly, and to permit others to do so.\n'},function(e,n){e.exports='## Handling missing data\n---\nReal world data can have gaps, bad names, or occur at irregular intervals. Pond.js contains several methods to adjust or sanitize a series of less than optimal data. As with all other mutation operations in pond.js, these methods will return new `Event` objects, new `Collections` and new `TimeSeries` as apropos.\n\n### Filling\n\nData might contain missing or otherwise invalid values. `TimeSeries.fill()` can perform a variety of fill operations to smooth or make sure that the data can be processed in math operations without blowing up.\n\nIn pond.js, a value is considered "invalid" if it `undefined`, `null` or `NaN`. In PyPond `None`, a `NaN` value, or an empty string are considered missing.\n\n#### Usage\n\nThe `fill()` method on a TimeSeries takes a single `options` argument. Options are:\n* `fieldSpec` - is the same as it is in the rest of the code - a string or list of strings denoting "columns" in the data. It can point `to.deep.values` using the usual dot notation.\n* `method` - denotes the fill or interpolation method to use. Valid values are **zero**, **pad** and **linear**.\n* `limit` - a limit on the number of events that will be filled and returned in the new `TimeSeries`. The default is to fill all the events with no limit.\n\nA complete sample usage could look like this:\n\n```\n    const ts = new TimeSeries(data);\n\n    const filled = ts.fill({\n        fieldSpec: [\'direction.in\', \'direction.out\'],\n        method: "linear",\n        limit=6\n    });\n```\n\n##### The method option\n\nThere are three fill methods:\n\n* `zero` - the default - will transform any invalid value to a zero.\n* `pad` - replaces an invalid value with the the previous good value: `[1, null, null, 3]` becomes `[1, 1, 1, 3]`.\n* `linear` - interpolate the gaps based on the surrounding good values: `[1, null, null, null, 3]` becomes `[1, 1.5, 2, 2.5, 3]`.\n\nNote: neither `pad` or `linear` can fill the first value in a series if it is invalid, and they can\'t start filling until good value has been seen: `[null, null, null, 1, 2, 3]` would remain unchanged. Similarly, `linear` can not fill the last value in a series.\n\n##### The `limit` option\n\nThe optional `limit` controls how many values will be filled before it gives up and starts returning the invalid data until a valid value is seen again.\n\nThere might be a situation where it makes sense to fill in a couple of missing values, but no sense to pad out long spans of missing data. This options sets the limit of the number of missing values that will be filled - or in the case of `linear` *attempt* to be filled - before it just starts returning invalid data until the next valid value is seen.\n\nSo given `limit: 2` the following values will be filled in the following ways:\n\n```\nOriginal:\n    [1, null, null, null, 5, 6, 7]\n\nZero:\n    [1, 0, 0, null, 5, 6, 7]\n\nPad:\n    [1, 1, 1, null, 5, 6, 7]\n\nLinear:\n    [1, null, null, null, 5, 6, 7]\n```\n\nUsing methods `zero` and `pad` the first two missing values are filled and the third is skipped. When using the `linear` method, nothing gets filled because a valid value has not been seen before the limit has been reached, so it just gives up and returns the missing data.\n\nWhen filling multiple columns, the count is maintained on a per-column basis.  So given the following data:\n\n```\n    const data = {\n        name: "traffic",\n        columns: ["time", "direction"],\n        points: [\n            [1400425947000, {"in": 1, "out": null}],\n            [1400425948000, {"in": null, "out": null}],\n            [1400425949000, {"in": null, "out": null}],\n            [1400425950000, {"in": 3, "out": 8}],\n            [1400425960000, {"in": null, "out": null}],\n            [1400425970000, {"in": null, "out": 12}],\n            [1400425980000, {"in": null, "out": 13}],\n            [1400425990000, {"in": 7, "out": null}],\n            [1400426000000, {"in": 8, "out": null}],\n            [1400426010000, {"in": 9, "out": null}],\n            [1400426020000, {"in": 10, "out": null}],\n        ]\n    }\n```\n\nThe `in` and `out` sub-columns will be counted and filled independently of each other.\n\nIf `limit` is not set, no limits will be placed on the fill and all values will be filled as apropos to the selected method.\n\n##### Constructing `linear` fill `Pipeline` chains\n\n`TimeSeries.fill()` will be the common entry point for the `Filler`, but a `Pipeline` can be constructed as well. Even though the default behavior of `TimeSeries.fill()` applies to all fill methods, the `linear` fill logic is somewhat different than the `zero` and `pad` methods. Note the following points when creating your own `method: \'linear\'` processing chain.\n\n* When constructing a `Pipeline` to do a `linear` fill on multiple columns, chain them together like this rather than passing in a `field_spec` that is a list of columns:\n```\n    const pipeline = Pipeline()\n        .fromSource(ts)\n        .fill({fieldSpec: "direction.in", method: "linear"})\n        .fill(fieldSpec: "direction.out", method: "linear"})\n        .toKeyedCollections()\n```\n* If a non numeric value is encountered when doing a `linear` fill, a console.warn will be issued and that column will not be processed.\n* When using an unbounded input (like `Stream`), it is a best practice to set a limit using the optional `limit`. This will ensure events will continue being emitted if the data hits a long run of missing values.\n* When using an streaming source, make sure to shut it down "cleanly" using `.stop()`. This will ensure `.flush()` is called so any unfilled cached events are emitted.\n\n### Alignment of data\n\nThe align processor takes a `TimeSeries` of events that might come in with timestamps at uneven intervals and produces a new series of those points are aligned on precise time window boundaries.  A series containing four events with following timestamps:\n\n```\n0:40\n1:05\n1:45\n2:10\n```\n\nGiven a period of `1m` (every one minute), a new series with two events at the following times will be produced:\n\n```\n1:00\n2:00\n```\n\nOnly a series of `Event` objects can be aligned. `IndexedEvent` objects are basically already aligned and it makes no sense in the case of a `TimeRangeEvent`.\n\nIt should also be noted that the emitted/aligned event will only contain the fields that alignment was requested on. Which is to say if you have two columns, `in` and `out`, and only request to align the `in` column, the `out` value will not be contained in the emitted event.\n\n#### Usage\n\nThe full argument usage of the align method:\n\n```\n    const ts = TimeSeries(data)\n    const aligned = ts.align({\n        fieldSpec: ["in", "out"],\n        period: "1m",\n        method: "linear",\n        limit: 2\n    });\n```\n\n* `fieldSpec` - indicates which fields should be interpolated by the selected `method`. Typical usage of this option type. If not supplied, then the default field `value` will be used.\n* `period` - an integer and the usual `s/m/h/d` notation like `1m`, `30s`, `6h`, etc. The emitted events will be emitted on the indicated boundaries. Due to the nature of the interpolation, one would want to use a window close to the frequency of the events. It would make little sense to set a window of `5h` on hourly data, etc.\n* `method` - the interpolation method to be used: `linear` (the default) and `hold`.\n* `limit` - sets a limit on the number of boundary interpolated events will be produced. If `limit: 2, period: \'1m\'` and two events come in at the following times:\n\n```\n0:45\n3:15\n```\n\nThat would normally produce events on three alignment boundaries `1:00, 2:00 and 3:00` and that exceeds the `limit` so those events will have `null` as a value instead of an interpolated value.\n\n#### Interpolation methods\n\n##### Linear\n\nThis is the default method. It uses simple linear interpolation between values in `Event` objects to derive new values on to the alignment boundaries. Interpolation occurs between the last event before the boundary and the first point after. Interpolation can occur across multiple boundaries at once.\n\n##### Hold\n\nThis is a much simpler method. It just fills the selected field(s) with the corresponding value from the previous event.\n\n'},function(e,n){e.exports="## Processing pipelines\n---\n\nIn this guide we dig into the processing capabilities of Pond.\n\nWhile Pond started life as a data structure library, as it grew up we discovered that we needed the ability to perform operations on the data structures we had built. We started with simple functions such as asking a TimeSeries for its average value for a given column. Then we added functions for splitting and composing TimeSeries back together. Then we wanted to do more complicated things like filtering, fill missing values, or aggregating events over time windows.\n\nAs a parallel requirement we were interested in providing a TimeSeries orientated approach to processing data on the cloud. Our first venture into this was with AWS Kinesis, which we wanted to process events in TimeSeries specific ways and then output new events as a result.\n\nFrom the need for better framework to build up our TimeSeries processing capabilities, combined with our need to process streams of events, grew a pipeline mechanism in Pond.\n\n### Pipelines\n\nThe Pipeline was developed as an event processing chain from the beginning. Events are passed in the top and new events are emitted at the bottom. All processing operations that a chain can produce are carried out this way.\n\nA pipeline is composed of three parts: an input, a chain of processors, and an output. Let's take those one at a time.\n\n#### Sources\n\nAn input source can be something like a TimeSeries itself, some other bounded source, such as a file, or a stream.\n\nIf the input is a stream, then that source will inject events into the processing chain. The built in `Stream` is a basic stream where the user can `addEvent()` to it manually and those events are forwarded into the processing chain. A more sophisticated streaming source might be collecting events off a PubSub subscription and injecting events into the processing chain automatically. Here's a simple example:\n\n```\n    const stream = new Stream();\n\n    Pipeline()\n        .from(stream)\n        .to(CollectionOut, c => out = c);\n\n    stream.addEvent(evt1);\n    ...\n```\n\nIf the input is a bounded source, then events will be created by traversing the source from beginning to end, with each event in the source injected down the processing chain. This happens when an output is attached to the chain, not when the source is defined on the pipeline. As the output is attached a chain is constructed from the path of nodes leading back from the output to the source and events are batched though this chain until complete, with the result accumulated at the output.\n\nFinally, if the input is a TimeSeries, this is just a special case of a bounded source.\n\n```\n    Pipeline()\n        .from(timeseries)\n        .select(\"in\")\n        .to(CollectionOut, c => result = new TimeSeries({name: \"newTimeseries\", collection: c}));\n```\n\n#### Processing chains\n\nPond contains a growing collection of processing nodes. These nodes are constructed using chained methods on the pipeline itself. You do not need to initialize the processing nodes themselves manually. However, it's worth understanding that behind the scenes you are constructing a chain of processing nodes.\n\nAll processing nodes take incoming events and output new events. Events may be Pond TimeEvents, TimeRangeEvents or IndexedEvents, depending on the type of processor. For instance if you calculate the `rate()` (change over time) between incoming events, the output will be a TimeRangeEvent because the rate value applies to a time range. Events can be converted within the chain using the Converter node (`pipeline.asTimeEvents()`, `pipeline.asTimeRangeEvents()` and `pipeline.asIndexedEvents()`).\n\nCurrent processors:\n\n * **aggregate** - take a collection of events (defined by a group, or all events) and aggregate them down to a single event\n * **align** - interpolate events onto regular time boundaries (e.g. every 30 seconds)\n * **collapse** - take event fields and reduce them down to a single field using some reducer function\n * **fill** - fill in missing values in events (e.g. replace null values with linearly interpolated values from neighbor events)\n * **filter** - remove events from the stream using a filter function\n * **map** - remap an event's data to new data\n * **select** - select out certain fields in events\n * **take** - only allow a limited number of events to pass through the chain\n \nIn addition to defining the processing nodes via chained calls to the `pipeline` you can also set several types of state. For instance you can set a groupBy state (with `pipeline.groupBy()`) and this grouping will be held as state within the pipeline until a processing node needs to respect that. In this case an aggregation would respect that and output its result per grouping. States can be reset or changed further down the pipeline.\n\nTypes of state:\n\n * **groupBy** - define a way for future processors to group events together\n * **windowBy** - define a window (e.g. every 5 minutes) to group events\n * **emitOn** - define when events should be emitted from aggregations (e.g. on every event, or only when events move to the next window).\n\n#### Output\n\nThere are two general mechanisms for collecting the output of the processing chain. The first to be implemented was a callback style interface which let you provide a function that would be called with the result. Currently you can either output events or collections:\n\n```\n    Pipeline()\n        .from(stream)\n        .to(EventOut, event => {/* do something with event */});\n```\n\n```\n    Pipeline()\n        .from(stream)\n        .to(CollectionOut, collection => {/* do something with collection */});\n```\n\nIn some cases this is a very natural interface for an event processing chain like this one, and handles the case of the input being async or dealing with an ongoing stream perfectly. However, in many of our use cases, it was burdensome to place the users code into a callback when the pipeline was operating on a synchronous source anyway, such as a simple TimeSeries. So we added an alternative.\n\nIt is also possible to accumulate the result back on the pipeline itself and then return the result directly from the chain. To do this, use the outputs `Pipeline.toKeyedCollections()` and `Pipeline.toEventList()`. For example:\n\n```\n    const collections = Pipeline()\n        .from(timeseries)\n        ...\n        .toKeyedCollections();\n```\n\nHere the result is returned from the Pipeline chain, rather than the Pipeline object itself. This therefore ends the chain.\n\nAlso note: that this will not work with an async source!\n";
},function(e,n){e.exports='## Rollup example\n---\nIn this example we have an simulated incoming stream of measurements, represented by the dots. The visualization you see shows the 5 min aggregations (both 50th and 90th percentile) of the incoming stream as a green bar chart. We calculate this as described below.\n\n### Events\n\nTo do this, each event is generated semi-randomly, but they could be coming from a real source. We add a new Event for each minute, but emit 5 per second to speed up the simulation. Essentially we do this:\n\n```js\nimport { TimeEvent } from "pondjs";\n\nconst value = getRandomValue();\nconst time = getNextTime();\nconst event = new TimeEvent(t, value);\n```\n\nNow we want to do some things with that Event:\n\n * Store it, so we can show the scatter plot\n * Aggregate it to give us our 5 min average and maximum values\n\nTo store it, we put it into a circle buffer that keeps the last n Events. Otherwise we\'ll eventually kill the browser. The circle buffer is placed in the React component\'s state.\n\n### Aggregation\n\nFor the more interesting part, the aggregation, we need to setup up a couple of Pond Pipelines to do the work. Here\'s the 5 min aggregator that we setup:\n\n```js\n\nimport { Stream, Pipeline, EventOut, percentile } from "pondjs";\n\n...\n\nconst stream = new Stream();\n\nPipeline()\n    .from(stream)\n    .windowBy("5m")\n    .emitOn("discard")\n    .aggregate({\n        value: {value: percentile(90)}\n    })\n    .to(EventOut, event => {\n        // store the output events in our component state\n    });\n```\n\nThe Pipeline now just needs a feed of events added to the `stream` in order to process them into a new aggregated events. Each time one of these new events is emitted we take that from the callback defined in `to()` and place it into the component\'s state.\n\n\n```js\nstream.addEvent(event);\n```\n\n### Visualization with React\n\nThe first thing we need to do is turn our three event lists (the original events along with the two aggregated event streams) into `TimeSeries` objects which can then be passed to our charting code. Since we can construct `TimeSeries` object from a list of `Event`s, this is simply a matter of pulling the list from the circle buffer and giving it to the `TimeSeries` constructor.\n\nFor example, our 5 minute 50th percentiles:\n\n```js\nconst name = "5m-percentile-50";\nconst events = this.state.perc50Out.toArray(); // <- from circle buffer\nconst avgSeries = new TimeSeries({name, events});\n```\n\nNext we figure out the begin and end times for the chart. The chart expands outward until it gets to 3 hours and then pans with the new data. Once we calculate the beginTime and endTime we make a TimeRange to represent this range:\n\n```js\nconst timeRange = new TimeRange(beginTime, endTime);\n```\n\nFinally we `render()` the chart:\n\n```jsx\n    render() {\n        return (\n            <ChartContainer timeRange={timeRange}>\n                <ChartRow height="150">\n                    <YAxis\n                        id="y"\n                        label="Value"\n                        min={0} max={1500}\n                        type="linear" />\n                    <Charts>\n                        <BarChart\n                            axis="y"\n                            series={avgSeries}\n                            columns={["value"]} />\n                        <BarChart\n                            axis="y"\n                            series={maxSeries}\n                            columns={["value"]} />\n                        <ScatterChart\n                            axis="y"\n                            series={rawSeries} />\n                    </Charts>\n                </ChartRow>\n            </ChartContainer>\n        );\n    }\n```\n'},function(e,n){e.exports='## Getting started\n\n---\n\nPond will run in node.js or in the browser. Install from npm:\n\n```cmdline\nnpm install pondjs --save\n```\n\n### Client\n\nWhile Pond is written in ES6 the npm dist is transpiled to ES5 so it will run anywhere. To use it within a browser you will need to install it with npm and then build your source with Webpack, Browserify or something similar.\n\n### Server\n\nOn the server, it\'s best to use babel-node, though straight up node will generally work too.\n\nHere\'s a simple example, run with babel-node:\n\n    import { Index, TimeSeries } from "pondjs";\n\n    //Index example\n    let index = new Index("1d-12345");\n    console.log(index.asTimerange().humanize());\n\n    //Timeseries example\n    const data = {\n        "name": "traffic",\n        "columns": ["time", "value", "status"],\n        "points": [\n            [1400425947000, 52, "ok"],\n            [1400425948000, 18, "ok"],\n            [1400425949000, 26, "fail"],\n            [1400425950000, 93, "offline"],\n        ]\n    };\n\n    let series = new TimeSeries(data);\n    for (let i=0; i < series.size(); i++) {\n        console.log(series.at(i).toString());\n    }\n\n'},function(e,n,t){"use strict";e.exports=t(109)},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(6),r=(i(o),t(25)),a={contextTypes:{history:r.history},componentWillMount:function(){this.history=this.context.history}};n.default=a,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},r=t(1),a=i(r),s=t(91),l=i(s),c=a.default.createClass({displayName:"IndexLink",render:function(){return a.default.createElement(l.default,o({},this.props,{onlyActiveOnIndex:!0}))}});n.default=c,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(1),r=i(o),a=t(6),s=(i(a),t(8)),l=i(s),c=t(92),u=i(c),d=t(25),p=r.default.PropTypes,h=p.string,f=p.object,m=r.default.createClass({displayName:"IndexRedirect",statics:{createRouteFromReactElement:function(e,n){n&&(n.indexRoute=u.default.createRouteFromReactElement(e))}},propTypes:{to:h.isRequired,query:f,state:f,onEnter:d.falsy,children:d.falsy},render:function(){(0,l.default)(!1)}});n.default=m,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(1),r=i(o),a=t(6),s=(i(a),t(8)),l=i(s),c=t(18),u=t(25),d=r.default.PropTypes.func,p=r.default.createClass({displayName:"IndexRoute",statics:{createRouteFromReactElement:function(e,n){n&&(n.indexRoute=(0,c.createRouteFromReactElement)(e))}},propTypes:{path:u.falsy,component:u.component,components:u.components,getComponent:d,getComponents:d},render:function(){(0,l.default)(!1)}});n.default=p,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(6),r=(i(o),t(1)),a=i(r),s=t(8),l=i(s),c=a.default.PropTypes.object,u={contextTypes:{history:c.isRequired,route:c},propTypes:{route:c},componentDidMount:function(){this.routerWillLeave?void 0:(0,l.default)(!1);var e=this.props.route||this.context.route;e?void 0:(0,l.default)(!1),this._unlistenBeforeLeavingRoute=this.context.history.listenBeforeLeavingRoute(e,this.routerWillLeave)},componentWillUnmount:function(){this._unlistenBeforeLeavingRoute&&this._unlistenBeforeLeavingRoute()}};n.default=u,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(1),r=i(o),a=t(8),s=i(a),l=t(18),c=t(25),u=r.default.PropTypes,d=u.string,p=u.func,h=r.default.createClass({displayName:"Route",statics:{createRouteFromReactElement:l.createRouteFromReactElement},propTypes:{path:d,component:c.component,components:c.components,getComponent:p,getComponents:p},render:function(){(0,s.default)(!1)}});n.default=h,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(6),r=(i(o),t(1)),a=i(r),s=a.default.PropTypes.object,l={propTypes:{route:s.isRequired},childContextTypes:{route:s.isRequired},getChildContext:function(){return{route:this.props.route}},componentWillMount:function(){}};n.default=l,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n){var t={};for(var i in e)n.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}function r(e){return!e||!e.__v2_compatible__}function a(e){return e&&e.getCurrentLocation}n.__esModule=!0;var s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},l=t(52),c=i(l),u=t(29),d=i(u),p=t(8),h=i(p),f=t(1),m=i(f),g=t(57),v=i(g),y=t(25),b=t(41),T=i(b),w=t(18),E=t(93),C=t(6),S=(i(C),m.default.PropTypes),x=S.func,R=S.object,_=m.default.createClass({displayName:"Router",propTypes:{history:R,children:y.routes,routes:y.routes,render:x,createElement:x,onError:x,onUpdate:x,parseQueryString:x,stringifyQuery:x,matchContext:R},getDefaultProps:function(){return{render:function(e){return m.default.createElement(T.default,e)}}},getInitialState:function(){return{location:null,routes:null,params:null,components:null}},handleError:function(e){if(!this.props.onError)throw e;this.props.onError.call(this,e)},componentWillMount:function(){var e=this,n=this.props,t=(n.parseQueryString,n.stringifyQuery,this.createRouterObjects()),i=t.history,o=t.transitionManager,r=t.router;this._unlisten=o.listen(function(n,t){n?e.handleError(n):e.setState(t,e.props.onUpdate)}),this.history=i,this.router=r},createRouterObjects:function(){var e=this.props.matchContext;if(e)return e;var n=this.props.history,t=this.props,i=t.routes,o=t.children;a(n)?(0,h.default)(!1):void 0,r(n)&&(n=this.wrapDeprecatedHistory(n));var s=(0,v.default)(n,(0,w.createRoutes)(i||o)),l=(0,E.createRouterObject)(n,s),c=(0,E.createRoutingHistory)(n,s);return{history:c,transitionManager:s,router:l}},wrapDeprecatedHistory:function(e){var n=this.props,t=n.parseQueryString,i=n.stringifyQuery,o=void 0;return o=e?function(){return e}:c.default,(0,d.default)(o)({parseQueryString:t,stringifyQuery:i})},componentWillReceiveProps:function(e){},componentWillUnmount:function(){this._unlisten&&this._unlisten()},render:function e(){var n=this.state,t=n.location,i=n.routes,r=n.params,a=n.components,l=this.props,c=l.createElement,e=l.render,u=o(l,["createElement","render"]);return null==t?null:(Object.keys(_.propTypes).forEach(function(e){return delete u[e]}),e(s({},u,{history:this.history,router:this.router,location:t,routes:i,params:r,components:a,createElement:c})))}});n.default=_,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(1),r=i(o),a=t(41),s=i(a),l=t(6),c=(i(l),r.default.createClass({displayName:"RoutingContext",componentWillMount:function(){},render:function(){return r.default.createElement(s.default,this.props)}}));n.default=c,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n,t){return function(){for(var i=arguments.length,o=Array(i),r=0;r<i;r++)o[r]=arguments[r];if(e.apply(n,o),e.length<t){var a=o[o.length-1];a()}}}function r(e){return e.reduce(function(e,n){return n.onEnter&&e.push(o(n.onEnter,n,3)),e},[])}function a(e){return e.reduce(function(e,n){return n.onChange&&e.push(o(n.onChange,n,4)),e},[])}function s(e,n,t){function i(e,n,t){return n?void(o={pathname:n,query:t,state:e}):void(o=e)}if(!e)return void t();var o=void 0;(0,d.loopAsync)(e,function(e,t,r){n(e,i,function(e){e||o?r(e,o):t()})},t)}function l(e,n,t){var i=r(e);return s(i.length,function(e,t,o){i[e](n,t,o)},t)}function c(e,n,t,i){var o=a(e);return s(o.length,function(e,i,r){o[e](n,t,i,r)},i)}function u(e,n){for(var t=0,i=e.length;t<i;++t)e[t].onLeave&&e[t].onLeave.call(e[t],n)}n.__esModule=!0,n.runEnterHooks=l,n.runChangeHooks=c,n.runLeaveHooks=u;var d=t(55),p=t(6);i(p)},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},r=t(1),a=i(r),s=t(41),l=i(s),c=t(6);i(c);n.default=function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];var i=n.map(function(e){return e.renderRouterContext}).filter(Boolean),s=n.map(function(e){return e.renderRouteComponent}).filter(Boolean),c=function(){var e=arguments.length<=0||void 0===arguments[0]?r.createElement:arguments[0];return function(n,t){return s.reduceRight(function(e,n){return n(e,t)},e(n,t))}};return function(e){return i.reduceRight(function(n,t){return t(n,e)},a.default.createElement(l.default,o({},e,{createElement:c(e.createElement)})))}},e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(85),r=i(o),a=t(95),s=i(a);n.default=(0,s.default)(r.default),e.exports=n.default},function(e,n,t){"use strict";function i(e,n,t){if(!e.path)return!1;var i=(0,r.getParamNames)(e.path);return i.some(function(e){return n.params[e]!==t.params[e]})}function o(e,n){var t=e&&e.routes,o=n.routes,r=void 0,a=void 0,s=void 0;return t?!function(){var l=!1;r=t.filter(function(t){if(l)return!0;var r=o.indexOf(t)===-1||i(t,e,n);return r&&(l=!0),r}),r.reverse(),s=[],a=[],o.forEach(function(e){var n=t.indexOf(e)===-1,i=r.indexOf(e)!==-1;n||i?s.push(e):a.push(e)})}():(r=[],a=[],s=o),{leaveRoutes:r,changeRoutes:a,enterRoutes:s}}n.__esModule=!0;var r=t(30);n.default=o,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n,t){if(n.component||n.components)return void t(null,n.component||n.components);var i=n.getComponent||n.getComponents;if(!i)return void t();var o=e.location,r=(0,l.default)(e,o);i.call(n,r,t)}function r(e,n){(0,a.mapAsync)(e.routes,function(n,t,i){o(e,n,i)},n)}n.__esModule=!0;var a=t(55),s=t(97),l=i(s);n.default=r,e.exports=n.default},function(e,n,t){"use strict";function i(e,n){var t={};return e.path?((0,o.getParamNames)(e.path).forEach(function(e){Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])}),t):t}n.__esModule=!0;var o=t(30);n.default=i,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0;var o=t(52),r=i(o),a=t(95),s=i(a);n.default=(0,s.default)(r.default),e.exports=n.default},function(e,n,t){"use strict";function i(e,n){if(e==n)return!0;if(null==e||null==n)return!1;if(Array.isArray(e))return Array.isArray(n)&&e.length===n.length&&e.every(function(e,t){return i(e,n[t])});if("object"===("undefined"==typeof e?"undefined":l(e))){for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t))if(void 0===e[t]){if(void 0!==n[t])return!1}else{if(!Object.prototype.hasOwnProperty.call(n,t))return!1;if(!i(e[t],n[t]))return!1}return!0}return String(e)===String(n)}function o(e,n){return"/"!==n.charAt(0)&&(n="/"+n),"/"!==e.charAt(e.length-1)&&(e+="/"),"/"!==n.charAt(n.length-1)&&(n+="/"),n===e}function r(e,n,t){for(var i=e,o=[],r=[],a=0,s=n.length;a<s;++a){var l=n[a],u=l.path||"";if("/"===u.charAt(0)&&(i=e,o=[],r=[]),null!==i&&u){var d=(0,c.matchPattern)(u,i);if(d?(i=d.remainingPathname,o=[].concat(o,d.paramNames),r=[].concat(r,d.paramValues)):i=null,""===i)return o.every(function(e,n){return String(r[n])===String(t[e])})}}return!1}function a(e,n){return null==n?null==e:null==e||i(e,n)}function s(e,n,t,i,s){var l=e.pathname,c=e.query;return null!=t&&("/"!==l.charAt(0)&&(l="/"+l),!!(o(l,t.pathname)||!n&&r(l,i,s))&&a(c,t.query))}n.__esModule=!0;var l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};n.default=s;var c=t(30);e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n){var t={};for(var i in e)n.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}function r(e,n){var t=e.history,i=e.routes,r=e.location,l=o(e,["history","routes","location"]);t||r?void 0:(0,c.default)(!1),t=t?t:(0,d.default)(l);var u=(0,h.default)(t,(0,f.createRoutes)(i)),p=void 0;r?r=t.createLocation(r):p=t.listen(function(e){r=e});var g=(0,m.createRouterObject)(t,u);t=(0,m.createRoutingHistory)(t,u),u.match(r,function(e,i,o){n(e,i&&g.createLocation(i,s.REPLACE),o&&a({},o,{history:t,router:g,matchContext:{history:t,transitionManager:u,router:g}})),p&&p()})}n.__esModule=!0;var a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},s=t(22),l=t(8),c=i(l),u=t(94),d=i(u),p=t(57),h=i(p),f=t(18),m=t(93);n.default=r,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n,t,i,o){if(e.childRoutes)return[null,e.childRoutes];if(!e.getChildRoutes)return[];var r=!0,a=void 0,l={location:n,params:s(t,i)},c=(0,f.default)(l,n);return e.getChildRoutes(c,function(e,n){return n=!e&&(0,v.createRoutes)(n),r?void(a=[e,n]):void o(e,n)}),r=!1,a}function r(e,n,t,i,o){if(e.indexRoute)o(null,e.indexRoute);else if(e.getIndexRoute){var a={location:n,params:s(t,i)},l=(0,f.default)(a,n);e.getIndexRoute(l,function(e,n){o(e,!e&&(0,v.createRoutes)(n)[0])})}else e.childRoutes?!function(){var a=e.childRoutes.filter(function(e){return!e.path});(0,p.loopAsync)(a.length,function(e,o,s){r(a[e],n,t,i,function(n,t){if(n||t){var i=[a[e]].concat(Array.isArray(t)?t:[t]);s(n,i)}else o()})},function(e,n){o(null,n)})}():o()}function a(e,n,t){return n.reduce(function(e,n,i){var o=t&&t[i];return Array.isArray(e[n])?e[n].push(o):n in e?e[n]=[e[n],o]:e[n]=o,e},e)}function s(e,n){return a({},e,n)}function l(e,n,t,i,a,l){var u=e.path||"";if("/"===u.charAt(0)&&(t=n.pathname,i=[],a=[]),null!==t&&u){try{var p=(0,m.matchPattern)(u,t);p?(t=p.remainingPathname,i=[].concat(i,p.paramNames),a=[].concat(a,p.paramValues)):t=null}catch(h){l(h)}if(""===t){var f=function(){var t={routes:[e],params:s(i,a)};return r(e,n,i,a,function(e,n){if(e)l(e);else{if(Array.isArray(n)){var i;(i=t.routes).push.apply(i,n)}else n&&t.routes.push(n);l(null,t)}}),{v:void 0}}();if("object"===("undefined"==typeof f?"undefined":d(f)))return f.v}}if(null!=t||e.childRoutes){var g=function(o,r){o?l(o):r?c(r,n,function(n,t){n?l(n):t?(t.routes.unshift(e),l(null,t)):l()},t,i,a):l()},v=o(e,n,i,a,g);v&&g.apply(void 0,v)}else l()}function c(e,n,t,i){var o=arguments.length<=4||void 0===arguments[4]?[]:arguments[4],r=arguments.length<=5||void 0===arguments[5]?[]:arguments[5];void 0===i&&("/"!==n.pathname.charAt(0)&&(n=u({},n,{pathname:"/"+n.pathname})),i=n.pathname),(0,p.loopAsync)(e.length,function(t,a,s){l(e[t],n,i,o,r,function(e,n){e||n?s(e,n):a()})},t)}n.__esModule=!0;var u=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};n.default=c;var p=t(55),h=t(97),f=i(h),m=t(30),g=t(6),v=(i(g),t(18));e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n){var t={};for(var i in e)n.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}function r(e){return function(){var n=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],t=n.routes,i=o(n,["routes"]),r=(0,l.default)(e)(i),s=(0,u.default)(r,t);return a({},r,s)}}n.__esModule=!0;var a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},s=t(29),l=i(s),c=t(57),u=i(c),d=t(6);i(d);n.default=r,e.exports=n.default},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){return e.displayName||e.name||"Component"}function r(e,n){var t=n&&n.withRef,i=u.default.createClass({displayName:"WithRouter",contextTypes:{router:h.routerShape},propTypes:{router:h.routerShape},getWrappedInstance:function(){return t?void 0:(0,l.default)(!1),this.wrappedInstance},render:function(){var n=this,i=this.props.router||this.context.router,o=a({},this.props,{router:i});return t&&(o.ref=function(e){n.wrappedInstance=e}),u.default.createElement(e,o)}});return i.displayName="withRouter("+o(e)+")",i.WrappedComponent=e,(0,p.default)(i,e)}n.__esModule=!0;var a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};n.default=r;var s=t(8),l=i(s),c=t(1),u=i(c),d=t(161),p=i(d),h=t(56);e.exports=n.default},13,function(e,n,t){"undefined"==typeof Promise&&(t(234).enable(),window.Promise=t(233)),t(235),Object.assign=t(232)},function(e,n){(function(n){"use strict";function t(e){s.length||(a(),l=!0),s[s.length]=e}function i(){for(;c<s.length;){var e=c;if(c+=1,s[e].call(),c>u){for(var n=0,t=s.length-c;n<t;n++)s[n]=s[n+c];s.length-=c,c=0}}s.length=0,c=0,l=!1}function o(e){var n=1,t=new d(e),i=document.createTextNode("");return t.observe(i,{characterData:!0}),function(){n=-n,i.data=n}}function r(e){return function(){function n(){clearTimeout(t),clearInterval(i),e()}var t=setTimeout(n,0),i=setInterval(n,50)}}e.exports=t;var a,s=[],l=!1,c=0,u=1024,d=n.MutationObserver||n.WebKitMutationObserver;a="function"==typeof d?o(i):r(i),t.requestFlush=a,t.makeRequestCallFromTimer=r}).call(n,function(){return this}())},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}var o=t(1),r=i(o),a=t(182),s=i(a),l=t(96),c=t(160);t(227);var u=t(208),d=i(u),p=t(221),h=i(p),f=t(225),m=i(f),g=t(224),v=i(g),y=t(222),b=i(y),T=t(218),w=i(T),E=t(219),C=i(E),S=t(220),x=i(S),R=t(223),_=i(R),P=t(215),k=i(P),A=t(211),I=i(A),N=t(210),D=i(N),O=t(214),M=i(O),L=t(216),j=i(L),B=t(212),q=i(B),U=t(209),F=i(U),K=t(217),H=i(K),V=t(213),W=i(V),z=(0,l.useRouterHistory)(c.createHashHistory)({queryKey:!1});s.default.render(r.default.createElement(l.Router,{history:z,onUpdate:function(){return window.scrollTo(0,0)}},r.default.createElement(l.Route,{path:"/",component:d.default},r.default.createElement(l.IndexRoute,{component:h.default}),r.default.createElement(l.Route,{path:"start",component:m.default}),r.default.createElement(l.Route,{path:"rollup",component:v.default}),r.default.createElement(l.Route,{path:"missing",component:b.default}),r.default.createElement(l.Route,{path:"changelog",component:w.default}),r.default.createElement(l.Route,{path:"glossary",component:x.default}),r.default.createElement(l.Route,{path:"processing",component:_.default}),r.default.createElement(l.Route,{path:"counter",component:C.default}),r.default.createElement(l.Route,{path:"timerange",component:k.default}),r.default.createElement(l.Route,{path:"index",component:I.default}),r.default.createElement(l.Route,{path:"event",component:D.default}),r.default.createElement(l.Route,{path:"timeevent",component:M.default}),r.default.createElement(l.Route,{path:"timerangeevent",component:j.default}),r.default.createElement(l.Route,{path:"indexedevent",component:q.default}),r.default.createElement(l.Route,{path:"collection",component:F.default}),r.default.createElement(l.Route,{path:"timeseries",component:H.default}),r.default.createElement(l.Route,{path:"pipeline",component:W.default}))),document.getElementById("root"))},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function r(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function a(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}Object.defineProperty(n,"__esModule",{value:!0});var s=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),l=t(1),c=i(l),u=t(96);t(226);var d=t(229),p=i(d),h=t(228),f=i(h),m=function(e){function n(){return o(this,n),r(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return a(n,e),s(n,[{key:"render",value:function(){return c.default.createElement("div",{className:"App"},c.default.createElement("nav",{className:"navbar navbar-inverse navbar-fixed-top"},c.default.createElement("div",{className:"container-fluid"},c.default.createElement("div",{className:"navbar-header"},c.default.createElement("button",{type:"button",className:"navbar-toggle collapsed","data-toggle":"collapse","data-target":"#navbar","aria-expanded":"false","aria-controls":"navbar"},c.default.createElement("span",{className:"sr-only"},"Toggle navigation"),c.default.createElement("span",{className:"icon-bar"}),c.default.createElement("span",{className:"icon-bar"}),c.default.createElement("span",{className:"icon-bar"})),c.default.createElement("a",{className:"navbar-brand",href:"#"},"Pond - Immutable Timeseries Abstractions")),c.default.createElement("div",{id:"navbar",className:"navbar-collapse collapse"},c.default.createElement("ul",{className:"nav navbar-nav navbar-right"},c.default.createElement("li",null,c.default.createElement("a",{href:"http://www.es.net"},c.default.createElement("img",{src:p.default,alt:"ESnet",width:"32px",height:"32px"}))),c.default.createElement("li",null,c.default.createElement("a",{href:"https://github.com/esnet/pond/"},c.default.createElement("img",{src:f.default,alt:"Github",width:"32px",height:"32px"}))))))),c.default.createElement("div",{className:"row"},c.default.createElement("div",{className:"col-sm-3 col-md-2 sidebar"},c.default.createElement("p",null),c.default.createElement("ul",{className:"nav nav-sidebar"},c.default.createElement("li",null,c.default.createElement(u.Link,{to:"/"},"Introduction")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"start"},"Getting started")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"processing"},"Processing pipelines")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"missing"},"Handling missing data")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"rollup"},"Rollup example")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"counter"},"SNMP Counter example")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"glossary"},"Glossary")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"changelog"},"Changelog"))),c.default.createElement("div",{className:"sidebar-heading"},"Structures"),c.default.createElement("ul",{className:"nav nav-sidebar"},c.default.createElement("li",null,c.default.createElement(u.Link,{to:"timerange"},"TimeRange")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"index"},"Index")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"event"},"Event")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"timeevent"},"TimeEvent")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"timerangeevent"},"TimeRangeEvent")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"indexedevent"},"IndexedEvent")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"collection"},"Collection")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"timeseries"},"TimeSeries")),c.default.createElement("li",null,c.default.createElement(u.Link,{to:"pipeline"},"Pipeline"))),c.default.createElement("div",{className:"sidebar-heading"},"Related Projects"),c.default.createElement("ul",{className:"nav nav-sidebar"},c.default.createElement("li",null,c.default.createElement("a",{href:"http://software.es.net/pypond/"},"PyPond")),c.default.createElement("li",null,c.default.createElement("a",{href:"http://software.es.net/react-timeseries-charts/"},"React Timeseries Charts")),c.default.createElement("li",null,c.default.createElement("a",{href:"http://software.es.net/react-network-diagrams/"},"React Network Diagrams"))),c.default.createElement("div",{className:"sidebar-heading"},"Links"),c.default.createElement("ul",{className:"nav nav-sidebar"},c.default.createElement("li",null,c.default.createElement("a",{href:"https://github.com/esnet/pond/"},"Pond.js on GitHub")),c.default.createElement("li",null,c.default.createElement("a",{href:"http://software.es.net/"},"ESnet Open Source")),c.default.createElement("li",null,c.default.createElement("a",{href:"https://www.es.net/"},"ESnet")))),c.default.createElement("div",{className:"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main"},this.props.children)))}}]),n}(l.Component);n.default=m},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(19),c=i(l),u=t(166),d=i(u);n.default=r.default.createClass({displayName:"Collection",mixins:[c.default],render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-12"},r.default.createElement(s.default,{source:d.default}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(19),c=i(l),u=t(167),d=i(u);n.default=r.default.createClass({displayName:"Event",mixins:[c.default],getInitialState:function(){return{markdown:d.default}},render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-12"},r.default.createElement(s.default,{source:this.state.markdown}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(19),c=i(l),u=t(168),d=i(u);n.default=r.default.createClass({displayName:"Index",mixins:[c.default],getInitialState:function(){return{markdown:d.default}},render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-12"},r.default.createElement(s.default,{source:this.state.markdown}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(19),c=i(l),u=t(169),d=i(u);n.default=r.default.createClass({displayName:"IndexedEvent",mixins:[c.default],render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-12"},r.default.createElement(s.default,{source:d.default}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(19),c=i(l),u=t(170),d=i(u);n.default=r.default.createClass({displayName:"Pipeline",mixins:[c.default],render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-12"},r.default.createElement(s.default,{source:d.default}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{
default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(19),c=i(l),u=t(171),d=i(u);n.default=r.default.createClass({displayName:"TimeEvent",mixins:[c.default],render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-12"},r.default.createElement(s.default,{source:d.default}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(19),c=i(l),u=t(172),d=i(u);n.default=r.default.createClass({displayName:"TimeRange",mixins:[c.default],getInitialState:function(){return{markdown:d.default}},render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-12"},r.default.createElement(s.default,{source:this.state.markdown}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(99),c=i(l),u=t(173),d=i(u);n.default=r.default.createClass({displayName:"TimeRangeEvent",mixins:[c.default],getInitialState:function(){return{markdown:d.default}},render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-12"},r.default.createElement(s.default,{source:this.state.markdown}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(99),c=i(l),u=t(174),d=i(u);n.default=r.default.createClass({displayName:"TimeSeries",mixins:[c.default],render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-12"},r.default.createElement(s.default,{source:d.default}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(165),c=i(l),u=t(20),d=i(u);n.default=r.default.createClass({displayName:"Change",render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-2"},r.default.createElement("img",{src:d.default,alt:"ESnet",width:120,height:120})),r.default.createElement("div",{className:"col-md-9"},r.default.createElement(s.default,{source:c.default}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(20),c=i(l),u=t(175),d=i(u);n.default=r.default.createClass({displayName:"Counters",render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-2"},r.default.createElement("img",{src:c.default,alt:"ESnet",width:120,height:120})),r.default.createElement("div",{className:"col-md-9"},r.default.createElement(s.default,{source:d.default}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(20),c=i(l),u=t(176),d=i(u);n.default=r.default.createClass({displayName:"Glossary",render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-2"},r.default.createElement("img",{src:c.default,alt:"ESnet",width:120,height:120})),r.default.createElement("div",{className:"col-md-9"},r.default.createElement(s.default,{source:d.default}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(20),c=i(l),u=t(177),d=i(u),p=t(19),h=i(p);n.default=r.default.createClass({displayName:"Intro",mixins:[h.default],render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-2"},r.default.createElement("img",{src:c.default,alt:"ESnet",width:120,height:120})),r.default.createElement("div",{className:"col-md-9"},r.default.createElement(s.default,{source:d.default}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(178),c=i(l),u=t(20),d=i(u);n.default=r.default.createClass({displayName:"Missing",render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-2"},r.default.createElement("img",{src:d.default,alt:"ESnet",width:120,height:120})),r.default.createElement("div",{className:"col-md-9"},r.default.createElement(s.default,{source:c.default}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(179),c=i(l),u=t(20),d=i(u);n.default=r.default.createClass({displayName:"Processing",render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-2"},r.default.createElement("img",{src:d.default,alt:"ESnet",width:120,height:120})),r.default.createElement("div",{className:"col-md-9"},r.default.createElement(s.default,{source:c.default}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(180),c=i(l),u=t(20),d=i(u);n.default=r.default.createClass({displayName:"Rollup",render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-2"},r.default.createElement("img",{src:d.default,alt:"ESnet",width:120,height:120})),r.default.createElement("div",{className:"col-md-9"},r.default.createElement(s.default,{source:c.default}))))}})},function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),r=i(o),a=t(5),s=i(a),l=t(20),c=i(l),u=t(181),d=i(u);n.default=r.default.createClass({displayName:"Start",render:function(){return r.default.createElement("div",null,r.default.createElement("div",{className:"row"},r.default.createElement("div",{className:"col-md-2"},r.default.createElement("img",{src:c.default,alt:"ESnet",width:120,height:120})),r.default.createElement("div",{className:"col-md-9"},r.default.createElement(s.default,{source:d.default}))))}})},function(e,n){},226,function(e,n,t){e.exports=t.p+"static/media/github.d56df49a.png"},function(e,n,t){e.exports=t.p+"static/media/logo.fe7ba602.png"},function(e,n){e.exports={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376}},function(e,n){e.exports={Aacute:"Á",aacute:"á",Acirc:"Â",acirc:"â",acute:"´",AElig:"Æ",aelig:"æ",Agrave:"À",agrave:"à",amp:"&",AMP:"&",Aring:"Å",aring:"å",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",brvbar:"¦",Ccedil:"Ç",ccedil:"ç",cedil:"¸",cent:"¢",copy:"©",COPY:"©",curren:"¤",deg:"°",divide:"÷",Eacute:"É",eacute:"é",Ecirc:"Ê",ecirc:"ê",Egrave:"È",egrave:"è",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",frac12:"½",frac14:"¼",frac34:"¾",gt:">",GT:">",Iacute:"Í",iacute:"í",Icirc:"Î",icirc:"î",iexcl:"¡",Igrave:"Ì",igrave:"ì",iquest:"¿",Iuml:"Ï",iuml:"ï",laquo:"«",lt:"<",LT:"<",macr:"¯",micro:"µ",middot:"·",nbsp:" ",not:"¬",Ntilde:"Ñ",ntilde:"ñ",Oacute:"Ó",oacute:"ó",Ocirc:"Ô",ocirc:"ô",Ograve:"Ò",ograve:"ò",ordf:"ª",ordm:"º",Oslash:"Ø",oslash:"ø",Otilde:"Õ",otilde:"õ",Ouml:"Ö",ouml:"ö",para:"¶",plusmn:"±",pound:"£",quot:'"',QUOT:'"',raquo:"»",reg:"®",REG:"®",sect:"§",shy:"­",sup1:"¹",sup2:"²",sup3:"³",szlig:"ß",THORN:"Þ",thorn:"þ",times:"×",Uacute:"Ú",uacute:"ú",Ucirc:"Û",ucirc:"û",Ugrave:"Ù",ugrave:"ù",uml:"¨",Uuml:"Ü",uuml:"ü",Yacute:"Ý",yacute:"ý",yen:"¥",yuml:"ÿ"}},function(e,n){"use strict";function t(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}function i(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;var i=Object.getOwnPropertyNames(n).map(function(e){return n[e]});if("0123456789"!==i.join(""))return!1;var o={};return"abcdefghijklmnopqrst".split("").forEach(function(e){o[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},o)).join("")}catch(r){return!1}}var o=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;e.exports=i()?Object.assign:function(e,n){for(var i,a,s=t(e),l=1;l<arguments.length;l++){i=Object(arguments[l]);for(var c in i)o.call(i,c)&&(s[c]=i[c]);if(Object.getOwnPropertySymbols){a=Object.getOwnPropertySymbols(i);for(var u=0;u<a.length;u++)r.call(i,a[u])&&(s[a[u]]=i[a[u]])}}return s}},function(e,n,t){"use strict";function i(e){var n=new o(o._61);return n._81=1,n._65=e,n}var o=t(102);e.exports=o;var r=i(!0),a=i(!1),s=i(null),l=i(void 0),c=i(0),u=i("");o.resolve=function(e){if(e instanceof o)return e;if(null===e)return s;if(void 0===e)return l;if(e===!0)return r;if(e===!1)return a;if(0===e)return c;if(""===e)return u;if("object"==typeof e||"function"==typeof e)try{var n=e.then;if("function"==typeof n)return new o(n.bind(e))}catch(t){return new o(function(e,n){n(t)})}return i(e)},o.all=function(e){var n=Array.prototype.slice.call(e);return new o(function(e,t){function i(a,s){if(s&&("object"==typeof s||"function"==typeof s)){if(s instanceof o&&s.then===o.prototype.then){for(;3===s._81;)s=s._65;return 1===s._81?i(a,s._65):(2===s._81&&t(s._65),void s.then(function(e){i(a,e)},t))}var l=s.then;if("function"==typeof l){var c=new o(l.bind(s));return void c.then(function(e){i(a,e)},t)}}n[a]=s,0===--r&&e(n)}if(0===n.length)return e([]);for(var r=n.length,a=0;a<n.length;a++)i(a,n[a])})},o.reject=function(e){return new o(function(n,t){t(e)})},o.race=function(e){return new o(function(n,t){e.forEach(function(e){o.resolve(e).then(n,t)})})},o.prototype.catch=function(e){return this.then(null,e)}},function(e,n,t){"use strict";function i(){c=!1,s._10=null,s._97=null}function o(e){function n(n){(e.allRejections||a(d[n].error,e.whitelist||l))&&(d[n].displayId=u++,e.onUnhandled?(d[n].logged=!0,e.onUnhandled(d[n].displayId,d[n].error)):(d[n].logged=!0,r(d[n].displayId,d[n].error)))}function t(n){d[n].logged&&(e.onHandled?e.onHandled(d[n].displayId,d[n].error):d[n].onUnhandled||(console.warn("Promise Rejection Handled (id: "+d[n].displayId+"):"),console.warn('  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id '+d[n].displayId+".")))}e=e||{},c&&i(),c=!0;var o=0,u=0,d={};s._10=function(e){2===e._81&&d[e._72]&&(d[e._72].logged?t(e._72):clearTimeout(d[e._72].timeout),delete d[e._72])},s._97=function(e,t){0===e._45&&(e._72=o++,d[e._72]={displayId:null,error:t,timeout:setTimeout(n.bind(null,e._72),a(t,l)?100:2e3),logged:!1})}}function r(e,n){console.warn("Possible Unhandled Promise Rejection (id: "+e+"):");var t=(n&&(n.stack||n))+"";t.split("\n").forEach(function(e){console.warn("  "+e)})}function a(e,n){return n.some(function(n){return e instanceof n})}var s=t(102),l=[ReferenceError,TypeError,RangeError],c=!1;n.disable=i,n.enable=o},function(e,n){!function(e){"use strict";function n(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function t(e){return"string"!=typeof e&&(e=String(e)),e}function i(e){var n={next:function(){var n=e.shift();return{done:void 0===n,value:n}}};return m.iterable&&(n[Symbol.iterator]=function(){return n}),n}function o(e){this.map={},e instanceof o?e.forEach(function(e,n){this.append(n,e)},this):e&&Object.getOwnPropertyNames(e).forEach(function(n){this.append(n,e[n])},this)}function r(e){return e.bodyUsed?Promise.reject(new TypeError("Already read")):void(e.bodyUsed=!0)}function a(e){return new Promise(function(n,t){e.onload=function(){n(e.result)},e.onerror=function(){t(e.error)}})}function s(e){var n=new FileReader;return n.readAsArrayBuffer(e),a(n)}function l(e){var n=new FileReader;return n.readAsText(e),a(n)}function c(){return this.bodyUsed=!1,this._initBody=function(e){if(this._bodyInit=e,"string"==typeof e)this._bodyText=e;else if(m.blob&&Blob.prototype.isPrototypeOf(e))this._bodyBlob=e;else if(m.formData&&FormData.prototype.isPrototypeOf(e))this._bodyFormData=e;else if(m.searchParams&&URLSearchParams.prototype.isPrototypeOf(e))this._bodyText=e.toString();else if(e){if(!m.arrayBuffer||!ArrayBuffer.prototype.isPrototypeOf(e))throw new Error("unsupported BodyInit type")}else this._bodyText="";this.headers.get("content-type")||("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):m.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},m.blob?(this.blob=function(){var e=r(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this.blob().then(s)},this.text=function(){var e=r(this);if(e)return e;if(this._bodyBlob)return l(this._bodyBlob);if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)}):this.text=function(){var e=r(this);return e?e:Promise.resolve(this._bodyText)},m.formData&&(this.formData=function(){return this.text().then(p)}),this.json=function(){return this.text().then(JSON.parse)},this}function u(e){var n=e.toUpperCase();return g.indexOf(n)>-1?n:e}function d(e,n){n=n||{};var t=n.body;if(d.prototype.isPrototypeOf(e)){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,n.headers||(this.headers=new o(e.headers)),this.method=e.method,this.mode=e.mode,t||(t=e._bodyInit,e.bodyUsed=!0)}else this.url=e;if(this.credentials=n.credentials||this.credentials||"omit",!n.headers&&this.headers||(this.headers=new o(n.headers)),this.method=u(n.method||this.method||"GET"),this.mode=n.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&t)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(t)}function p(e){var n=new FormData;return e.trim().split("&").forEach(function(e){if(e){var t=e.split("="),i=t.shift().replace(/\+/g," "),o=t.join("=").replace(/\+/g," ");n.append(decodeURIComponent(i),decodeURIComponent(o))}}),n}function h(e){var n=new o,t=(e.getAllResponseHeaders()||"").trim().split("\n");return t.forEach(function(e){var t=e.trim().split(":"),i=t.shift().trim(),o=t.join(":").trim();n.append(i,o)}),n}function f(e,n){n||(n={}),this.type="default",this.status=n.status,this.ok=this.status>=200&&this.status<300,this.statusText=n.statusText,this.headers=n.headers instanceof o?n.headers:new o(n.headers),this.url=n.url||"",this._initBody(e)}if(!e.fetch){var m={searchParams:"URLSearchParams"in e,iterable:"Symbol"in e&&"iterator"in Symbol,blob:"FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),formData:"FormData"in e,arrayBuffer:"ArrayBuffer"in e};o.prototype.append=function(e,i){e=n(e),i=t(i);var o=this.map[e];o||(o=[],this.map[e]=o),o.push(i)},o.prototype.delete=function(e){delete this.map[n(e)]},o.prototype.get=function(e){var t=this.map[n(e)];return t?t[0]:null},o.prototype.getAll=function(e){return this.map[n(e)]||[]},o.prototype.has=function(e){return this.map.hasOwnProperty(n(e))},o.prototype.set=function(e,i){this.map[n(e)]=[t(i)]},o.prototype.forEach=function(e,n){Object.getOwnPropertyNames(this.map).forEach(function(t){this.map[t].forEach(function(i){e.call(n,i,t,this)},this)},this)},o.prototype.keys=function(){var e=[];return this.forEach(function(n,t){e.push(t)}),i(e)},o.prototype.values=function(){var e=[];return this.forEach(function(n){e.push(n)}),i(e)},o.prototype.entries=function(){var e=[];return this.forEach(function(n,t){e.push([t,n])}),i(e)},m.iterable&&(o.prototype[Symbol.iterator]=o.prototype.entries);var g=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];d.prototype.clone=function(){return new d(this)},c.call(d.prototype),c.call(f.prototype),f.prototype.clone=function(){return new f(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new o(this.headers),url:this.url})},f.error=function(){var e=new f(null,{status:0,statusText:""});return e.type="error",e};var v=[301,302,303,307,308];f.redirect=function(e,n){if(v.indexOf(n)===-1)throw new RangeError("Invalid status code");return new f(null,{status:n,headers:{location:e}})},e.Headers=o,e.Request=d,e.Response=f,e.fetch=function(e,n){return new Promise(function(t,i){function o(){return"responseURL"in a?a.responseURL:/^X-Request-URL:/m.test(a.getAllResponseHeaders())?a.getResponseHeader("X-Request-URL"):void 0}var r;r=d.prototype.isPrototypeOf(e)&&!n?e:new d(e,n);var a=new XMLHttpRequest;a.onload=function(){var e={status:a.status,statusText:a.statusText,headers:h(a),url:o()},n="response"in a?a.response:a.responseText;t(new f(n,e))},a.onerror=function(){i(new TypeError("Network request failed"))},a.ontimeout=function(){i(new TypeError("Network request failed"))},a.open(r.method,r.url,!0),"include"===r.credentials&&(a.withCredentials=!0),"responseType"in a&&m.blob&&(a.responseType="blob"),r.headers.forEach(function(e,n){a.setRequestHeader(n,e)}),a.send("undefined"==typeof r._bodyInit?null:r._bodyInit)})},e.fetch.polyfill=!0}}("undefined"!=typeof self?self:this)},function(e,n,t){"use strict";var i=t(9),o=t(66),r=t(80),a={componentDidMount:function(){this.props.autoFocus&&r(o(this))}},s={Mixin:a,focusDOMComponent:function(){r(i.getNode(this._rootNodeID))}};e.exports=s},function(e,n,t){"use strict";function i(){var e=window.opera;return"object"==typeof e&&"function"==typeof e.version&&parseInt(e.version(),10)<=12}function o(e){return(e.ctrlKey||e.altKey||e.metaKey)&&!(e.ctrlKey&&e.altKey)}function r(e){switch(e){case P.topCompositionStart:return k.compositionStart;case P.topCompositionEnd:return k.compositionEnd;case P.topCompositionUpdate:return k.compositionUpdate}}function a(e,n){return e===P.topKeyDown&&n.keyCode===w}function s(e,n){switch(e){case P.topKeyUp:return T.indexOf(n.keyCode)!==-1;case P.topKeyDown:return n.keyCode!==w;case P.topKeyPress:case P.topMouseDown:case P.topBlur:return!0;default:return!1}}function l(e){var n=e.detail;return"object"==typeof n&&"data"in n?n.data:null}function c(e,n,t,i,o){var c,u;if(E?c=r(e):I?s(e,i)&&(c=k.compositionEnd):a(e,i)&&(c=k.compositionStart),!c)return null;x&&(I||c!==k.compositionStart?c===k.compositionEnd&&I&&(u=I.getData()):I=g.getPooled(n));var d=v.getPooled(c,t,i,o);if(u)d.data=u;else{var p=l(i);null!==p&&(d.data=p)}return f.accumulateTwoPhaseDispatches(d),d}function u(e,n){switch(e){case P.topCompositionEnd:return l(n);case P.topKeyPress:var t=n.which;return t!==R?null:(A=!0,_);case P.topTextInput:var i=n.data;return i===_&&A?null:i;default:return null}}function d(e,n){if(I){if(e===P.topCompositionEnd||s(e,n)){var t=I.getData();return g.release(I),I=null,t}return null}switch(e){case P.topPaste:return null;case P.topKeyPress:return n.which&&!o(n)?String.fromCharCode(n.which):null;case P.topCompositionEnd:return x?null:n.data;default:return null}}function p(e,n,t,i,o){var r;if(r=S?u(e,i):d(e,i),!r)return null;var a=y.getPooled(k.beforeInput,t,i,o);return a.data=r,f.accumulateTwoPhaseDispatches(a),a}var h=t(15),f=t(36),m=t(7),g=t(245),v=t(275),y=t(278),b=t(17),T=[9,13,27,32],w=229,E=m.canUseDOM&&"CompositionEvent"in window,C=null;m.canUseDOM&&"documentMode"in document&&(C=document.documentMode);var S=m.canUseDOM&&"TextEvent"in window&&!C&&!i(),x=m.canUseDOM&&(!E||C&&C>8&&C<=11),R=32,_=String.fromCharCode(R),P=h.topLevelTypes,k={beforeInput:{phasedRegistrationNames:{bubbled:b({onBeforeInput:null}),captured:b({onBeforeInputCapture:null})},dependencies:[P.topCompositionEnd,P.topKeyPress,P.topTextInput,P.topPaste]},compositionEnd:{phasedRegistrationNames:{bubbled:b({onCompositionEnd:null}),captured:b({onCompositionEndCapture:null})},dependencies:[P.topBlur,P.topCompositionEnd,P.topKeyDown,P.topKeyPress,P.topKeyUp,P.topMouseDown]},compositionStart:{phasedRegistrationNames:{bubbled:b({onCompositionStart:null}),captured:b({onCompositionStartCapture:null})},dependencies:[P.topBlur,P.topCompositionStart,P.topKeyDown,P.topKeyPress,P.topKeyUp,P.topMouseDown]},compositionUpdate:{phasedRegistrationNames:{bubbled:b({onCompositionUpdate:null}),captured:b({onCompositionUpdateCapture:null})},dependencies:[P.topBlur,P.topCompositionUpdate,P.topKeyDown,P.topKeyPress,P.topKeyUp,P.topMouseDown]}},A=!1,I=null,N={eventTypes:k,extractEvents:function(e,n,t,i,o){return[c(e,n,t,i,o),p(e,n,t,i,o)]}};e.exports=N},function(e,n,t){"use strict";var i=t(103),o=t(7),r=t(11),a=(t(146),t(283)),s=t(151),l=t(155),c=(t(3),l(function(e){return s(e)})),u=!1,d="cssFloat";if(o.canUseDOM){var p=document.createElement("div").style;try{p.font=""}catch(h){u=!0}void 0===document.documentElement.style.cssFloat&&(d="styleFloat")}var f={createMarkupForStyles:function(e){var n="";for(var t in e)if(e.hasOwnProperty(t)){var i=e[t];null!=i&&(n+=c(t)+":",n+=a(t,i)+";")}return n||null},setValueForStyles:function(e,n){var t=e.style;for(var o in n)if(n.hasOwnProperty(o)){var r=a(o,n[o]);if("float"===o&&(o=d),r)t[o]=r;else{var s=u&&i.shorthandPropertyExpansions[o];if(s)for(var l in s)t[l]="";else t[o]=""}}}};r.measureMethods(f,"CSSPropertyOperations",{setValueForStyles:"setValueForStyles"}),e.exports=f},function(e,n,t){"use strict";function i(e){var n=e.nodeName&&e.nodeName.toLowerCase();return"select"===n||"input"===n&&"file"===e.type}function o(e){var n=C.getPooled(k.change,I,e,S(e));T.accumulateTwoPhaseDispatches(n),E.batchedUpdates(r,n)}function r(e){b.enqueueEvents(e),b.processEventQueue(!1)}function a(e,n){A=e,I=n,A.attachEvent("onchange",o)}function s(){A&&(A.detachEvent("onchange",o),A=null,I=null)}function l(e,n,t){if(e===P.topChange)return t}function c(e,n,t){e===P.topFocus?(s(),a(n,t)):e===P.topBlur&&s()}function u(e,n){A=e,I=n,N=e.value,D=Object.getOwnPropertyDescriptor(e.constructor.prototype,"value"),Object.defineProperty(A,"value",L),A.attachEvent("onpropertychange",p)}function d(){A&&(delete A.value,A.detachEvent("onpropertychange",p),A=null,I=null,N=null,D=null)}function p(e){if("value"===e.propertyName){var n=e.srcElement.value;n!==N&&(N=n,o(e))}}function h(e,n,t){if(e===P.topInput)return t}function f(e,n,t){e===P.topFocus?(d(),u(n,t)):e===P.topBlur&&d()}function m(e,n,t){if((e===P.topSelectionChange||e===P.topKeyUp||e===P.topKeyDown)&&A&&A.value!==N)return N=A.value,I}function g(e){return e.nodeName&&"input"===e.nodeName.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)}function v(e,n,t){if(e===P.topClick)return t}var y=t(15),b=t(35),T=t(36),w=t(7),E=t(12),C=t(27),S=t(69),x=t(72),R=t(130),_=t(17),P=y.topLevelTypes,k={change:{phasedRegistrationNames:{bubbled:_({onChange:null}),captured:_({onChangeCapture:null})},dependencies:[P.topBlur,P.topChange,P.topClick,P.topFocus,P.topInput,P.topKeyDown,P.topKeyUp,P.topSelectionChange]}},A=null,I=null,N=null,D=null,O=!1;w.canUseDOM&&(O=x("change")&&(!("documentMode"in document)||document.documentMode>8));var M=!1;w.canUseDOM&&(M=x("input")&&(!("documentMode"in document)||document.documentMode>9));var L={get:function(){return D.get.call(this)},set:function(e){N=""+e,D.set.call(this,e)}},j={eventTypes:k,extractEvents:function(e,n,t,o,r){var a,s;if(i(n)?O?a=l:s=c:R(n)?M?a=h:(a=m,s=f):g(n)&&(a=v),a){var u=a(e,n,t);if(u){var d=C.getPooled(k.change,u,o,r);return d.type="change",T.accumulateTwoPhaseDispatches(d),d}}s&&s(e,n,t)}};e.exports=j},function(e,n){"use strict";var t=0,i={createReactRootIndex:function(){return t++}};e.exports=i},function(e,n,t){"use strict";function i(e){return e.substring(1,e.indexOf(" "))}var o=t(7),r=t(148),a=t(14),s=t(82),l=t(2),c=/^(<[^ \/>]+)/,u="data-danger-index",d={dangerouslyRenderMarkup:function(e){o.canUseDOM?void 0:l(!1);for(var n,t={},d=0;d<e.length;d++)e[d]?void 0:l(!1),n=i(e[d]),n=s(n)?n:"*",t[n]=t[n]||[],t[n][d]=e[d];var p=[],h=0;for(n in t)if(t.hasOwnProperty(n)){var f,m=t[n];for(f in m)if(m.hasOwnProperty(f)){var g=m[f];m[f]=g.replace(c,"$1 "+u+'="'+f+'" ')}for(var v=r(m.join(""),a),y=0;y<v.length;++y){var b=v[y];b.hasAttribute&&b.hasAttribute(u)&&(f=+b.getAttribute(u),b.removeAttribute(u),p.hasOwnProperty(f)?l(!1):void 0,p[f]=b,h+=1)}}return h!==p.length?l(!1):void 0,p.length!==e.length?l(!1):void 0,p},dangerouslyReplaceNodeWithMarkup:function(e,n){o.canUseDOM?void 0:l(!1),n?void 0:l(!1),"html"===e.tagName.toLowerCase()?l(!1):void 0;var t;t="string"==typeof n?r(n,a)[0]:n,e.parentNode.replaceChild(t,e)}};e.exports=d},function(e,n,t){"use strict";var i=t(17),o=[i({ResponderEventPlugin:null}),i({SimpleEventPlugin:null}),i({TapEventPlugin:null}),i({EnterLeaveEventPlugin:null}),i({ChangeEventPlugin:null}),i({SelectEventPlugin:null}),i({BeforeInputEventPlugin:null})];e.exports=o},function(e,n,t){"use strict";var i=t(15),o=t(36),r=t(46),a=t(9),s=t(17),l=i.topLevelTypes,c=a.getFirstReactDOM,u={mouseEnter:{registrationName:s({onMouseEnter:null}),dependencies:[l.topMouseOut,l.topMouseOver]},mouseLeave:{registrationName:s({onMouseLeave:null}),dependencies:[l.topMouseOut,l.topMouseOver]}},d=[null,null],p={eventTypes:u,extractEvents:function(e,n,t,i,s){if(e===l.topMouseOver&&(i.relatedTarget||i.fromElement))return null;if(e!==l.topMouseOut&&e!==l.topMouseOver)return null;var p;if(n.window===n)p=n;else{var h=n.ownerDocument;p=h?h.defaultView||h.parentWindow:window}var f,m,g="",v="";if(e===l.topMouseOut?(f=n,g=t,m=c(i.relatedTarget||i.toElement),m?v=a.getID(m):m=p,m=m||p):(f=p,m=n,v=t),f===m)return null;var y=r.getPooled(u.mouseLeave,g,i,s);y.type="mouseleave",y.target=f,y.relatedTarget=m;var b=r.getPooled(u.mouseEnter,v,i,s);return b.type="mouseenter",b.target=m,b.relatedTarget=f,o.accumulateEnterLeaveDispatches(y,b,g,v),d[0]=y,d[1]=b,d}};e.exports=p},function(e,n,t){"use strict";function i(e){return e===g.topMouseUp||e===g.topTouchEnd||e===g.topTouchCancel}function o(e){return e===g.topMouseMove||e===g.topTouchMove}function r(e){return e===g.topMouseDown||e===g.topTouchStart}function a(e,n,t,i){var o=e.type||"unknown-event";e.currentTarget=m.Mount.getNode(i),n?h.invokeGuardedCallbackWithCatch(o,t,e,i):h.invokeGuardedCallback(o,t,e,i),e.currentTarget=null}function s(e,n){var t=e._dispatchListeners,i=e._dispatchIDs;if(Array.isArray(t))for(var o=0;o<t.length&&!e.isPropagationStopped();o++)a(e,n,t[o],i[o]);else t&&a(e,n,t,i);e._dispatchListeners=null,e._dispatchIDs=null}function l(e){var n=e._dispatchListeners,t=e._dispatchIDs;if(Array.isArray(n)){for(var i=0;i<n.length&&!e.isPropagationStopped();i++)if(n[i](e,t[i]))return t[i]}else if(n&&n(e,t))return t;return null}function c(e){var n=l(e);return e._dispatchIDs=null,e._dispatchListeners=null,n}function u(e){var n=e._dispatchListeners,t=e._dispatchIDs;Array.isArray(n)?f(!1):void 0;var i=n?n(e,t):null;return e._dispatchListeners=null,e._dispatchIDs=null,i}function d(e){return!!e._dispatchListeners}var p=t(15),h=t(118),f=t(2),m=(t(3),{Mount:null,injectMount:function(e){m.Mount=e}}),g=p.topLevelTypes,v={isEndish:i,isMoveish:o,isStartish:r,executeDirectDispatch:u,executeDispatchesInOrder:s,executeDispatchesInOrderStopAtTrue:c,hasDispatches:d,getNode:function(e){return m.Mount.getNode(e)},getID:function(e){return m.Mount.getID(e)},injection:m};e.exports=v},function(e,n,t){"use strict";function i(e){this._root=e,this._startText=this.getText(),this._fallbackText=null}var o=t(21),r=t(4),a=t(129);r(i.prototype,{destructor:function(){this._root=null,this._startText=null,this._fallbackText=null},getText:function(){return"value"in this._root?this._root.value:this._root[a()]},getData:function(){if(this._fallbackText)return this._fallbackText;var e,n,t=this._startText,i=t.length,o=this.getText(),r=o.length;for(e=0;e<i&&t[e]===o[e];e++);var a=i-e;for(n=1;n<=a&&t[i-n]===o[r-n];n++);var s=n>1?1-n:void 0;return this._fallbackText=o.slice(e,s),this._fallbackText}}),o.addPoolingTo(i),e.exports=i},function(e,n,t){"use strict";var i,o=t(31),r=t(7),a=o.injection.MUST_USE_ATTRIBUTE,s=o.injection.MUST_USE_PROPERTY,l=o.injection.HAS_BOOLEAN_VALUE,c=o.injection.HAS_SIDE_EFFECTS,u=o.injection.HAS_NUMERIC_VALUE,d=o.injection.HAS_POSITIVE_NUMERIC_VALUE,p=o.injection.HAS_OVERLOADED_BOOLEAN_VALUE;if(r.canUseDOM){var h=document.implementation;i=h&&h.hasFeature&&h.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")}var f={isCustomAttribute:RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),Properties:{accept:null,acceptCharset:null,accessKey:null,action:null,allowFullScreen:a|l,allowTransparency:a,alt:null,async:l,autoComplete:null,autoPlay:l,capture:a|l,cellPadding:null,cellSpacing:null,charSet:a,challenge:a,checked:s|l,classID:a,className:i?a:s,cols:a|d,colSpan:null,content:null,contentEditable:null,contextMenu:a,controls:s|l,coords:null,crossOrigin:null,data:null,dateTime:a,default:l,defer:l,dir:null,disabled:a|l,download:p,draggable:null,encType:null,form:a,formAction:a,formEncType:a,formMethod:a,formNoValidate:l,formTarget:a,frameBorder:a,headers:null,height:a,hidden:a|l,high:null,href:null,hrefLang:null,htmlFor:null,httpEquiv:null,icon:null,id:s,inputMode:a,integrity:null,is:a,keyParams:a,keyType:a,kind:null,label:null,lang:null,list:a,loop:s|l,low:null,manifest:a,marginHeight:null,marginWidth:null,max:null,maxLength:a,media:a,mediaGroup:null,method:null,min:null,minLength:a,multiple:s|l,muted:s|l,name:null,nonce:a,noValidate:l,open:l,optimum:null,pattern:null,placeholder:null,poster:null,preload:null,radioGroup:null,readOnly:s|l,rel:null,required:l,reversed:l,role:a,rows:a|d,rowSpan:null,sandbox:null,scope:null,scoped:l,scrolling:null,seamless:a|l,selected:s|l,shape:null,size:a|d,sizes:a,span:d,spellCheck:null,src:null,srcDoc:s,srcLang:null,srcSet:a,start:u,step:null,style:null,summary:null,tabIndex:null,target:null,title:null,type:null,useMap:null,value:s|c,width:a,wmode:a,wrap:null,about:a,datatype:a,inlist:a,prefix:a,property:a,resource:a,typeof:a,vocab:a,autoCapitalize:a,autoCorrect:a,autoSave:null,color:null,itemProp:a,itemScope:a|l,itemType:a,itemID:a,itemRef:a,results:null,security:a,unselectable:a},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMPropertyNames:{autoComplete:"autocomplete",autoFocus:"autofocus",autoPlay:"autoplay",autoSave:"autosave",encType:"encoding",hrefLang:"hreflang",radioGroup:"radiogroup",spellCheck:"spellcheck",srcDoc:"srcdoc",srcSet:"srcset"}};e.exports=f},function(e,n,t){"use strict";var i=t(109),o=t(257),r=t(262),a=t(4),s=t(284),l={};a(l,r),a(l,{findDOMNode:s("findDOMNode","ReactDOM","react-dom",i,i.findDOMNode),render:s("render","ReactDOM","react-dom",i,i.render),unmountComponentAtNode:s("unmountComponentAtNode","ReactDOM","react-dom",i,i.unmountComponentAtNode),renderToString:s("renderToString","ReactDOMServer","react-dom/server",o,o.renderToString),renderToStaticMarkup:s("renderToStaticMarkup","ReactDOMServer","react-dom/server",o,o.renderToStaticMarkup)}),l.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=i,l.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=o,e.exports=l},function(e,n,t){"use strict";var i=(t(37),t(66)),o=(t(3),"_getDOMNodeDidWarn"),r={
getDOMNode:function(){return this.constructor[o]=!0,i(this)}};e.exports=r},function(e,n,t){"use strict";function i(e,n,t){var i=void 0===e[t];null!=n&&i&&(e[t]=r(n,null))}var o=t(26),r=t(71),a=t(74),s=t(75),l=(t(3),{instantiateChildren:function(e,n,t){if(null==e)return null;var o={};return s(e,i,o),o},updateChildren:function(e,n,t,i){if(!n&&!e)return null;var s;for(s in n)if(n.hasOwnProperty(s)){var l=e&&e[s],c=l&&l._currentElement,u=n[s];if(null!=l&&a(c,u))o.receiveComponent(l,u,t,i),n[s]=l;else{l&&o.unmountComponent(l,s);var d=r(u,null);n[s]=d}}for(s in e)!e.hasOwnProperty(s)||n&&n.hasOwnProperty(s)||o.unmountComponent(e[s]);return n},unmountChildren:function(e){for(var n in e)if(e.hasOwnProperty(n)){var t=e[n];o.unmountComponent(t)}}});e.exports=l},function(e,n,t){"use strict";function i(e){var n=e._currentElement._owner||null;if(n){var t=n.getName();if(t)return" Check the render method of `"+t+"`."}return""}function o(e){}var r=t(62),a=t(16),s=t(10),l=t(37),c=t(11),u=t(45),d=(t(44),t(26)),p=t(64),h=t(4),f=t(33),m=t(2),g=t(74);t(3);o.prototype.render=function(){var e=l.get(this)._currentElement.type;return e(this.props,this.context,this.updater)};var v=1,y={construct:function(e){this._currentElement=e,this._rootNodeID=null,this._instance=null,this._pendingElement=null,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._renderedComponent=null,this._context=null,this._mountOrder=0,this._topLevelWrapper=null,this._pendingCallbacks=null},mountComponent:function(e,n,t){this._context=t,this._mountOrder=v++,this._rootNodeID=e;var i,r,a=this._processProps(this._currentElement.props),c=this._processContext(t),u=this._currentElement.type,h="prototype"in u;h&&(i=new u(a,c,p)),h&&null!==i&&i!==!1&&!s.isValidElement(i)||(r=i,i=new o(u)),i.props=a,i.context=c,i.refs=f,i.updater=p,this._instance=i,l.set(i,this);var g=i.state;void 0===g&&(i.state=g=null),"object"!=typeof g||Array.isArray(g)?m(!1):void 0,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,i.componentWillMount&&(i.componentWillMount(),this._pendingStateQueue&&(i.state=this._processPendingState(i.props,i.context))),void 0===r&&(r=this._renderValidatedComponent()),this._renderedComponent=this._instantiateReactComponent(r);var y=d.mountComponent(this._renderedComponent,e,n,this._processChildContext(t));return i.componentDidMount&&n.getReactMountReady().enqueue(i.componentDidMount,i),y},unmountComponent:function(){var e=this._instance;e.componentWillUnmount&&e.componentWillUnmount(),d.unmountComponent(this._renderedComponent),this._renderedComponent=null,this._instance=null,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._pendingCallbacks=null,this._pendingElement=null,this._context=null,this._rootNodeID=null,this._topLevelWrapper=null,l.remove(e)},_maskContext:function(e){var n=null,t=this._currentElement.type,i=t.contextTypes;if(!i)return f;n={};for(var o in i)n[o]=e[o];return n},_processContext:function(e){var n=this._maskContext(e);return n},_processChildContext:function(e){var n=this._currentElement.type,t=this._instance,i=t.getChildContext&&t.getChildContext();if(i){"object"!=typeof n.childContextTypes?m(!1):void 0;for(var o in i)o in n.childContextTypes?void 0:m(!1);return h({},e,i)}return e},_processProps:function(e){return e},_checkPropTypes:function(e,n,t){var o=this.getName();for(var r in e)if(e.hasOwnProperty(r)){var a;try{"function"!=typeof e[r]?m(!1):void 0,a=e[r](n,r,o,t)}catch(s){a=s}if(a instanceof Error){i(this);t===u.prop}}},receiveComponent:function(e,n,t){var i=this._currentElement,o=this._context;this._pendingElement=null,this.updateComponent(n,i,e,o,t)},performUpdateIfNecessary:function(e){null!=this._pendingElement&&d.receiveComponent(this,this._pendingElement||this._currentElement,e,this._context),(null!==this._pendingStateQueue||this._pendingForceUpdate)&&this.updateComponent(e,this._currentElement,this._currentElement,this._context,this._context)},updateComponent:function(e,n,t,i,o){var r,a=this._instance,s=this._context===o?a.context:this._processContext(o);n===t?r=t.props:(r=this._processProps(t.props),a.componentWillReceiveProps&&a.componentWillReceiveProps(r,s));var l=this._processPendingState(r,s),c=this._pendingForceUpdate||!a.shouldComponentUpdate||a.shouldComponentUpdate(r,l,s);c?(this._pendingForceUpdate=!1,this._performComponentUpdate(t,r,l,s,e,o)):(this._currentElement=t,this._context=o,a.props=r,a.state=l,a.context=s)},_processPendingState:function(e,n){var t=this._instance,i=this._pendingStateQueue,o=this._pendingReplaceState;if(this._pendingReplaceState=!1,this._pendingStateQueue=null,!i)return t.state;if(o&&1===i.length)return i[0];for(var r=h({},o?i[0]:t.state),a=o?1:0;a<i.length;a++){var s=i[a];h(r,"function"==typeof s?s.call(t,r,e,n):s)}return r},_performComponentUpdate:function(e,n,t,i,o,r){var a,s,l,c=this._instance,u=Boolean(c.componentDidUpdate);u&&(a=c.props,s=c.state,l=c.context),c.componentWillUpdate&&c.componentWillUpdate(n,t,i),this._currentElement=e,this._context=r,c.props=n,c.state=t,c.context=i,this._updateRenderedComponent(o,r),u&&o.getReactMountReady().enqueue(c.componentDidUpdate.bind(c,a,s,l),c)},_updateRenderedComponent:function(e,n){var t=this._renderedComponent,i=t._currentElement,o=this._renderValidatedComponent();if(g(i,o))d.receiveComponent(t,o,e,this._processChildContext(n));else{var r=this._rootNodeID,a=t._rootNodeID;d.unmountComponent(t),this._renderedComponent=this._instantiateReactComponent(o);var s=d.mountComponent(this._renderedComponent,r,e,this._processChildContext(n));this._replaceNodeWithMarkupByID(a,s)}},_replaceNodeWithMarkupByID:function(e,n){r.replaceNodeWithMarkupByID(e,n)},_renderValidatedComponentWithoutOwnerOrContext:function(){var e=this._instance,n=e.render();return n},_renderValidatedComponent:function(){var e;a.current=this;try{e=this._renderValidatedComponentWithoutOwnerOrContext()}finally{a.current=null}return null===e||e===!1||s.isValidElement(e)?void 0:m(!1),e},attachRef:function(e,n){var t=this.getPublicInstance();null==t?m(!1):void 0;var i=n.getPublicInstance(),o=t.refs===f?t.refs={}:t.refs;o[e]=i},detachRef:function(e){var n=this.getPublicInstance().refs;delete n[e]},getName:function(){var e=this._currentElement.type,n=this._instance&&this._instance.constructor;return e.displayName||n&&n.displayName||e.name||n&&n.name||null},getPublicInstance:function(){var e=this._instance;return e instanceof o?null:e},_instantiateReactComponent:null};c.measureMethods(y,"ReactCompositeComponent",{mountComponent:"mountComponent",updateComponent:"updateComponent",_renderValidatedComponent:"_renderValidatedComponent"});var b={Mixin:y};e.exports=b},function(e,n){"use strict";var t={onClick:!0,onDoubleClick:!0,onMouseDown:!0,onMouseMove:!0,onMouseUp:!0,onClickCapture:!0,onDoubleClickCapture:!0,onMouseDownCapture:!0,onMouseMoveCapture:!0,onMouseUpCapture:!0},i={getNativeProps:function(e,n,i){if(!n.disabled)return n;var o={};for(var r in n)n.hasOwnProperty(r)&&!t[r]&&(o[r]=n[r]);return o}};e.exports=i},function(e,n,t){"use strict";function i(){return this}function o(){var e=this._reactInternalComponent;return!!e}function r(){}function a(e,n){var t=this._reactInternalComponent;t&&(N.enqueueSetPropsInternal(t,e),n&&N.enqueueCallbackInternal(t,n))}function s(e,n){var t=this._reactInternalComponent;t&&(N.enqueueReplacePropsInternal(t,e),n&&N.enqueueCallbackInternal(t,n))}function l(e,n){n&&(null!=n.dangerouslySetInnerHTML&&(null!=n.children?L(!1):void 0,"object"==typeof n.dangerouslySetInnerHTML&&z in n.dangerouslySetInnerHTML?void 0:L(!1)),null!=n.style&&"object"!=typeof n.style?L(!1):void 0)}function c(e,n,t,i){var o=k.findReactContainerForID(e);if(o){var r=o.nodeType===G?o.ownerDocument:o;F(n,r)}i.getReactMountReady().enqueue(u,{id:e,registrationName:n,listener:t})}function u(){var e=this;E.putListener(e.id,e.registrationName,e.listener)}function d(){var e=this;e._rootNodeID?void 0:L(!1);var n=k.getNode(e._rootNodeID);switch(n?void 0:L(!1),e._tag){case"iframe":e._wrapperState.listeners=[E.trapBubbledEvent(w.topLevelTypes.topLoad,"load",n)];break;case"video":case"audio":e._wrapperState.listeners=[];for(var t in Y)Y.hasOwnProperty(t)&&e._wrapperState.listeners.push(E.trapBubbledEvent(w.topLevelTypes[t],Y[t],n));break;case"img":e._wrapperState.listeners=[E.trapBubbledEvent(w.topLevelTypes.topError,"error",n),E.trapBubbledEvent(w.topLevelTypes.topLoad,"load",n)];break;case"form":e._wrapperState.listeners=[E.trapBubbledEvent(w.topLevelTypes.topReset,"reset",n),E.trapBubbledEvent(w.topLevelTypes.topSubmit,"submit",n)]}}function p(){x.mountReadyWrapper(this)}function h(){_.postUpdateWrapper(this)}function f(e){Z.call($,e)||(Q.test(e)?void 0:L(!1),$[e]=!0)}function m(e,n){return e.indexOf("-")>=0||null!=n.is}function g(e){f(e),this._tag=e.toLowerCase(),this._renderedChildren=null,this._previousStyle=null,this._previousStyleCopy=null,this._rootNodeID=null,this._wrapperState=null,this._topLevelWrapper=null,this._nodeWithLegacyProperties=null}var v=t(236),y=t(238),b=t(31),T=t(59),w=t(15),E=t(43),C=t(61),S=t(251),x=t(254),R=t(255),_=t(111),P=t(258),k=t(9),A=t(263),I=t(11),N=t(64),D=t(4),O=t(48),M=t(49),L=t(2),j=(t(72),t(17)),B=t(50),q=t(73),U=(t(83),t(76),t(3),E.deleteListener),F=E.listenTo,K=E.registrationNameModules,H={string:!0,number:!0},V=j({children:null}),W=j({style:null}),z=j({__html:null}),G=1,Y={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},J={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},X={listing:!0,pre:!0,textarea:!0},Q=(D({menuitem:!0},J),/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/),$={},Z={}.hasOwnProperty;g.displayName="ReactDOMComponent",g.Mixin={construct:function(e){this._currentElement=e},mountComponent:function(e,n,t){this._rootNodeID=e;var i=this._currentElement.props;switch(this._tag){case"iframe":case"img":case"form":case"video":case"audio":this._wrapperState={listeners:null},n.getReactMountReady().enqueue(d,this);break;case"button":i=S.getNativeProps(this,i,t);break;case"input":x.mountWrapper(this,i,t),i=x.getNativeProps(this,i,t);break;case"option":R.mountWrapper(this,i,t),i=R.getNativeProps(this,i,t);break;case"select":_.mountWrapper(this,i,t),i=_.getNativeProps(this,i,t),t=_.processChildContext(this,i,t);break;case"textarea":P.mountWrapper(this,i,t),i=P.getNativeProps(this,i,t)}l(this,i);var o;if(n.useCreateElement){var r=t[k.ownerDocumentContextKey],a=r.createElement(this._currentElement.type);T.setAttributeForID(a,this._rootNodeID),k.getID(a),this._updateDOMProperties({},i,n,a),this._createInitialChildren(n,i,t,a),o=a}else{var s=this._createOpenTagMarkupAndPutListeners(n,i),c=this._createContentMarkup(n,i,t);o=!c&&J[this._tag]?s+"/>":s+">"+c+"</"+this._currentElement.type+">"}switch(this._tag){case"input":n.getReactMountReady().enqueue(p,this);case"button":case"select":case"textarea":i.autoFocus&&n.getReactMountReady().enqueue(v.focusDOMComponent,this)}return o},_createOpenTagMarkupAndPutListeners:function(e,n){var t="<"+this._currentElement.type;for(var i in n)if(n.hasOwnProperty(i)){var o=n[i];if(null!=o)if(K.hasOwnProperty(i))o&&c(this._rootNodeID,i,o,e);else{i===W&&(o&&(o=this._previousStyleCopy=D({},n.style)),o=y.createMarkupForStyles(o));var r=null;null!=this._tag&&m(this._tag,n)?i!==V&&(r=T.createMarkupForCustomAttribute(i,o)):r=T.createMarkupForProperty(i,o),r&&(t+=" "+r)}}if(e.renderToStaticMarkup)return t;var a=T.createMarkupForID(this._rootNodeID);return t+" "+a},_createContentMarkup:function(e,n,t){var i="",o=n.dangerouslySetInnerHTML;if(null!=o)null!=o.__html&&(i=o.__html);else{var r=H[typeof n.children]?n.children:null,a=null!=r?null:n.children;if(null!=r)i=M(r);else if(null!=a){var s=this.mountChildren(a,e,t);i=s.join("")}}return X[this._tag]&&"\n"===i.charAt(0)?"\n"+i:i},_createInitialChildren:function(e,n,t,i){var o=n.dangerouslySetInnerHTML;if(null!=o)null!=o.__html&&B(i,o.__html);else{var r=H[typeof n.children]?n.children:null,a=null!=r?null:n.children;if(null!=r)q(i,r);else if(null!=a)for(var s=this.mountChildren(a,e,t),l=0;l<s.length;l++)i.appendChild(s[l])}},receiveComponent:function(e,n,t){var i=this._currentElement;this._currentElement=e,this.updateComponent(n,i,e,t)},updateComponent:function(e,n,t,i){var o=n.props,r=this._currentElement.props;switch(this._tag){case"button":o=S.getNativeProps(this,o),r=S.getNativeProps(this,r);break;case"input":x.updateWrapper(this),o=x.getNativeProps(this,o),r=x.getNativeProps(this,r);break;case"option":o=R.getNativeProps(this,o),r=R.getNativeProps(this,r);break;case"select":o=_.getNativeProps(this,o),r=_.getNativeProps(this,r);break;case"textarea":P.updateWrapper(this),o=P.getNativeProps(this,o),r=P.getNativeProps(this,r)}l(this,r),this._updateDOMProperties(o,r,e,null),this._updateDOMChildren(o,r,e,i),!O&&this._nodeWithLegacyProperties&&(this._nodeWithLegacyProperties.props=r),"select"===this._tag&&e.getReactMountReady().enqueue(h,this)},_updateDOMProperties:function(e,n,t,i){var o,r,a;for(o in e)if(!n.hasOwnProperty(o)&&e.hasOwnProperty(o))if(o===W){var s=this._previousStyleCopy;for(r in s)s.hasOwnProperty(r)&&(a=a||{},a[r]="");this._previousStyleCopy=null}else K.hasOwnProperty(o)?e[o]&&U(this._rootNodeID,o):(b.properties[o]||b.isCustomAttribute(o))&&(i||(i=k.getNode(this._rootNodeID)),T.deleteValueForProperty(i,o));for(o in n){var l=n[o],u=o===W?this._previousStyleCopy:e[o];if(n.hasOwnProperty(o)&&l!==u)if(o===W)if(l?l=this._previousStyleCopy=D({},l):this._previousStyleCopy=null,u){for(r in u)!u.hasOwnProperty(r)||l&&l.hasOwnProperty(r)||(a=a||{},a[r]="");for(r in l)l.hasOwnProperty(r)&&u[r]!==l[r]&&(a=a||{},a[r]=l[r])}else a=l;else K.hasOwnProperty(o)?l?c(this._rootNodeID,o,l,t):u&&U(this._rootNodeID,o):m(this._tag,n)?(i||(i=k.getNode(this._rootNodeID)),o===V&&(l=null),T.setValueForAttribute(i,o,l)):(b.properties[o]||b.isCustomAttribute(o))&&(i||(i=k.getNode(this._rootNodeID)),null!=l?T.setValueForProperty(i,o,l):T.deleteValueForProperty(i,o))}a&&(i||(i=k.getNode(this._rootNodeID)),y.setValueForStyles(i,a))},_updateDOMChildren:function(e,n,t,i){var o=H[typeof e.children]?e.children:null,r=H[typeof n.children]?n.children:null,a=e.dangerouslySetInnerHTML&&e.dangerouslySetInnerHTML.__html,s=n.dangerouslySetInnerHTML&&n.dangerouslySetInnerHTML.__html,l=null!=o?null:e.children,c=null!=r?null:n.children,u=null!=o||null!=a,d=null!=r||null!=s;null!=l&&null==c?this.updateChildren(null,t,i):u&&!d&&this.updateTextContent(""),null!=r?o!==r&&this.updateTextContent(""+r):null!=s?a!==s&&this.updateMarkup(""+s):null!=c&&this.updateChildren(c,t,i)},unmountComponent:function(){switch(this._tag){case"iframe":case"img":case"form":case"video":case"audio":var e=this._wrapperState.listeners;if(e)for(var n=0;n<e.length;n++)e[n].remove();break;case"input":x.unmountWrapper(this);break;case"html":case"head":case"body":L(!1)}if(this.unmountChildren(),E.deleteAllListeners(this._rootNodeID),C.unmountIDFromEnvironment(this._rootNodeID),this._rootNodeID=null,this._wrapperState=null,this._nodeWithLegacyProperties){var t=this._nodeWithLegacyProperties;t._reactInternalComponent=null,this._nodeWithLegacyProperties=null}},getPublicInstance:function(){if(!this._nodeWithLegacyProperties){var e=k.getNode(this._rootNodeID);e._reactInternalComponent=this,e.getDOMNode=i,e.isMounted=o,e.setState=r,e.replaceState=r,e.forceUpdate=r,e.setProps=a,e.replaceProps=s,e.props=this._currentElement.props,this._nodeWithLegacyProperties=e}return this._nodeWithLegacyProperties}},I.measureMethods(g,"ReactDOMComponent",{mountComponent:"mountComponent",updateComponent:"updateComponent"}),D(g.prototype,g.Mixin,A.Mixin),e.exports=g},function(e,n,t){"use strict";function i(e){return o.createFactory(e)}var o=t(10),r=(t(115),t(154)),a=r({a:"a",abbr:"abbr",address:"address",area:"area",article:"article",aside:"aside",audio:"audio",b:"b",base:"base",bdi:"bdi",bdo:"bdo",big:"big",blockquote:"blockquote",body:"body",br:"br",button:"button",canvas:"canvas",caption:"caption",cite:"cite",code:"code",col:"col",colgroup:"colgroup",data:"data",datalist:"datalist",dd:"dd",del:"del",details:"details",dfn:"dfn",dialog:"dialog",div:"div",dl:"dl",dt:"dt",em:"em",embed:"embed",fieldset:"fieldset",figcaption:"figcaption",figure:"figure",footer:"footer",form:"form",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",head:"head",header:"header",hgroup:"hgroup",hr:"hr",html:"html",i:"i",iframe:"iframe",img:"img",input:"input",ins:"ins",kbd:"kbd",keygen:"keygen",label:"label",legend:"legend",li:"li",link:"link",main:"main",map:"map",mark:"mark",menu:"menu",menuitem:"menuitem",meta:"meta",meter:"meter",nav:"nav",noscript:"noscript",object:"object",ol:"ol",optgroup:"optgroup",option:"option",output:"output",p:"p",param:"param",picture:"picture",pre:"pre",progress:"progress",q:"q",rp:"rp",rt:"rt",ruby:"ruby",s:"s",samp:"samp",script:"script",section:"section",select:"select",small:"small",source:"source",span:"span",strong:"strong",style:"style",sub:"sub",summary:"summary",sup:"sup",table:"table",tbody:"tbody",td:"td",textarea:"textarea",tfoot:"tfoot",th:"th",thead:"thead",time:"time",title:"title",tr:"tr",track:"track",u:"u",ul:"ul",var:"var",video:"video",wbr:"wbr",circle:"circle",clipPath:"clipPath",defs:"defs",ellipse:"ellipse",g:"g",image:"image",line:"line",linearGradient:"linearGradient",mask:"mask",path:"path",pattern:"pattern",polygon:"polygon",polyline:"polyline",radialGradient:"radialGradient",rect:"rect",stop:"stop",svg:"svg",text:"text",tspan:"tspan"},i);e.exports=a},function(e,n,t){"use strict";function i(){this._rootNodeID&&p.updateWrapper(this)}function o(e){var n=this._currentElement.props,t=a.executeOnChange(n,e);l.asap(i,this);var o=n.name;if("radio"===n.type&&null!=o){for(var r=s.getNode(this._rootNodeID),c=r;c.parentNode;)c=c.parentNode;for(var p=c.querySelectorAll("input[name="+JSON.stringify(""+o)+'][type="radio"]'),h=0;h<p.length;h++){var f=p[h];if(f!==r&&f.form===r.form){var m=s.getID(f);m?void 0:u(!1);var g=d[m];g?void 0:u(!1),l.asap(i,g)}}}return t}var r=t(63),a=t(60),s=t(9),l=t(12),c=t(4),u=t(2),d={},p={getNativeProps:function(e,n,t){var i=a.getValue(n),o=a.getChecked(n),r=c({},n,{defaultChecked:void 0,defaultValue:void 0,value:null!=i?i:e._wrapperState.initialValue,checked:null!=o?o:e._wrapperState.initialChecked,onChange:e._wrapperState.onChange});return r},mountWrapper:function(e,n){var t=n.defaultValue;e._wrapperState={initialChecked:n.defaultChecked||!1,initialValue:null!=t?t:null,onChange:o.bind(e)}},mountReadyWrapper:function(e){d[e._rootNodeID]=e},unmountWrapper:function(e){delete d[e._rootNodeID]},updateWrapper:function(e){var n=e._currentElement.props,t=n.checked;null!=t&&r.updatePropertyByID(e._rootNodeID,"checked",t||!1);var i=a.getValue(n);null!=i&&r.updatePropertyByID(e._rootNodeID,"value",""+i)}};e.exports=p},function(e,n,t){"use strict";var i=t(106),o=t(111),r=t(4),a=(t(3),o.valueContextKey),s={mountWrapper:function(e,n,t){var i=t[a],o=null;if(null!=i)if(o=!1,Array.isArray(i)){for(var r=0;r<i.length;r++)if(""+i[r]==""+n.value){o=!0;break}}else o=""+i==""+n.value;e._wrapperState={selected:o}},getNativeProps:function(e,n,t){var o=r({selected:void 0,children:void 0},n);null!=e._wrapperState.selected&&(o.selected=e._wrapperState.selected);var a="";return i.forEach(n.children,function(e){null!=e&&("string"!=typeof e&&"number"!=typeof e||(a+=e))}),a&&(o.children=a),o}};e.exports=s},function(e,n,t){"use strict";function i(e,n,t,i){return e===t&&n===i}function o(e){var n=document.selection,t=n.createRange(),i=t.text.length,o=t.duplicate();o.moveToElementText(e),o.setEndPoint("EndToStart",t);var r=o.text.length,a=r+i;return{start:r,end:a}}function r(e){var n=window.getSelection&&window.getSelection();if(!n||0===n.rangeCount)return null;var t=n.anchorNode,o=n.anchorOffset,r=n.focusNode,a=n.focusOffset,s=n.getRangeAt(0);try{s.startContainer.nodeType,s.endContainer.nodeType}catch(l){return null}var c=i(n.anchorNode,n.anchorOffset,n.focusNode,n.focusOffset),u=c?0:s.toString().length,d=s.cloneRange();d.selectNodeContents(e),d.setEnd(s.startContainer,s.startOffset);var p=i(d.startContainer,d.startOffset,d.endContainer,d.endOffset),h=p?0:d.toString().length,f=h+u,m=document.createRange();m.setStart(t,o),m.setEnd(r,a);var g=m.collapsed;return{start:g?f:h,end:g?h:f}}function a(e,n){var t,i,o=document.selection.createRange().duplicate();"undefined"==typeof n.end?(t=n.start,i=t):n.start>n.end?(t=n.end,i=n.start):(t=n.start,i=n.end),o.moveToElementText(e),o.moveStart("character",t),o.setEndPoint("EndToStart",o),o.moveEnd("character",i-t),o.select()}function s(e,n){if(window.getSelection){var t=window.getSelection(),i=e[u()].length,o=Math.min(n.start,i),r="undefined"==typeof n.end?o:Math.min(n.end,i);if(!t.extend&&o>r){var a=r;r=o,o=a}var s=c(e,o),l=c(e,r);if(s&&l){var d=document.createRange();d.setStart(s.node,s.offset),t.removeAllRanges(),o>r?(t.addRange(d),t.extend(l.node,l.offset)):(d.setEnd(l.node,l.offset),t.addRange(d))}}}var l=t(7),c=t(287),u=t(129),d=l.canUseDOM&&"selection"in document&&!("getSelection"in window),p={getOffsets:d?o:r,setOffsets:d?a:s};e.exports=p},function(e,n,t){"use strict";var i=t(114),o=t(268),r=t(65);i.inject();var a={renderToString:o.renderToString,renderToStaticMarkup:o.renderToStaticMarkup,version:r};e.exports=a},function(e,n,t){"use strict";function i(){this._rootNodeID&&u.updateWrapper(this)}function o(e){var n=this._currentElement.props,t=r.executeOnChange(n,e);return s.asap(i,this),t}var r=t(60),a=t(63),s=t(12),l=t(4),c=t(2),u=(t(3),{getNativeProps:function(e,n,t){null!=n.dangerouslySetInnerHTML?c(!1):void 0;var i=l({},n,{defaultValue:void 0,value:void 0,children:e._wrapperState.initialValue,onChange:e._wrapperState.onChange});return i},mountWrapper:function(e,n){var t=n.defaultValue,i=n.children;null!=i&&(null!=t?c(!1):void 0,Array.isArray(i)&&(i.length<=1?void 0:c(!1),i=i[0]),t=""+i),null==t&&(t="");var a=r.getValue(n);e._wrapperState={initialValue:""+(null!=a?a:t),onChange:o.bind(e)}},updateWrapper:function(e){var n=e._currentElement.props,t=r.getValue(n);null!=t&&a.updatePropertyByID(e._rootNodeID,"value",""+t)}});e.exports=u},function(e,n,t){"use strict";function i(e){o.enqueueEvents(e),o.processEventQueue(!1)}var o=t(35),r={handleTopLevel:function(e,n,t,r,a){var s=o.extractEvents(e,n,t,r,a);i(s)}};e.exports=r},function(e,n,t){"use strict";function i(e){var n=p.getID(e),t=d.getReactRootIDFromNodeID(n),i=p.findReactContainerForID(t),o=p.getFirstReactDOM(i);return o}function o(e,n){this.topLevelType=e,this.nativeEvent=n,this.ancestors=[]}function r(e){a(e)}function a(e){for(var n=p.getFirstReactDOM(m(e.nativeEvent))||window,t=n;t;)e.ancestors.push(t),t=i(t);for(var o=0;o<e.ancestors.length;o++){n=e.ancestors[o];var r=p.getID(n)||"";v._handleTopLevel(e.topLevelType,n,r,e.nativeEvent,m(e.nativeEvent))}}function s(e){var n=g(window);e(n)}var l=t(78),c=t(7),u=t(21),d=t(32),p=t(9),h=t(12),f=t(4),m=t(69),g=t(149);f(o.prototype,{destructor:function(){this.topLevelType=null,this.nativeEvent=null,this.ancestors.length=0}}),u.addPoolingTo(o,u.twoArgumentPooler);var v={_enabled:!0,_handleTopLevel:null,WINDOW_HANDLE:c.canUseDOM?window:null,setHandleTopLevel:function(e){v._handleTopLevel=e},setEnabled:function(e){v._enabled=!!e},isEnabled:function(){return v._enabled},trapBubbledEvent:function(e,n,t){var i=t;return i?l.listen(i,n,v.dispatchEvent.bind(null,e)):null},trapCapturedEvent:function(e,n,t){var i=t;return i?l.capture(i,n,v.dispatchEvent.bind(null,e)):null},monitorScrollValue:function(e){var n=s.bind(null,e);l.listen(window,"scroll",n)},dispatchEvent:function(e,n){if(v._enabled){var t=o.getPooled(e,n);try{h.batchedUpdates(r,t)}finally{o.release(t)}}}};e.exports=v},function(e,n,t){"use strict";var i=t(31),o=t(35),r=t(62),a=t(107),s=t(116),l=t(43),c=t(122),u=t(11),d=t(125),p=t(12),h={Component:r.injection,Class:a.injection,DOMProperty:i.injection,EmptyComponent:s.injection,EventPluginHub:o.injection,EventEmitter:l.injection,NativeComponent:c.injection,Perf:u.injection,RootIndex:d.injection,Updates:p.injection};e.exports=h},function(e,n,t){"use strict";var i=t(106),o=t(108),r=t(107),a=t(253),s=t(10),l=(t(115),t(124)),c=t(65),u=t(4),d=t(288),p=s.createElement,h=s.createFactory,f=s.cloneElement,m={Children:{map:i.map,forEach:i.forEach,count:i.count,toArray:i.toArray,only:d},Component:o,createElement:p,cloneElement:f,isValidElement:s.isValidElement,PropTypes:l,createClass:r.createClass,createFactory:h,createMixin:function(e){return e},DOM:a,version:c,__spread:u};e.exports=m},function(e,n,t){"use strict";function i(e,n,t){g.push({parentID:e,parentNode:null,type:d.INSERT_MARKUP,markupIndex:v.push(n)-1,content:null,fromIndex:null,toIndex:t})}function o(e,n,t){g.push({parentID:e,parentNode:null,type:d.MOVE_EXISTING,markupIndex:null,content:null,fromIndex:n,toIndex:t})}function r(e,n){g.push({parentID:e,parentNode:null,type:d.REMOVE_NODE,markupIndex:null,content:null,fromIndex:n,toIndex:null})}function a(e,n){g.push({parentID:e,parentNode:null,type:d.SET_MARKUP,markupIndex:null,content:n,fromIndex:null,toIndex:null})}function s(e,n){g.push({parentID:e,parentNode:null,type:d.TEXT_CONTENT,markupIndex:null,content:n,fromIndex:null,toIndex:null})}function l(){g.length&&(u.processChildrenUpdates(g,v),c())}function c(){g.length=0,v.length=0}var u=t(62),d=t(121),p=(t(16),t(26)),h=t(249),f=t(285),m=0,g=[],v=[],y={Mixin:{_reconcilerInstantiateChildren:function(e,n,t){return h.instantiateChildren(e,n,t)},_reconcilerUpdateChildren:function(e,n,t,i){var o;return o=f(n),h.updateChildren(e,o,t,i)},mountChildren:function(e,n,t){var i=this._reconcilerInstantiateChildren(e,n,t);this._renderedChildren=i;var o=[],r=0;for(var a in i)if(i.hasOwnProperty(a)){var s=i[a],l=this._rootNodeID+a,c=p.mountComponent(s,l,n,t);s._mountIndex=r++,o.push(c)}return o},updateTextContent:function(e){m++;var n=!0;try{var t=this._renderedChildren;h.unmountChildren(t);for(var i in t)t.hasOwnProperty(i)&&this._unmountChild(t[i]);this.setTextContent(e),n=!1}finally{m--,m||(n?c():l())}},updateMarkup:function(e){m++;var n=!0;try{var t=this._renderedChildren;h.unmountChildren(t);for(var i in t)t.hasOwnProperty(i)&&this._unmountChildByName(t[i],i);this.setMarkup(e),n=!1}finally{m--,m||(n?c():l())}},updateChildren:function(e,n,t){m++;var i=!0;try{this._updateChildren(e,n,t),i=!1}finally{m--,m||(i?c():l())}},_updateChildren:function(e,n,t){var i=this._renderedChildren,o=this._reconcilerUpdateChildren(i,e,n,t);if(this._renderedChildren=o,o||i){var r,a=0,s=0;for(r in o)if(o.hasOwnProperty(r)){var l=i&&i[r],c=o[r];l===c?(this.moveChild(l,s,a),a=Math.max(l._mountIndex,a),l._mountIndex=s):(l&&(a=Math.max(l._mountIndex,a),this._unmountChild(l)),this._mountChildByNameAtIndex(c,r,s,n,t)),s++}for(r in i)!i.hasOwnProperty(r)||o&&o.hasOwnProperty(r)||this._unmountChild(i[r])}},unmountChildren:function(){var e=this._renderedChildren;h.unmountChildren(e),this._renderedChildren=null},moveChild:function(e,n,t){e._mountIndex<t&&o(this._rootNodeID,e._mountIndex,n)},createChild:function(e,n){i(this._rootNodeID,n,e._mountIndex)},removeChild:function(e){r(this._rootNodeID,e._mountIndex)},setTextContent:function(e){s(this._rootNodeID,e)},setMarkup:function(e){a(this._rootNodeID,e)},_mountChildByNameAtIndex:function(e,n,t,i,o){var r=this._rootNodeID+n,a=p.mountComponent(e,r,i,o);e._mountIndex=t,this.createChild(e,a)},_unmountChild:function(e){this.removeChild(e),e._mountIndex=null}}};e.exports=y},function(e,n,t){"use strict";var i=t(2),o={isValidOwner:function(e){return!(!e||"function"!=typeof e.attachRef||"function"!=typeof e.detachRef)},addComponentAsRefTo:function(e,n,t){o.isValidOwner(t)?void 0:i(!1),t.attachRef(n,e)},removeComponentAsRefFrom:function(e,n,t){o.isValidOwner(t)?void 0:i(!1),t.getPublicInstance().refs[n]===e.getPublicInstance()&&t.detachRef(n)}};e.exports=o},function(e,n,t){"use strict";function i(e){this.reinitializeTransaction(),this.renderToStaticMarkup=!1,this.reactMountReady=o.getPooled(null),this.useCreateElement=!e&&s.useCreateElement}var o=t(58),r=t(21),a=t(43),s=t(110),l=t(119),c=t(47),u=t(4),d={initialize:l.getSelectionInformation,close:l.restoreSelection},p={initialize:function(){var e=a.isEnabled();return a.setEnabled(!1),e},close:function(e){a.setEnabled(e)}},h={initialize:function(){this.reactMountReady.reset()},close:function(){this.reactMountReady.notifyAll()}},f=[d,p,h],m={getTransactionWrappers:function(){return f},getReactMountReady:function(){return this.reactMountReady},destructor:function(){o.release(this.reactMountReady),this.reactMountReady=null}};u(i.prototype,c.Mixin,m),r.addPoolingTo(i),e.exports=i},function(e,n,t){"use strict";function i(e,n,t){"function"==typeof e?e(n.getPublicInstance()):r.addComponentAsRefTo(n,e,t)}function o(e,n,t){"function"==typeof e?e(null):r.removeComponentAsRefFrom(n,e,t)}var r=t(264),a={};a.attachRefs=function(e,n){if(null!==n&&n!==!1){var t=n.ref;null!=t&&i(t,e,n._owner)}},a.shouldUpdateRefs=function(e,n){var t=null===e||e===!1,i=null===n||n===!1;return t||i||n._owner!==e._owner||n.ref!==e.ref},a.detachRefs=function(e,n){if(null!==n&&n!==!1){var t=n.ref;null!=t&&o(t,e,n._owner)}},e.exports=a},function(e,n){"use strict";var t={isBatchingUpdates:!1,batchedUpdates:function(e){}};e.exports=t},function(e,n,t){"use strict";function i(e){a.isValidElement(e)?void 0:f(!1);var n;try{d.injection.injectBatchingStrategy(c);var t=s.createReactRootID();return n=u.getPooled(!1),n.perform(function(){var i=h(e,null),o=i.mountComponent(t,n,p);return l.addChecksumToMarkup(o)},null)}finally{u.release(n),d.injection.injectBatchingStrategy(r)}}function o(e){a.isValidElement(e)?void 0:f(!1);var n;try{d.injection.injectBatchingStrategy(c);var t=s.createReactRootID();return n=u.getPooled(!0),n.perform(function(){var i=h(e,null);return i.mountComponent(t,n,p)},null)}finally{u.release(n),d.injection.injectBatchingStrategy(r)}}var r=t(113),a=t(10),s=t(32),l=t(120),c=t(267),u=t(269),d=t(12),p=t(33),h=t(71),f=t(2);e.exports={renderToString:i,renderToStaticMarkup:o}},function(e,n,t){"use strict";function i(e){this.reinitializeTransaction(),this.renderToStaticMarkup=e,this.reactMountReady=r.getPooled(null),this.useCreateElement=!1}var o=t(21),r=t(58),a=t(47),s=t(4),l=t(14),c={initialize:function(){this.reactMountReady.reset()},close:l},u=[c],d={getTransactionWrappers:function(){return u},getReactMountReady:function(){return this.reactMountReady},destructor:function(){r.release(this.reactMountReady),this.reactMountReady=null}};s(i.prototype,a.Mixin,d),o.addPoolingTo(i),e.exports=i},function(e,n,t){"use strict";var i=t(31),o=i.injection.MUST_USE_ATTRIBUTE,r={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},a={Properties:{clipPath:o,cx:o,cy:o,d:o,dx:o,dy:o,fill:o,fillOpacity:o,fontFamily:o,fontSize:o,fx:o,fy:o,gradientTransform:o,gradientUnits:o,markerEnd:o,markerMid:o,markerStart:o,offset:o,opacity:o,patternContentUnits:o,patternUnits:o,points:o,preserveAspectRatio:o,r:o,rx:o,ry:o,spreadMethod:o,stopColor:o,stopOpacity:o,stroke:o,strokeDasharray:o,strokeLinecap:o,strokeOpacity:o,strokeWidth:o,textAnchor:o,transform:o,version:o,viewBox:o,x1:o,x2:o,x:o,xlinkActuate:o,xlinkArcrole:o,xlinkHref:o,xlinkRole:o,xlinkShow:o,xlinkTitle:o,xlinkType:o,xmlBase:o,xmlLang:o,xmlSpace:o,y1:o,y2:o,y:o},DOMAttributeNamespaces:{xlinkActuate:r.xlink,xlinkArcrole:r.xlink,xlinkHref:r.xlink,xlinkRole:r.xlink,xlinkShow:r.xlink,xlinkTitle:r.xlink,xlinkType:r.xlink,xmlBase:r.xml,xmlLang:r.xml,xmlSpace:r.xml},DOMAttributeNames:{clipPath:"clip-path",fillOpacity:"fill-opacity",fontFamily:"font-family",
fontSize:"font-size",gradientTransform:"gradientTransform",gradientUnits:"gradientUnits",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",patternContentUnits:"patternContentUnits",patternUnits:"patternUnits",preserveAspectRatio:"preserveAspectRatio",spreadMethod:"spreadMethod",stopColor:"stop-color",stopOpacity:"stop-opacity",strokeDasharray:"stroke-dasharray",strokeLinecap:"stroke-linecap",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",textAnchor:"text-anchor",viewBox:"viewBox",xlinkActuate:"xlink:actuate",xlinkArcrole:"xlink:arcrole",xlinkHref:"xlink:href",xlinkRole:"xlink:role",xlinkShow:"xlink:show",xlinkTitle:"xlink:title",xlinkType:"xlink:type",xmlBase:"xml:base",xmlLang:"xml:lang",xmlSpace:"xml:space"}};e.exports=a},function(e,n,t){"use strict";function i(e){if("selectionStart"in e&&l.hasSelectionCapabilities(e))return{start:e.selectionStart,end:e.selectionEnd};if(window.getSelection){var n=window.getSelection();return{anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}}if(document.selection){var t=document.selection.createRange();return{parentElement:t.parentElement(),text:t.text,top:t.boundingTop,left:t.boundingLeft}}}function o(e,n){if(T||null==v||v!==u())return null;var t=i(v);if(!b||!h(b,t)){b=t;var o=c.getPooled(g.select,y,e,n);return o.type="select",o.target=v,a.accumulateTwoPhaseDispatches(o),o}return null}var r=t(15),a=t(36),s=t(7),l=t(119),c=t(27),u=t(81),d=t(130),p=t(17),h=t(83),f=r.topLevelTypes,m=s.canUseDOM&&"documentMode"in document&&document.documentMode<=11,g={select:{phasedRegistrationNames:{bubbled:p({onSelect:null}),captured:p({onSelectCapture:null})},dependencies:[f.topBlur,f.topContextMenu,f.topFocus,f.topKeyDown,f.topMouseDown,f.topMouseUp,f.topSelectionChange]}},v=null,y=null,b=null,T=!1,w=!1,E=p({onSelect:null}),C={eventTypes:g,extractEvents:function(e,n,t,i,r){if(!w)return null;switch(e){case f.topFocus:(d(n)||"true"===n.contentEditable)&&(v=n,y=t,b=null);break;case f.topBlur:v=null,y=null,b=null;break;case f.topMouseDown:T=!0;break;case f.topContextMenu:case f.topMouseUp:return T=!1,o(i,r);case f.topSelectionChange:if(m)break;case f.topKeyDown:case f.topKeyUp:return o(i,r)}return null},didPutListener:function(e,n,t){n===E&&(w=!0)}};e.exports=C},function(e,n){"use strict";var t=Math.pow(2,53),i={createReactRootIndex:function(){return Math.ceil(Math.random()*t)}};e.exports=i},function(e,n,t){"use strict";var i=t(15),o=t(78),r=t(36),a=t(9),s=t(274),l=t(27),c=t(277),u=t(279),d=t(46),p=t(276),h=t(280),f=t(38),m=t(281),g=t(14),v=t(67),y=t(2),b=t(17),T=i.topLevelTypes,w={abort:{phasedRegistrationNames:{bubbled:b({onAbort:!0}),captured:b({onAbortCapture:!0})}},blur:{phasedRegistrationNames:{bubbled:b({onBlur:!0}),captured:b({onBlurCapture:!0})}},canPlay:{phasedRegistrationNames:{bubbled:b({onCanPlay:!0}),captured:b({onCanPlayCapture:!0})}},canPlayThrough:{phasedRegistrationNames:{bubbled:b({onCanPlayThrough:!0}),captured:b({onCanPlayThroughCapture:!0})}},click:{phasedRegistrationNames:{bubbled:b({onClick:!0}),captured:b({onClickCapture:!0})}},contextMenu:{phasedRegistrationNames:{bubbled:b({onContextMenu:!0}),captured:b({onContextMenuCapture:!0})}},copy:{phasedRegistrationNames:{bubbled:b({onCopy:!0}),captured:b({onCopyCapture:!0})}},cut:{phasedRegistrationNames:{bubbled:b({onCut:!0}),captured:b({onCutCapture:!0})}},doubleClick:{phasedRegistrationNames:{bubbled:b({onDoubleClick:!0}),captured:b({onDoubleClickCapture:!0})}},drag:{phasedRegistrationNames:{bubbled:b({onDrag:!0}),captured:b({onDragCapture:!0})}},dragEnd:{phasedRegistrationNames:{bubbled:b({onDragEnd:!0}),captured:b({onDragEndCapture:!0})}},dragEnter:{phasedRegistrationNames:{bubbled:b({onDragEnter:!0}),captured:b({onDragEnterCapture:!0})}},dragExit:{phasedRegistrationNames:{bubbled:b({onDragExit:!0}),captured:b({onDragExitCapture:!0})}},dragLeave:{phasedRegistrationNames:{bubbled:b({onDragLeave:!0}),captured:b({onDragLeaveCapture:!0})}},dragOver:{phasedRegistrationNames:{bubbled:b({onDragOver:!0}),captured:b({onDragOverCapture:!0})}},dragStart:{phasedRegistrationNames:{bubbled:b({onDragStart:!0}),captured:b({onDragStartCapture:!0})}},drop:{phasedRegistrationNames:{bubbled:b({onDrop:!0}),captured:b({onDropCapture:!0})}},durationChange:{phasedRegistrationNames:{bubbled:b({onDurationChange:!0}),captured:b({onDurationChangeCapture:!0})}},emptied:{phasedRegistrationNames:{bubbled:b({onEmptied:!0}),captured:b({onEmptiedCapture:!0})}},encrypted:{phasedRegistrationNames:{bubbled:b({onEncrypted:!0}),captured:b({onEncryptedCapture:!0})}},ended:{phasedRegistrationNames:{bubbled:b({onEnded:!0}),captured:b({onEndedCapture:!0})}},error:{phasedRegistrationNames:{bubbled:b({onError:!0}),captured:b({onErrorCapture:!0})}},focus:{phasedRegistrationNames:{bubbled:b({onFocus:!0}),captured:b({onFocusCapture:!0})}},input:{phasedRegistrationNames:{bubbled:b({onInput:!0}),captured:b({onInputCapture:!0})}},keyDown:{phasedRegistrationNames:{bubbled:b({onKeyDown:!0}),captured:b({onKeyDownCapture:!0})}},keyPress:{phasedRegistrationNames:{bubbled:b({onKeyPress:!0}),captured:b({onKeyPressCapture:!0})}},keyUp:{phasedRegistrationNames:{bubbled:b({onKeyUp:!0}),captured:b({onKeyUpCapture:!0})}},load:{phasedRegistrationNames:{bubbled:b({onLoad:!0}),captured:b({onLoadCapture:!0})}},loadedData:{phasedRegistrationNames:{bubbled:b({onLoadedData:!0}),captured:b({onLoadedDataCapture:!0})}},loadedMetadata:{phasedRegistrationNames:{bubbled:b({onLoadedMetadata:!0}),captured:b({onLoadedMetadataCapture:!0})}},loadStart:{phasedRegistrationNames:{bubbled:b({onLoadStart:!0}),captured:b({onLoadStartCapture:!0})}},mouseDown:{phasedRegistrationNames:{bubbled:b({onMouseDown:!0}),captured:b({onMouseDownCapture:!0})}},mouseMove:{phasedRegistrationNames:{bubbled:b({onMouseMove:!0}),captured:b({onMouseMoveCapture:!0})}},mouseOut:{phasedRegistrationNames:{bubbled:b({onMouseOut:!0}),captured:b({onMouseOutCapture:!0})}},mouseOver:{phasedRegistrationNames:{bubbled:b({onMouseOver:!0}),captured:b({onMouseOverCapture:!0})}},mouseUp:{phasedRegistrationNames:{bubbled:b({onMouseUp:!0}),captured:b({onMouseUpCapture:!0})}},paste:{phasedRegistrationNames:{bubbled:b({onPaste:!0}),captured:b({onPasteCapture:!0})}},pause:{phasedRegistrationNames:{bubbled:b({onPause:!0}),captured:b({onPauseCapture:!0})}},play:{phasedRegistrationNames:{bubbled:b({onPlay:!0}),captured:b({onPlayCapture:!0})}},playing:{phasedRegistrationNames:{bubbled:b({onPlaying:!0}),captured:b({onPlayingCapture:!0})}},progress:{phasedRegistrationNames:{bubbled:b({onProgress:!0}),captured:b({onProgressCapture:!0})}},rateChange:{phasedRegistrationNames:{bubbled:b({onRateChange:!0}),captured:b({onRateChangeCapture:!0})}},reset:{phasedRegistrationNames:{bubbled:b({onReset:!0}),captured:b({onResetCapture:!0})}},scroll:{phasedRegistrationNames:{bubbled:b({onScroll:!0}),captured:b({onScrollCapture:!0})}},seeked:{phasedRegistrationNames:{bubbled:b({onSeeked:!0}),captured:b({onSeekedCapture:!0})}},seeking:{phasedRegistrationNames:{bubbled:b({onSeeking:!0}),captured:b({onSeekingCapture:!0})}},stalled:{phasedRegistrationNames:{bubbled:b({onStalled:!0}),captured:b({onStalledCapture:!0})}},submit:{phasedRegistrationNames:{bubbled:b({onSubmit:!0}),captured:b({onSubmitCapture:!0})}},suspend:{phasedRegistrationNames:{bubbled:b({onSuspend:!0}),captured:b({onSuspendCapture:!0})}},timeUpdate:{phasedRegistrationNames:{bubbled:b({onTimeUpdate:!0}),captured:b({onTimeUpdateCapture:!0})}},touchCancel:{phasedRegistrationNames:{bubbled:b({onTouchCancel:!0}),captured:b({onTouchCancelCapture:!0})}},touchEnd:{phasedRegistrationNames:{bubbled:b({onTouchEnd:!0}),captured:b({onTouchEndCapture:!0})}},touchMove:{phasedRegistrationNames:{bubbled:b({onTouchMove:!0}),captured:b({onTouchMoveCapture:!0})}},touchStart:{phasedRegistrationNames:{bubbled:b({onTouchStart:!0}),captured:b({onTouchStartCapture:!0})}},volumeChange:{phasedRegistrationNames:{bubbled:b({onVolumeChange:!0}),captured:b({onVolumeChangeCapture:!0})}},waiting:{phasedRegistrationNames:{bubbled:b({onWaiting:!0}),captured:b({onWaitingCapture:!0})}},wheel:{phasedRegistrationNames:{bubbled:b({onWheel:!0}),captured:b({onWheelCapture:!0})}}},E={topAbort:w.abort,topBlur:w.blur,topCanPlay:w.canPlay,topCanPlayThrough:w.canPlayThrough,topClick:w.click,topContextMenu:w.contextMenu,topCopy:w.copy,topCut:w.cut,topDoubleClick:w.doubleClick,topDrag:w.drag,topDragEnd:w.dragEnd,topDragEnter:w.dragEnter,topDragExit:w.dragExit,topDragLeave:w.dragLeave,topDragOver:w.dragOver,topDragStart:w.dragStart,topDrop:w.drop,topDurationChange:w.durationChange,topEmptied:w.emptied,topEncrypted:w.encrypted,topEnded:w.ended,topError:w.error,topFocus:w.focus,topInput:w.input,topKeyDown:w.keyDown,topKeyPress:w.keyPress,topKeyUp:w.keyUp,topLoad:w.load,topLoadedData:w.loadedData,topLoadedMetadata:w.loadedMetadata,topLoadStart:w.loadStart,topMouseDown:w.mouseDown,topMouseMove:w.mouseMove,topMouseOut:w.mouseOut,topMouseOver:w.mouseOver,topMouseUp:w.mouseUp,topPaste:w.paste,topPause:w.pause,topPlay:w.play,topPlaying:w.playing,topProgress:w.progress,topRateChange:w.rateChange,topReset:w.reset,topScroll:w.scroll,topSeeked:w.seeked,topSeeking:w.seeking,topStalled:w.stalled,topSubmit:w.submit,topSuspend:w.suspend,topTimeUpdate:w.timeUpdate,topTouchCancel:w.touchCancel,topTouchEnd:w.touchEnd,topTouchMove:w.touchMove,topTouchStart:w.touchStart,topVolumeChange:w.volumeChange,topWaiting:w.waiting,topWheel:w.wheel};for(var C in E)E[C].dependencies=[C];var S=b({onClick:null}),x={},R={eventTypes:w,extractEvents:function(e,n,t,i,o){var a=E[e];if(!a)return null;var g;switch(e){case T.topAbort:case T.topCanPlay:case T.topCanPlayThrough:case T.topDurationChange:case T.topEmptied:case T.topEncrypted:case T.topEnded:case T.topError:case T.topInput:case T.topLoad:case T.topLoadedData:case T.topLoadedMetadata:case T.topLoadStart:case T.topPause:case T.topPlay:case T.topPlaying:case T.topProgress:case T.topRateChange:case T.topReset:case T.topSeeked:case T.topSeeking:case T.topStalled:case T.topSubmit:case T.topSuspend:case T.topTimeUpdate:case T.topVolumeChange:case T.topWaiting:g=l;break;case T.topKeyPress:if(0===v(i))return null;case T.topKeyDown:case T.topKeyUp:g=u;break;case T.topBlur:case T.topFocus:g=c;break;case T.topClick:if(2===i.button)return null;case T.topContextMenu:case T.topDoubleClick:case T.topMouseDown:case T.topMouseMove:case T.topMouseOut:case T.topMouseOver:case T.topMouseUp:g=d;break;case T.topDrag:case T.topDragEnd:case T.topDragEnter:case T.topDragExit:case T.topDragLeave:case T.topDragOver:case T.topDragStart:case T.topDrop:g=p;break;case T.topTouchCancel:case T.topTouchEnd:case T.topTouchMove:case T.topTouchStart:g=h;break;case T.topScroll:g=f;break;case T.topWheel:g=m;break;case T.topCopy:case T.topCut:case T.topPaste:g=s}g?void 0:y(!1);var b=g.getPooled(a,t,i,o);return r.accumulateTwoPhaseDispatches(b),b},didPutListener:function(e,n,t){if(n===S){var i=a.getNode(e);x[e]||(x[e]=o.listen(i,"click",g))}},willDeleteListener:function(e,n){n===S&&(x[e].remove(),delete x[e])}};e.exports=R},function(e,n,t){"use strict";function i(e,n,t,i){o.call(this,e,n,t,i)}var o=t(27),r={clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}};o.augmentClass(i,r),e.exports=i},function(e,n,t){"use strict";function i(e,n,t,i){o.call(this,e,n,t,i)}var o=t(27),r={data:null};o.augmentClass(i,r),e.exports=i},function(e,n,t){"use strict";function i(e,n,t,i){o.call(this,e,n,t,i)}var o=t(46),r={dataTransfer:null};o.augmentClass(i,r),e.exports=i},function(e,n,t){"use strict";function i(e,n,t,i){o.call(this,e,n,t,i)}var o=t(38),r={relatedTarget:null};o.augmentClass(i,r),e.exports=i},function(e,n,t){"use strict";function i(e,n,t,i){o.call(this,e,n,t,i)}var o=t(27),r={data:null};o.augmentClass(i,r),e.exports=i},function(e,n,t){"use strict";function i(e,n,t,i){o.call(this,e,n,t,i)}var o=t(38),r=t(67),a=t(286),s=t(68),l={key:a,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:s,charCode:function(e){return"keypress"===e.type?r(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?r(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}};o.augmentClass(i,l),e.exports=i},function(e,n,t){"use strict";function i(e,n,t,i){o.call(this,e,n,t,i)}var o=t(38),r=t(68),a={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:r};o.augmentClass(i,a),e.exports=i},function(e,n,t){"use strict";function i(e,n,t,i){o.call(this,e,n,t,i)}var o=t(46),r={deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null};o.augmentClass(i,r),e.exports=i},function(e,n){"use strict";function t(e){for(var n=1,t=0,o=0,r=e.length,a=r&-4;o<a;){for(;o<Math.min(o+4096,a);o+=4)t+=(n+=e.charCodeAt(o))+(n+=e.charCodeAt(o+1))+(n+=e.charCodeAt(o+2))+(n+=e.charCodeAt(o+3));n%=i,t%=i}for(;o<r;o++)t+=n+=e.charCodeAt(o);return n%=i,t%=i,n|t<<16}var i=65521;e.exports=t},function(e,n,t){"use strict";function i(e,n){var t=null==n||"boolean"==typeof n||""===n;if(t)return"";var i=isNaN(n);return i||0===n||r.hasOwnProperty(e)&&r[e]?""+n:("string"==typeof n&&(n=n.trim()),n+"px")}var o=t(103),r=o.isUnitlessNumber;e.exports=i},function(e,n,t){"use strict";function i(e,n,t,i,o){return o}t(4),t(3);e.exports=i},function(e,n,t){"use strict";function i(e,n,t){var i=e,o=void 0===i[t];o&&null!=n&&(i[t]=n)}function o(e){if(null==e)return e;var n={};return r(e,i,n),n}var r=t(75);t(3);e.exports=o},function(e,n,t){"use strict";function i(e){if(e.key){var n=r[e.key]||e.key;if("Unidentified"!==n)return n}if("keypress"===e.type){var t=o(e);return 13===t?"Enter":String.fromCharCode(t)}return"keydown"===e.type||"keyup"===e.type?a[e.keyCode]||"Unidentified":""}var o=t(67),r={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},a={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};e.exports=i},function(e,n){"use strict";function t(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function i(e){for(;e;){if(e.nextSibling)return e.nextSibling;e=e.parentNode}}function o(e,n){for(var o=t(e),r=0,a=0;o;){if(3===o.nodeType){if(a=r+o.textContent.length,r<=n&&a>=n)return{node:o,offset:n-r};r=a}o=t(i(o))}}e.exports=o},function(e,n,t){"use strict";function i(e){return o.isValidElement(e)?void 0:r(!1),e}var o=t(10),r=t(2);e.exports=i},function(e,n,t){"use strict";function i(e){return'"'+o(e)+'"'}var o=t(49);e.exports=i},function(e,n,t){"use strict";var i=t(9);e.exports=i.renderSubtreeIntoContainer},function(e,n){"use strict";e.exports=function(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}},function(e,n){String.prototype.repeat||!function(){"use strict";var e=function(){try{var e={},n=Object.defineProperty,t=n(e,e,e)&&n}catch(i){}return t}(),n=function(e){if(null==this)throw TypeError();var n=String(this),t=e?Number(e):0;if(t!=t&&(t=0),t<0||t==1/0)throw RangeError();for(var i="";t;)t%2==1&&(i+=n),t>1&&(n+=n),t>>=1;return i};e?e(String.prototype,"repeat",{value:n,configurable:!0,writable:!0}):String.prototype.repeat=n}()}]));
//# sourceMappingURL=main.30d85a24.js.map