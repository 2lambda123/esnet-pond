[
    {
        "comment": "/**\n * An Aggregator works over one of 3 types of windows:\n *     - fixed        - A window which is a fixed, represented by a\n *                      duration string such as 5m. Windows are fixed in time.\n *                      If events move on from that window, they move into\n *                      a new window.\n *     - sliding      - A window which can hold a fixed number of events. The most\n *                      recent event will be included in the window, along with\n *                      the n events before it.\n *     - sliding-time - A window which is always a fixed with but moves with events.\n *                      The most recent event will be in the window, along with the\n *                      events before it within a fixed time.\n *\n * Events:\n *\n * An incoming sequence of events will be added to the aggregator. Each\n * event will have a time and data. It will also have a groupByKey that\n * may have been set upstream.\n *\n * Fixed windows:\n *\n * To key by a fixed window is simple. Each can be given a key of\n * ${groupByKey}:${index}  Such as interface1:1h-1234 and all events of\n * that key can be placed in the same collection. This window knows to:\n *   a) Aggregate and emit when triggered\n *\n * Sliding windows:\n *\n * To key a moving window, we key just by the ${groupByKey} and place\n * all events in that window. This window knows to:\n *   a) Remove old events that do not fit in the window anymore\n *   b) Aggregate and emit when triggered\n *\n * Triggering:\n *\n * The Collection is given a Trigger strategy when it is created. When\n * the Collection has each event added to it, the trigger determines if the\n * Collection should emit.\n */",
        "meta": {
            "range": [
                2230,
                6545
            ],
            "filename": "aggregator.js",
            "lineno": 58,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000021",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "An Aggregator works over one of 3 types of windows:\n    - fixed        - A window which is a fixed, represented by a\n                     duration string such as 5m. Windows are fixed in time.\n                     If events move on from that window, they move into\n                     a new window.\n    - sliding      - A window which can hold a fixed number of events. The most\n                     recent event will be included in the window, along with\n                     the n events before it.\n    - sliding-time - A window which is always a fixed with but moves with events.\n                     The most recent event will be in the window, along with the\n                     events before it within a fixed time.\n\nEvents:\n\nAn incoming sequence of events will be added to the aggregator. Each\nevent will have a time and data. It will also have a groupByKey that\nmay have been set upstream.\n\nFixed windows:\n\nTo key by a fixed window is simple. Each can be given a key of\n${groupByKey}:${index}  Such as interface1:1h-1234 and all events of\nthat key can be placed in the same collection. This window knows to:\n  a) Aggregate and emit when triggered\n\nSliding windows:\n\nTo key a moving window, we key just by the ${groupByKey} and place\nall events in that window. This window knows to:\n  a) Remove old events that do not fit in the window anymore\n  b) Aggregate and emit when triggered\n\nTriggering:\n\nThe Collection is given a Trigger strategy when it is created. When\nthe Collection has each event added to it, the trigger determines if the\nCollection should emit.",
        "name": "exports",
        "longname": "module.exports",
        "kind": "class",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2245,
                6545
            ],
            "filename": "aggregator.js",
            "lineno": 58,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000022",
                "name": "Aggregator",
                "type": "ClassDeclaration",
                "paramnames": [
                    "pipeline",
                    "options",
                    "observer"
                ]
            }
        },
        "undocumented": true,
        "name": "Aggregator",
        "longname": "Aggregator",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2287,
                3153
            ],
            "filename": "aggregator.js",
            "lineno": 60,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000026",
                "name": "Aggregator",
                "type": "MethodDefinition",
                "paramnames": [
                    "pipeline",
                    "options",
                    "observer"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Aggregator",
        "longname": "Aggregator",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2421,
                2479
            ],
            "filename": "aggregator.js",
            "lineno": 64,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000040",
                "name": "availableOperators",
                "type": "ArrayExpression",
                "value": "[\"sum\",\"avg\",\"max\",\"min\",\"count\"]"
            }
        },
        "undocumented": true,
        "name": "availableOperators",
        "longname": "<anonymous>~availableOperators",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2870,
                2903
            ],
            "filename": "aggregator.js",
            "lineno": 73,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000090",
                "name": "this._operator",
                "type": "MemberExpression",
                "value": "options.operator",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_operator",
        "longname": "Aggregator#_operator",
        "kind": "member",
        "memberof": "Aggregator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2967,
                2984
            ],
            "filename": "aggregator.js",
            "lineno": 77,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000104",
                "name": "this._fields",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_fields",
        "longname": "Aggregator#_fields",
        "kind": "member",
        "memberof": "Aggregator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2998,
                3043
            ],
            "filename": "aggregator.js",
            "lineno": 78,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000110",
                "name": "this._fields[undefined]",
                "type": "Literal",
                "value": "value",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_fields[undefined]",
        "longname": "Aggregator#_fields[undefined]",
        "kind": "member",
        "memberof": "Aggregator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3074,
                3103
            ],
            "filename": "aggregator.js",
            "lineno": 80,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000124",
                "name": "this._fields",
                "type": "MemberExpression",
                "value": "options.fields",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_fields",
        "longname": "Aggregator#_fields",
        "kind": "member",
        "memberof": "Aggregator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3124,
                3146
            ],
            "filename": "aggregator.js",
            "lineno": 83,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000132",
                "name": "this._collections",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collections",
        "longname": "Aggregator#_collections",
        "kind": "member",
        "memberof": "Aggregator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3159,
                3655
            ],
            "filename": "aggregator.js",
            "lineno": 86,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000137",
                "name": "Aggregator#emitCollections",
                "type": "MethodDefinition",
                "paramnames": [
                    "collections"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "emitCollections",
        "longname": "Aggregator#emitCollections",
        "kind": "function",
        "memberof": "Aggregator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3248,
                3254
            ],
            "filename": "aggregator.js",
            "lineno": 88,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000153",
                "name": "d",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3339,
                3361
            ],
            "filename": "aggregator.js",
            "lineno": 90,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000169",
                "name": "op",
                "type": "MemberExpression",
                "value": "c[undefined]"
            }
        },
        "undocumented": true,
        "name": "op",
        "longname": "<anonymous>~op",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3385,
                3419
            ],
            "filename": "aggregator.js",
            "lineno": 91,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000177",
                "name": "fieldValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fieldValue",
        "longname": "<anonymous>~fieldValue",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3437,
                3462
            ],
            "filename": "aggregator.js",
            "lineno": 92,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000186",
                "name": "d[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "fieldValue",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~d.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~d",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3498,
                3545
            ],
            "filename": "aggregator.js",
            "lineno": 94,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000192",
                "name": "event",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "event",
        "longname": "<anonymous>~event",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3661,
                3724
            ],
            "filename": "aggregator.js",
            "lineno": 100,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000218",
                "name": "Aggregator#done",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "Aggregator#done",
        "kind": "function",
        "memberof": "Aggregator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3730,
                6543
            ],
            "filename": "aggregator.js",
            "lineno": 104,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000230",
                "name": "Aggregator#addEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "addEvent",
        "longname": "Aggregator#addEvent",
        "kind": "function",
        "memberof": "Aggregator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3762,
                3787
            ],
            "filename": "aggregator.js",
            "lineno": 105,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000236",
                "name": "pipeline",
                "type": "MemberExpression",
                "value": "this._pipeline"
            }
        },
        "undocumented": true,
        "name": "pipeline",
        "longname": "<anonymous>~pipeline",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3842,
                3871
            ],
            "filename": "aggregator.js",
            "lineno": 107,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000248",
                "name": "timestamp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "timestamp",
        "longname": "<anonymous>~timestamp",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4842,
                4879
            ],
            "filename": "aggregator.js",
            "lineno": 128,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000255",
                "name": "windowType",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "windowType",
        "longname": "<anonymous>~windowType",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4898,
                4907
            ],
            "filename": "aggregator.js",
            "lineno": 130,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000262",
                "name": "windowKey"
            }
        },
        "undocumented": true,
        "name": "windowKey",
        "longname": "<anonymous>~windowKey",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4967,
                5040
            ],
            "filename": "aggregator.js",
            "lineno": 132,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000270",
                "name": "windowKey",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "windowKey",
        "longname": "<anonymous>~windowKey",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5079,
                5101
            ],
            "filename": "aggregator.js",
            "lineno": 134,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000283",
                "name": "windowKey",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "windowType",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "windowKey",
        "longname": "<anonymous>~windowKey",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5148,
                5177
            ],
            "filename": "aggregator.js",
            "lineno": 137,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000287",
                "name": "eventKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "eventKey",
        "longname": "<anonymous>~eventKey",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5197,
                5279
            ],
            "filename": "aggregator.js",
            "lineno": 138,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000294",
                "name": "collectionKey",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "collectionKey",
        "longname": "<anonymous>~collectionKey",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5298,
                5313
            ],
            "filename": "aggregator.js",
            "lineno": 141,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000306",
                "name": "discard",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "discard",
        "longname": "<anonymous>~discard",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5391,
                5442
            ],
            "filename": "aggregator.js",
            "lineno": 143,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000321",
                "name": "this._collections[undefined]",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collections[undefined]",
        "longname": "Aggregator#_collections[undefined]",
        "kind": "member",
        "memberof": "Aggregator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5460,
                5474
            ],
            "filename": "aggregator.js",
            "lineno": 144,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000330",
                "name": "discard",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "discard",
        "longname": "<anonymous>~discard",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5502,
                5601
            ],
            "filename": "aggregator.js",
            "lineno": 146,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000334",
                "name": "this._collections[undefined]",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collections[undefined]",
        "longname": "Aggregator#_collections[undefined]",
        "kind": "member",
        "memberof": "Aggregator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5781,
                5794
            ],
            "filename": "aggregator.js",
            "lineno": 154,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000350",
                "name": "discards",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "discards",
        "longname": "<anonymous>~discards",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5929,
                5962
            ],
            "filename": "aggregator.js",
            "lineno": 157,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000373",
                "name": "wk",
                "type": "MemberExpression",
                "value": "[0]"
            }
        },
        "undocumented": true,
        "name": "wk",
        "longname": "<anonymous>~wk",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6024,
                6039
            ],
            "filename": "aggregator.js",
            "lineno": 159,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000388",
                "name": "discards[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "c",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~discards.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~discards",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6167,
                6196
            ],
            "filename": "aggregator.js",
            "lineno": 168,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000394",
                "name": "emitOn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "emitOn",
        "longname": "<anonymous>~emitOn",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Bins a stream of events to a new stream of events with a fixed\n * frequency.\n */",
        "meta": {
            "range": [
                584,
                5017
            ],
            "filename": "binner.js",
            "lineno": 20,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000461",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "Bins a stream of events to a new stream of events with a fixed\nfrequency.",
        "name": "exports",
        "longname": "module.exports",
        "kind": "class",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                599,
                5017
            ],
            "filename": "binner.js",
            "lineno": 20,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000462",
                "name": "Binner",
                "type": "ClassDeclaration",
                "paramnames": [
                    "options",
                    "observer"
                ]
            }
        },
        "undocumented": true,
        "name": "Binner",
        "longname": "Binner",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                619,
                1188
            ],
            "filename": "binner.js",
            "lineno": 22,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000465",
                "name": "Binner",
                "type": "MethodDefinition",
                "paramnames": [
                    "options",
                    "observer"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Binner",
        "longname": "Binner",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                932,
                961
            ],
            "filename": "binner.js",
            "lineno": 30,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000498",
                "name": "this._window",
                "type": "MemberExpression",
                "value": "options.window",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_window",
        "longname": "Binner#_window",
        "kind": "member",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                971,
                1004
            ],
            "filename": "binner.js",
            "lineno": 31,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000506",
                "name": "this._operator",
                "type": "MemberExpression",
                "value": "options.operator",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_operator",
        "longname": "Binner#_operator",
        "kind": "member",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1014,
                1049
            ],
            "filename": "binner.js",
            "lineno": 32,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000514",
                "name": "this._fieldSpec",
                "type": "MemberExpression",
                "value": "options.fieldSpec",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_fieldSpec",
        "longname": "Binner#_fieldSpec",
        "kind": "member",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1059,
                1084
            ],
            "filename": "binner.js",
            "lineno": 33,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000522",
                "name": "this._observer",
                "type": "Identifier",
                "value": "observer",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_observer",
        "longname": "Binner#_observer",
        "kind": "member",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1095,
                1122
            ],
            "filename": "binner.js",
            "lineno": 35,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000528",
                "name": "this._activeBucketList",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_activeBucketList",
        "longname": "Binner#_activeBucketList",
        "kind": "member",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1132,
                1151
            ],
            "filename": "binner.js",
            "lineno": 36,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000534",
                "name": "this._lastTime",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_lastTime",
        "longname": "Binner#_lastTime",
        "kind": "member",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1161,
                1181
            ],
            "filename": "binner.js",
            "lineno": 37,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000540",
                "name": "this._lastValue",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_lastValue",
        "longname": "Binner#_lastValue",
        "kind": "member",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Gets the current bucket or returns a new one.\n     *\n     * If a new bucket is generated the result of the old bucket is emitted\n     * automatically.\n     */",
        "meta": {
            "range": [
                1368,
                2001
            ],
            "filename": "binner.js",
            "lineno": 46,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000545",
                "name": "Binner#incrementActiveBucketList",
                "type": "MethodDefinition",
                "paramnames": [
                    "key",
                    "timestamp"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Gets the current bucket or returns a new one.\n\nIf a new bucket is generated the result of the old bucket is emitted\nautomatically.",
        "name": "incrementActiveBucketList",
        "longname": "Binner#incrementActiveBucketList",
        "kind": "function",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1424,
                1439
            ],
            "filename": "binner.js",
            "lineno": 47,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000552",
                "name": "bucketList",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "bucketList",
        "longname": "<anonymous>~bucketList",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1521,
                1536
            ],
            "filename": "binner.js",
            "lineno": 50,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000574",
                "name": "bucketList",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "bucketList",
        "longname": "<anonymous>~bucketList",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1567,
                1753
            ],
            "filename": "binner.js",
            "lineno": 52,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000579",
                "name": "bucketList",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "bucketList",
        "longname": "<anonymous>~bucketList",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1891,
                1941
            ],
            "filename": "binner.js",
            "lineno": 59,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000626",
                "name": "this._activeBucketList[undefined]",
                "type": "Identifier",
                "value": "b",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_activeBucketList[undefined]",
        "longname": "Binner#_activeBucketList[undefined]",
        "kind": "member",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "/**\n     *   |-range -----------|\n     *         |-bucket------------|\n     *         |            x      |  - v2\n     *         |                   |\n     *         o                   |  - va\n     *   x     |                   |  - v1\n     *         |-intersect--|      |\n     */",
        "meta": {
            "range": [
                2293,
                2649
            ],
            "filename": "binner.js",
            "lineno": 74,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000643",
                "name": "Binner#getEdgeValues",
                "type": "MethodDefinition",
                "paramnames": [
                    "range",
                    "v1",
                    "v2",
                    "intersection"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "|-range -----------|\n        |-bucket------------|\n        |            x      |  - v2\n        |                   |\n        o                   |  - va\n  x     |                   |  - v1\n        |-intersect--|      |",
        "name": "getEdgeValues",
        "longname": "Binner#getEdgeValues",
        "kind": "function",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2352,
                2373
            ],
            "filename": "binner.js",
            "lineno": 75,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000652",
                "name": "tr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tr",
        "longname": "<anonymous>~tr",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2389,
                2424
            ],
            "filename": "binner.js",
            "lineno": 76,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000659",
                "name": "ta",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "ta",
        "longname": "<anonymous>~ta",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2440,
                2473
            ],
            "filename": "binner.js",
            "lineno": 77,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000669",
                "name": "tb",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tb",
        "longname": "<anonymous>~tb",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2489,
                2517
            ],
            "filename": "binner.js",
            "lineno": 78,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000679",
                "name": "t1",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "t1",
        "longname": "<anonymous>~t1",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2548,
                2583
            ],
            "filename": "binner.js",
            "lineno": 80,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000690",
                "name": "va",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "va",
        "longname": "va",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2597,
                2632
            ],
            "filename": "binner.js",
            "lineno": 81,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000702",
                "name": "vb",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "vb",
        "longname": "vb",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n     * Add an event, which will be assigned to a bucket.\n     * TODO: If we make the cache more general we should pass\n     * in a callback here.\n     */",
        "meta": {
            "range": [
                2817,
                4535
            ],
            "filename": "binner.js",
            "lineno": 90,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000714",
                "name": "Binner#addEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Add an event, which will be assigned to a bucket.\nTODO: If we make the cache more general we should pass\nin a callback here.",
        "name": "addEvent",
        "longname": "Binner#addEvent",
        "kind": "function",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2849,
                2873
            ],
            "filename": "binner.js",
            "lineno": 91,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000720",
                "name": "time",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "time",
        "longname": "<anonymous>~time",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2889,
                2908
            ],
            "filename": "binner.js",
            "lineno": 92,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000727",
                "name": "value",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "<anonymous>~value",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2924,
                2976
            ],
            "filename": "binner.js",
            "lineno": 93,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000734",
                "name": "key",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "<anonymous>~key",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3144,
                3190
            ],
            "filename": "binner.js",
            "lineno": 99,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000767",
                "name": "bucketTimeRange",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bucketTimeRange",
        "longname": "<anonymous>~bucketTimeRange",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3210,
                3268
            ],
            "filename": "binner.js",
            "lineno": 100,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000777",
                "name": "pointsTimeRange",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pointsTimeRange",
        "longname": "<anonymous>~pointsTimeRange",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3288,
                3348
            ],
            "filename": "binner.js",
            "lineno": 101,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000788",
                "name": "intersection",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "intersection",
        "longname": "<anonymous>~intersection",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3493,
                3495
            ],
            "filename": "binner.js",
            "lineno": 104,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000817",
                "name": "va",
                "type": "Identifier",
                "value": "va"
            }
        },
        "undocumented": true,
        "name": "va",
        "longname": "va",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3497,
                3499
            ],
            "filename": "binner.js",
            "lineno": 104,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000819",
                "name": "vb",
                "type": "Identifier",
                "value": "vb"
            }
        },
        "undocumented": true,
        "name": "vb",
        "longname": "vb",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3957,
                3972
            ],
            "filename": "binner.js",
            "lineno": 114,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000858",
                "name": "deleteList",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "deleteList",
        "longname": "<anonymous>~deleteList",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4464,
                4490
            ],
            "filename": "binner.js",
            "lineno": 127,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000934",
                "name": "this._lastTime[undefined]",
                "type": "Identifier",
                "value": "time",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_lastTime[undefined]",
        "longname": "Binner#_lastTime[undefined]",
        "kind": "member",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4500,
                4528
            ],
            "filename": "binner.js",
            "lineno": 128,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000942",
                "name": "this._lastValue[undefined]",
                "type": "Identifier",
                "value": "value",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_lastValue[undefined]",
        "longname": "Binner#_lastValue[undefined]",
        "kind": "member",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Forces the current buckets to emit\n     */",
        "meta": {
            "range": [
                4599,
                4895
            ],
            "filename": "binner.js",
            "lineno": 134,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000949",
                "name": "Binner#flush",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Forces the current buckets to emit",
        "name": "flush",
        "longname": "Binner#flush",
        "kind": "function",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4861,
                4888
            ],
            "filename": "binner.js",
            "lineno": 142,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000990",
                "name": "this._activeBucketList",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_activeBucketList",
        "longname": "Binner#_activeBucketList",
        "kind": "member",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Set the emit callback after the constructor\n     */",
        "meta": {
            "range": [
                4968,
                5015
            ],
            "filename": "binner.js",
            "lineno": 148,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100000995",
                "name": "Binner#onEmit",
                "type": "MethodDefinition",
                "paramnames": [
                    "cb"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Set the emit callback after the constructor",
        "name": "onEmit",
        "longname": "Binner#onEmit",
        "kind": "function",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4989,
                5008
            ],
            "filename": "binner.js",
            "lineno": 149,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001001",
                "name": "this._observer",
                "type": "Identifier",
                "value": "cb",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_observer",
        "longname": "Binner#_observer",
        "kind": "member",
        "memberof": "Binner",
        "scope": "instance"
    },
    {
        "comment": "/**\n * A collection is a list of Events. You can construct one out of either\n * another collection, or a list of Events. You can addEvent() to a collection\n * and a new collection will be returned.\n *\n * Basic operations on the list of events are also possible. You\n * can iterate over the collection with a for..of loop, get the size()\n * of the collection and access a specific element with at().\n */",
        "meta": {
            "range": [
                939,
                8167
            ],
            "filename": "collection.js",
            "lineno": 26,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001027",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "A collection is a list of Events. You can construct one out of either\nanother collection, or a list of Events. You can addEvent() to a collection\nand a new collection will be returned.\n\nBasic operations on the list of events are also possible. You\ncan iterate over the collection with a for..of loop, get the size()\nof the collection and access a specific element with at().",
        "name": "exports",
        "longname": "module.exports",
        "kind": "class",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                954,
                8167
            ],
            "filename": "collection.js",
            "lineno": 26,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001028",
                "name": "Collection",
                "type": "ClassDeclaration",
                "paramnames": [
                    "arg1",
                    "copyEvents"
                ]
            }
        },
        "undocumented": true,
        "name": "Collection",
        "longname": "Collection",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                996,
                2082
            ],
            "filename": "collection.js",
            "lineno": 28,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001032",
                "name": "Collection",
                "type": "MethodDefinition",
                "paramnames": [
                    "arg1",
                    "copyEvents"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Collection",
        "longname": "Collection",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1061,
                1097
            ],
            "filename": "collection.js",
            "lineno": 31,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001044",
                "name": "this._id",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_id",
        "longname": "Collection#_id",
        "kind": "member",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1107,
                1129
            ],
            "filename": "collection.js",
            "lineno": 32,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001054",
                "name": "this._eventList",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_eventList",
        "longname": "Collection#_eventList",
        "kind": "member",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1173,
                1190
            ],
            "filename": "collection.js",
            "lineno": 33,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001060",
                "name": "this._type",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_type",
        "longname": "Collection#_type",
        "kind": "member",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1285,
                1323
            ],
            "filename": "collection.js",
            "lineno": 36,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001070",
                "name": "this._eventList",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_eventList",
        "longname": "Collection#_eventList",
        "kind": "member",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1392,
                1404
            ],
            "filename": "collection.js",
            "lineno": 38,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001084",
                "name": "other",
                "type": "Identifier",
                "value": "arg1"
            }
        },
        "undocumented": true,
        "name": "other",
        "longname": "<anonymous>~other",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1570,
                1604
            ],
            "filename": "collection.js",
            "lineno": 41,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001099",
                "name": "this._eventList",
                "type": "MemberExpression",
                "value": "other._eventList",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_eventList",
        "longname": "Collection#_eventList",
        "kind": "member",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1622,
                1646
            ],
            "filename": "collection.js",
            "lineno": 42,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001107",
                "name": "this._type",
                "type": "MemberExpression",
                "value": "other._type",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_type",
        "longname": "Collection#_type",
        "kind": "member",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1685,
                1723
            ],
            "filename": "collection.js",
            "lineno": 44,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001116",
                "name": "this._eventList",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_eventList",
        "longname": "Collection#_eventList",
        "kind": "member",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1795,
                1806
            ],
            "filename": "collection.js",
            "lineno": 47,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001132",
                "name": "events",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "events",
        "longname": "<anonymous>~events",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1935,
                1979
            ],
            "filename": "collection.js",
            "lineno": 52,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001158",
                "name": "this._eventList",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_eventList",
        "longname": "Collection#_eventList",
        "kind": "member",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2043,
                2065
            ],
            "filename": "collection.js",
            "lineno": 54,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001177",
                "name": "this._eventList",
                "type": "Identifier",
                "value": "arg1",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_eventList",
        "longname": "Collection#_eventList",
        "kind": "member",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2088,
                2143
            ],
            "filename": "collection.js",
            "lineno": 58,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001182",
                "name": "Collection#toJSON",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "toJSON",
        "longname": "Collection#toJSON",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2149,
                2213
            ],
            "filename": "collection.js",
            "lineno": 62,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001193",
                "name": "Collection#toString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "Collection#toString",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the Event object type in this collection\n     */",
        "meta": {
            "range": [
                2291,
                2332
            ],
            "filename": "collection.js",
            "lineno": 69,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001206",
                "name": "Collection#type",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the Event object type in this collection",
        "name": "type",
        "longname": "Collection#type",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the number of items in this collection\n     */",
        "meta": {
            "range": [
                2408,
                2459
            ],
            "filename": "collection.js",
            "lineno": 76,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001214",
                "name": "Collection#size",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the number of items in this collection",
        "name": "size",
        "longname": "Collection#size",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the number of valid items in this collection.\n     *\n     * Uses the fieldName and optionally a function passed in\n     * to look up values in all events. It then counts the number\n     * that are considered valid, i.e. are not NaN, undefined or null.\n     */",
        "meta": {
            "range": [
                2748,
                2941
            ],
            "filename": "collection.js",
            "lineno": 87,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001224",
                "name": "Collection#sizeValid",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the number of valid items in this collection.\n\nUses the fieldName and optionally a function passed in\nto look up values in all events. It then counts the number\nthat are considered valid, i.e. are not NaN, undefined or null.",
        "name": "sizeValid",
        "longname": "Collection#sizeValid",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2793,
                2802
            ],
            "filename": "collection.js",
            "lineno": 88,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001232",
                "name": "count",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "count",
        "longname": "<anonymous>~count",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2823,
                2824
            ],
            "filename": "collection.js",
            "lineno": 89,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001237",
                "name": "e"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Returns an item in the collection by its position\n     */",
        "meta": {
            "range": [
                3020,
                3092
            ],
            "filename": "collection.js",
            "lineno": 98,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001256",
                "name": "Collection#at",
                "type": "MethodDefinition",
                "paramnames": [
                    "pos"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns an item in the collection by its position",
        "name": "at",
        "longname": "Collection#at",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3098,
                3240
            ],
            "filename": "collection.js",
            "lineno": 102,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001273",
                "name": "Collection#atTime",
                "type": "MethodDefinition",
                "paramnames": [
                    "time"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "atTime",
        "longname": "Collection#atTime",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3127,
                3150
            ],
            "filename": "collection.js",
            "lineno": 103,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001279",
                "name": "pos",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "<anonymous>~pos",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3246,
                3329
            ],
            "filename": "collection.js",
            "lineno": 109,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001302",
                "name": "Collection#first",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "first",
        "longname": "Collection#first",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3335,
                3431
            ],
            "filename": "collection.js",
            "lineno": 115,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001318",
                "name": "Collection#last",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "Collection#last",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3437,
                3884
            ],
            "filename": "collection.js",
            "lineno": 121,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001339",
                "name": "Collection#bisect",
                "type": "MethodDefinition",
                "paramnames": [
                    "t",
                    "b"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "bisect",
        "longname": "Collection#bisect",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3466,
                3483
            ],
            "filename": "collection.js",
            "lineno": 122,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001346",
                "name": "tms",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tms",
        "longname": "<anonymous>~tms",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3499,
                3517
            ],
            "filename": "collection.js",
            "lineno": 123,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001353",
                "name": "size",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "size",
        "longname": "<anonymous>~size",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3531,
                3541
            ],
            "filename": "collection.js",
            "lineno": 124,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001360",
                "name": "i",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3656,
                3693
            ],
            "filename": "collection.js",
            "lineno": 131,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001379",
                "name": "ts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "ts",
        "longname": "<anonymous>~ts",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3890,
                3996
            ],
            "filename": "collection.js",
            "lineno": 141,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001419",
                "name": "Collection#events",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "events",
        "longname": "Collection#events",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3920,
                3925
            ],
            "filename": "collection.js",
            "lineno": 142,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001425",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4002,
                4053
            ],
            "filename": "collection.js",
            "lineno": 147,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001444",
                "name": "Collection#eventList",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "eventList",
        "longname": "Collection#eventList",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * From the range of times, or Indexes within the TimeSeries, return\n     * the extents of the TimeSeries as a TimeRange.\n     * @return {TimeRange} The extents of the TimeSeries\n     */",
        "meta": {
            "range": [
                4294,
                4562
            ],
            "filename": "collection.js",
            "lineno": 161,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001452",
                "name": "Collection#range",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "From the range of times, or Indexes within the TimeSeries, return\nthe extents of the TimeSeries as a TimeRange.",
        "returns": [
            {
                "type": {
                    "names": [
                        "TimeRange"
                    ]
                },
                "description": "The extents of the TimeSeries"
            }
        ],
        "name": "range",
        "longname": "Collection#range",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4316,
                4319
            ],
            "filename": "collection.js",
            "lineno": 162,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001457",
                "name": "min"
            }
        },
        "undocumented": true,
        "name": "min",
        "longname": "<anonymous>~min",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4333,
                4336
            ],
            "filename": "collection.js",
            "lineno": 163,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001460",
                "name": "max"
            }
        },
        "undocumented": true,
        "name": "max",
        "longname": "<anonymous>~max",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4357,
                4358
            ],
            "filename": "collection.js",
            "lineno": 164,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001464",
                "name": "e"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4420,
                4435
            ],
            "filename": "collection.js",
            "lineno": 165,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001482",
                "name": "min",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "min",
        "longname": "<anonymous>~min",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4476,
                4489
            ],
            "filename": "collection.js",
            "lineno": 166,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001499",
                "name": "max",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "max",
        "longname": "<anonymous>~max",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4610,
                4789
            ],
            "filename": "collection.js",
            "lineno": 175,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001514",
                "name": "Collection#addEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "addEvent",
        "longname": "Collection#addEvent",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4670,
                4699
            ],
            "filename": "collection.js",
            "lineno": 177,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001526",
                "name": "result",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4709,
                4759
            ],
            "filename": "collection.js",
            "lineno": 178,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001532",
                "name": "result._eventList",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_eventList",
        "longname": "<anonymous>~result._eventList",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Perform a slice of events within the Collection, returns a new\n     * Collection representing a portion of this TimeSeries from begin up to\n     * but not including end.\n     */",
        "meta": {
            "range": [
                4988,
                5145
            ],
            "filename": "collection.js",
            "lineno": 187,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001547",
                "name": "Collection#slice",
                "type": "MethodDefinition",
                "paramnames": [
                    "begin",
                    "end"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Perform a slice of events within the Collection, returns a new\nCollection representing a portion of this TimeSeries from begin up to\nbut not including end.",
        "name": "slice",
        "longname": "Collection#slice",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5022,
                5080
            ],
            "filename": "collection.js",
            "lineno": 188,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001554",
                "name": "sliced",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sliced",
        "longname": "<anonymous>~sliced",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5090,
                5115
            ],
            "filename": "collection.js",
            "lineno": 189,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001567",
                "name": "sliced._type",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "this._type",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_type",
        "longname": "<anonymous>~sliced._type",
        "kind": "member",
        "memberof": "<anonymous>~sliced",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5151,
                5394
            ],
            "filename": "collection.js",
            "lineno": 193,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001576",
                "name": "Collection#filter",
                "type": "MethodDefinition",
                "paramnames": [
                    "func"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "filter",
        "longname": "Collection#filter",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5180,
                5202
            ],
            "filename": "collection.js",
            "lineno": 194,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001582",
                "name": "filteredEventList",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "filteredEventList",
        "longname": "<anonymous>~filteredEventList",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5223,
                5224
            ],
            "filename": "collection.js",
            "lineno": 195,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001587",
                "name": "e"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5400,
                5568
            ],
            "filename": "collection.js",
            "lineno": 203,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001609",
                "name": "Collection#map",
                "type": "MethodDefinition",
                "paramnames": [
                    "func"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "Collection#map",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5426,
                5437
            ],
            "filename": "collection.js",
            "lineno": 204,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001615",
                "name": "result",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5458,
                5459
            ],
            "filename": "collection.js",
            "lineno": 205,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001620",
                "name": "e"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Returns a new Collection by testing the fieldSpec\n     * values for being valid (not NaN, null or undefined).\n     * The resulting Collection will be clean for that fieldSpec.\n     */",
        "meta": {
            "range": [
                5773,
                6036
            ],
            "filename": "collection.js",
            "lineno": 216,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001639",
                "name": "Collection#clean",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns a new Collection by testing the fieldSpec\nvalues for being valid (not NaN, null or undefined).\nThe resulting Collection will be clean for that fieldSpec.",
        "name": "clean",
        "longname": "Collection#clean",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5806,
                5825
            ],
            "filename": "collection.js",
            "lineno": 217,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001645",
                "name": "filteredEvents",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "filteredEvents",
        "longname": "<anonymous>~filteredEvents",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5846,
                5847
            ],
            "filename": "collection.js",
            "lineno": 218,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001650",
                "name": "e"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6107,
                6183
            ],
            "filename": "collection.js",
            "lineno": 230,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001675",
                "name": "Collection#count",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "count",
        "longname": "Collection#count",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6189,
                6408
            ],
            "filename": "collection.js",
            "lineno": 234,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001688",
                "name": "Collection#sum",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "sum",
        "longname": "Collection#sum",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6228,
                6235
            ],
            "filename": "collection.js",
            "lineno": 235,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001696",
                "name": "sum",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "sum",
        "longname": "<anonymous>~sum",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6251,
                6285
            ],
            "filename": "collection.js",
            "lineno": 236,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001700",
                "name": "collection",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "collection",
        "longname": "<anonymous>~collection",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6306,
                6307
            ],
            "filename": "collection.js",
            "lineno": 237,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001709",
                "name": "e"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6346,
                6371
            ],
            "filename": "collection.js",
            "lineno": 238,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001717",
                "name": "sum",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sum",
        "longname": "<anonymous>~sum",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6414,
                6584
            ],
            "filename": "collection.js",
            "lineno": 243,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001726",
                "name": "Collection#avg",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "avg",
        "longname": "Collection#avg",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6455,
                6480
            ],
            "filename": "collection.js",
            "lineno": 244,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001734",
                "name": "sum",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sum",
        "longname": "<anonymous>~sum",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6496,
                6529
            ],
            "filename": "collection.js",
            "lineno": 245,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001742",
                "name": "count",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "count",
        "longname": "<anonymous>~count",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6590,
                6850
            ],
            "filename": "collection.js",
            "lineno": 249,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001756",
                "name": "Collection#max",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "max",
        "longname": "Collection#max",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6631,
                6665
            ],
            "filename": "collection.js",
            "lineno": 250,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001764",
                "name": "collection",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "collection",
        "longname": "<anonymous>~collection",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6679,
                6682
            ],
            "filename": "collection.js",
            "lineno": 251,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001772",
                "name": "max"
            }
        },
        "undocumented": true,
        "name": "max",
        "longname": "<anonymous>~max",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6703,
                6704
            ],
            "filename": "collection.js",
            "lineno": 252,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001776",
                "name": "e"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6749,
                6771
            ],
            "filename": "collection.js",
            "lineno": 253,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001784",
                "name": "v",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~v",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6806,
                6813
            ],
            "filename": "collection.js",
            "lineno": 254,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001799",
                "name": "max",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "v",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "max",
        "longname": "<anonymous>~max",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6856,
                7116
            ],
            "filename": "collection.js",
            "lineno": 259,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001804",
                "name": "Collection#min",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "min",
        "longname": "Collection#min",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6897,
                6931
            ],
            "filename": "collection.js",
            "lineno": 260,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001812",
                "name": "collection",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "collection",
        "longname": "<anonymous>~collection",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6945,
                6948
            ],
            "filename": "collection.js",
            "lineno": 261,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001820",
                "name": "min"
            }
        },
        "undocumented": true,
        "name": "min",
        "longname": "<anonymous>~min",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6969,
                6970
            ],
            "filename": "collection.js",
            "lineno": 262,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001824",
                "name": "e"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7015,
                7037
            ],
            "filename": "collection.js",
            "lineno": 263,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001832",
                "name": "v",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~v",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7072,
                7079
            ],
            "filename": "collection.js",
            "lineno": 264,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001847",
                "name": "min",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "v",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "min",
        "longname": "<anonymous>~min",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7122,
                7191
            ],
            "filename": "collection.js",
            "lineno": 269,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001852",
                "name": "Collection#mean",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "mean",
        "longname": "Collection#mean",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7197,
                7804
            ],
            "filename": "collection.js",
            "lineno": 273,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001865",
                "name": "Collection#median",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "median",
        "longname": "Collection#median",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7241,
                7277
            ],
            "filename": "collection.js",
            "lineno": 274,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001873",
                "name": "searchKeyPath",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "searchKeyPath",
        "longname": "<anonymous>~searchKeyPath",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7293,
                7327
            ],
            "filename": "collection.js",
            "lineno": 275,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001881",
                "name": "collection",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "collection",
        "longname": "<anonymous>~collection",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7343,
                7442
            ],
            "filename": "collection.js",
            "lineno": 276,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001889",
                "name": "sorted",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sorted",
        "longname": "<anonymous>~sorted",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7459,
                7490
            ],
            "filename": "collection.js",
            "lineno": 280,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001909",
                "name": "i",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7547,
                7597
            ],
            "filename": "collection.js",
            "lineno": 282,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001930",
                "name": "a",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "a",
        "longname": "<anonymous>~a",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7617,
                7671
            ],
            "filename": "collection.js",
            "lineno": 283,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001946",
                "name": "b",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "b",
        "longname": "<anonymous>~b",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7810,
                8165
            ],
            "filename": "collection.js",
            "lineno": 290,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001984",
                "name": "Collection#stdev",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "stdev",
        "longname": "Collection#stdev",
        "kind": "function",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7853,
                7887
            ],
            "filename": "collection.js",
            "lineno": 291,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100001992",
                "name": "collection",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "collection",
        "longname": "<anonymous>~collection",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7903,
                7930
            ],
            "filename": "collection.js",
            "lineno": 292,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002000",
                "name": "mean",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mean",
        "longname": "<anonymous>~mean",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7946,
                7979
            ],
            "filename": "collection.js",
            "lineno": 293,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002008",
                "name": "count",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "count",
        "longname": "<anonymous>~count",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7993,
                8001
            ],
            "filename": "collection.js",
            "lineno": 294,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002016",
                "name": "sums",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "sums",
        "longname": "<anonymous>~sums",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8022,
                8023
            ],
            "filename": "collection.js",
            "lineno": 295,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002021",
                "name": "e"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8062,
                8108
            ],
            "filename": "collection.js",
            "lineno": 296,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002029",
                "name": "sums",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sums",
        "longname": "<anonymous>~sums",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * A sink for processing chains. Outputs a Collection of events\n * each based on the emit on trigger spec. Currently this means it\n * will either output everytime and event comes in, or just when\n * Collections are done with and are about to be discarded.\n */",
        "meta": {
            "range": [
                734,
                3662
            ],
            "filename": "collector.js",
            "lineno": 22,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002064",
                "name": "exports.",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "A sink for processing chains. Outputs a Collection of events\neach based on the emit on trigger spec. Currently this means it\nwill either output everytime and event comes in, or just when\nCollections are done with and are about to be discarded.",
        "name": "",
        "longname": "",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                741,
                3662
            ],
            "filename": "collector.js",
            "lineno": 22,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002065",
                "name": "FixedWindowCollector",
                "type": "ClassDeclaration",
                "paramnames": [
                    "observer",
                    "windowDuration",
                    "emitOn"
                ]
            }
        },
        "undocumented": true,
        "name": "FixedWindowCollector",
        "longname": "FixedWindowCollector",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                775,
                996
            ],
            "filename": "collector.js",
            "lineno": 24,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002068",
                "name": "FixedWindowCollector",
                "type": "MethodDefinition",
                "paramnames": [
                    "observer",
                    "windowDuration",
                    "emitOn"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "FixedWindowCollector",
        "longname": "FixedWindowCollector",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                853,
                890
            ],
            "filename": "collector.js",
            "lineno": 26,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002080",
                "name": "this._windowDuration",
                "type": "Identifier",
                "value": "windowDuration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_windowDuration",
        "longname": "FixedWindowCollector#_windowDuration",
        "kind": "member",
        "memberof": "FixedWindowCollector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                900,
                921
            ],
            "filename": "collector.js",
            "lineno": 27,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002086",
                "name": "this._emitOn",
                "type": "Identifier",
                "value": "emitOn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_emitOn",
        "longname": "FixedWindowCollector#_emitOn",
        "kind": "member",
        "memberof": "FixedWindowCollector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                931,
                956
            ],
            "filename": "collector.js",
            "lineno": 28,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002092",
                "name": "this._observer",
                "type": "Identifier",
                "value": "observer",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_observer",
        "longname": "FixedWindowCollector#_observer",
        "kind": "member",
        "memberof": "FixedWindowCollector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                967,
                989
            ],
            "filename": "collector.js",
            "lineno": 30,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002098",
                "name": "this._collections",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collections",
        "longname": "FixedWindowCollector#_collections",
        "kind": "member",
        "memberof": "FixedWindowCollector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1002,
                1176
            ],
            "filename": "collector.js",
            "lineno": 33,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002103",
                "name": "FixedWindowCollector#emitCollections",
                "type": "MethodDefinition",
                "paramnames": [
                    "collections"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "emitCollections",
        "longname": "FixedWindowCollector#emitCollections",
        "kind": "function",
        "memberof": "FixedWindowCollector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1182,
                1245
            ],
            "filename": "collector.js",
            "lineno": 41,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002130",
                "name": "FixedWindowCollector#done",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "FixedWindowCollector#done",
        "kind": "function",
        "memberof": "FixedWindowCollector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1251,
                1306
            ],
            "filename": "collector.js",
            "lineno": 45,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002142",
                "name": "FixedWindowCollector#collections",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "collections",
        "longname": "FixedWindowCollector#collections",
        "kind": "function",
        "memberof": "FixedWindowCollector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1312,
                3660
            ],
            "filename": "collector.js",
            "lineno": 49,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002150",
                "name": "FixedWindowCollector#addEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "addEvent",
        "longname": "FixedWindowCollector#addEvent",
        "kind": "function",
        "memberof": "FixedWindowCollector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1344,
                1373
            ],
            "filename": "collector.js",
            "lineno": 50,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002156",
                "name": "timestamp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "timestamp",
        "longname": "<anonymous>~timestamp",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1973,
                2096
            ],
            "filename": "collector.js",
            "lineno": 68,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002163",
                "name": "windowKey",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "windowKey",
        "longname": "<anonymous>~windowKey",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2112,
                2141
            ],
            "filename": "collector.js",
            "lineno": 71,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002179",
                "name": "eventKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "eventKey",
        "longname": "<anonymous>~eventKey",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2157,
                2235
            ],
            "filename": "collector.js",
            "lineno": 72,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002186",
                "name": "collectionKey",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "collectionKey",
        "longname": "<anonymous>~collectionKey",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2250,
                2265
            ],
            "filename": "collector.js",
            "lineno": 75,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002198",
                "name": "discard",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "discard",
        "longname": "<anonymous>~discard",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2335,
                2386
            ],
            "filename": "collector.js",
            "lineno": 77,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002213",
                "name": "this._collections[undefined]",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collections[undefined]",
        "longname": "FixedWindowCollector#_collections[undefined]",
        "kind": "member",
        "memberof": "FixedWindowCollector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2400,
                2414
            ],
            "filename": "collector.js",
            "lineno": 78,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002222",
                "name": "discard",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "discard",
        "longname": "<anonymous>~discard",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2503,
                2598
            ],
            "filename": "collector.js",
            "lineno": 83,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002238",
                "name": "this._collections[undefined]",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collections[undefined]",
        "longname": "FixedWindowCollector#_collections[undefined]",
        "kind": "member",
        "memberof": "FixedWindowCollector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2750,
                2763
            ],
            "filename": "collector.js",
            "lineno": 91,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002254",
                "name": "discards",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "discards",
        "longname": "<anonymous>~discards",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2860,
                2893
            ],
            "filename": "collector.js",
            "lineno": 94,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002273",
                "name": "wk",
                "type": "MemberExpression",
                "value": "[0]"
            }
        },
        "undocumented": true,
        "name": "wk",
        "longname": "<anonymous>~wk",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3064,
                3079
            ],
            "filename": "collector.js",
            "lineno": 98,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002305",
                "name": "discards[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "c",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~discards.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~discards",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3234,
                3255
            ],
            "filename": "collector.js",
            "lineno": 109,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002318",
                "name": "emitOn",
                "type": "MemberExpression",
                "value": "this._emitOn"
            }
        },
        "undocumented": true,
        "name": "emitOn",
        "longname": "<anonymous>~emitOn",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * A sink for processing chains. Maintains a single global collection.\n * This is used for quick and dirty collections.\n *\n * The collection will catch all events, regardless\n * of upstream groupBy or windowing in the pipeline.\n *\n * If you want that, use the fixed window collector.\n */",
        "meta": {
            "range": [
                3956,
                4419
            ],
            "filename": "collector.js",
            "lineno": 133,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002383",
                "name": "exports.",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "A sink for processing chains. Maintains a single global collection.\nThis is used for quick and dirty collections.\n\nThe collection will catch all events, regardless\nof upstream groupBy or windowing in the pipeline.\n\nIf you want that, use the fixed window collector.",
        "name": "",
        "longname": "",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3963,
                4419
            ],
            "filename": "collector.js",
            "lineno": 133,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002384",
                "name": "Collector",
                "type": "ClassDeclaration",
                "paramnames": [
                    "observer"
                ]
            }
        },
        "undocumented": true,
        "name": "Collector",
        "longname": "Collector",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3986,
                4095
            ],
            "filename": "collector.js",
            "lineno": 135,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002387",
                "name": "Collector",
                "type": "MethodDefinition",
                "paramnames": [
                    "observer"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Collector",
        "longname": "Collector",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4018,
                4043
            ],
            "filename": "collector.js",
            "lineno": 136,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002393",
                "name": "this._observer",
                "type": "Identifier",
                "value": "observer",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_observer",
        "longname": "Collector#_observer",
        "kind": "member",
        "memberof": "Collector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4053,
                4088
            ],
            "filename": "collector.js",
            "lineno": 137,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002399",
                "name": "this._collection",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collection",
        "longname": "Collector#_collection",
        "kind": "member",
        "memberof": "Collector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4101,
                4185
            ],
            "filename": "collector.js",
            "lineno": 140,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002405",
                "name": "Collector#emitCollection",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "emitCollection",
        "longname": "Collector#emitCollection",
        "kind": "function",
        "memberof": "Collector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4191,
                4237
            ],
            "filename": "collector.js",
            "lineno": 144,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002421",
                "name": "Collector#done",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "Collector#done",
        "kind": "function",
        "memberof": "Collector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4243,
                4296
            ],
            "filename": "collector.js",
            "lineno": 148,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002430",
                "name": "Collector#collection",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "collection",
        "longname": "Collector#collection",
        "kind": "function",
        "memberof": "Collector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4302,
                4417
            ],
            "filename": "collector.js",
            "lineno": 152,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002438",
                "name": "Collector#addEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "addEvent",
        "longname": "Collector#addEvent",
        "kind": "function",
        "memberof": "Collector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4328,
                4379
            ],
            "filename": "collector.js",
            "lineno": 153,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002444",
                "name": "this._collection",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collection",
        "longname": "Collector#_collection",
        "kind": "member",
        "memberof": "Collector",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                554,
                5709
            ],
            "filename": "converter.js",
            "lineno": 17,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002485",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "class",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                569,
                5709
            ],
            "filename": "converter.js",
            "lineno": 17,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002486",
                "name": "Converter",
                "type": "ClassDeclaration",
                "paramnames": [
                    "options",
                    "observer"
                ]
            }
        },
        "undocumented": true,
        "name": "Converter",
        "longname": "Converter",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/**\n     * `groupBy` may be either:\n     *     * A function which takes an event and returns a string as a key\n     *     * A string, which corresponds to a column in the event, like \"name\"\n     *     * A list, which corresponds to a list of columns to join together for the key\n     * `observer` is the callback that will receive the emitted events\n     */",
        "meta": {
            "range": [
                954,
                1809
            ],
            "filename": "converter.js",
            "lineno": 26,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002489",
                "name": "Converter",
                "type": "MethodDefinition",
                "paramnames": [
                    "options",
                    "observer"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "`groupBy` may be either:\n    * A function which takes an event and returns a string as a key\n    * A string, which corresponds to a column in the event, like \"name\"\n    * A list, which corresponds to a list of columns to join together for the key\n`observer` is the callback that will receive the emitted events",
        "name": "Converter",
        "longname": "Converter",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1257,
                1287
            ],
            "filename": "converter.js",
            "lineno": 33,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002528",
                "name": "this._convertTo",
                "type": "MemberExpression",
                "value": "options.type",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_convertTo",
        "longname": "Converter#_convertTo",
        "kind": "member",
        "memberof": "Converter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1574,
                1629
            ],
            "filename": "converter.js",
            "lineno": 39,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002567",
                "name": "this._duration",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_duration",
        "longname": "Converter#_duration",
        "kind": "member",
        "memberof": "Converter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1647,
                1686
            ],
            "filename": "converter.js",
            "lineno": 40,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002579",
                "name": "this._durationString",
                "type": "MemberExpression",
                "value": "options.duration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_durationString",
        "longname": "Converter#_durationString",
        "kind": "member",
        "memberof": "Converter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1720,
                1767
            ],
            "filename": "converter.js",
            "lineno": 43,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002587",
                "name": "this._alignment",
                "type": "LogicalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_alignment",
        "longname": "Converter#_alignment",
        "kind": "member",
        "memberof": "Converter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1777,
                1802
            ],
            "filename": "converter.js",
            "lineno": 44,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002597",
                "name": "this._observer",
                "type": "Identifier",
                "value": "observer",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_observer",
        "longname": "Converter#_observer",
        "kind": "member",
        "memberof": "Converter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1815,
                3104
            ],
            "filename": "converter.js",
            "lineno": 47,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002602",
                "name": "Converter#convertEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "convertEvent",
        "longname": "Converter#convertEvent",
        "kind": "function",
        "memberof": "Converter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1979,
                2006
            ],
            "filename": "converter.js",
            "lineno": 51,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002624",
                "name": "alignment",
                "type": "MemberExpression",
                "value": "this._alignment"
            }
        },
        "undocumented": true,
        "name": "alignment",
        "longname": "<anonymous>~alignment",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2024,
                2029
            ],
            "filename": "converter.js",
            "lineno": 52,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002630",
                "name": "begin"
            }
        },
        "undocumented": true,
        "name": "begin",
        "longname": "<anonymous>~begin",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2031,
                2034
            ],
            "filename": "converter.js",
            "lineno": 52,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002632",
                "name": "end"
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "<anonymous>~end",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2118,
                2143
            ],
            "filename": "converter.js",
            "lineno": 55,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002639",
                "name": "begin",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "begin",
        "longname": "<anonymous>~begin",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2165,
                2216
            ],
            "filename": "converter.js",
            "lineno": 56,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002646",
                "name": "end",
                "type": "NewExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "<anonymous>~end",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2296,
                2367
            ],
            "filename": "converter.js",
            "lineno": 59,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002663",
                "name": "begin",
                "type": "NewExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "begin",
        "longname": "<anonymous>~begin",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2389,
                2458
            ],
            "filename": "converter.js",
            "lineno": 60,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002682",
                "name": "end",
                "type": "NewExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "<anonymous>~end",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2538,
                2561
            ],
            "filename": "converter.js",
            "lineno": 63,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002704",
                "name": "end",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "<anonymous>~end",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2583,
                2636
            ],
            "filename": "converter.js",
            "lineno": 64,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002711",
                "name": "begin",
                "type": "NewExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "begin",
        "longname": "<anonymous>~begin",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2697,
                2736
            ],
            "filename": "converter.js",
            "lineno": 67,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002726",
                "name": "timeRange",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "timeRange",
        "longname": "<anonymous>~timeRange",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2888,
                2917
            ],
            "filename": "converter.js",
            "lineno": 70,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002753",
                "name": "timestamp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "timestamp",
        "longname": "<anonymous>~timestamp",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2937,
                3004
            ],
            "filename": "converter.js",
            "lineno": 71,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002760",
                "name": "indexString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "indexString",
        "longname": "<anonymous>~indexString",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3110,
                4050
            ],
            "filename": "converter.js",
            "lineno": 76,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002783",
                "name": "Converter#convertTimeRangeEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "convertTimeRangeEvent",
        "longname": "Converter#convertTimeRangeEvent",
        "kind": "function",
        "memberof": "Converter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3286,
                3313
            ],
            "filename": "converter.js",
            "lineno": 81,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002805",
                "name": "alignment",
                "type": "MemberExpression",
                "value": "this._alignment"
            }
        },
        "undocumented": true,
        "name": "alignment",
        "longname": "<anonymous>~alignment",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3333,
                3358
            ],
            "filename": "converter.js",
            "lineno": 82,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002811",
                "name": "beginTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "beginTime",
        "longname": "<anonymous>~beginTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3378,
                3399
            ],
            "filename": "converter.js",
            "lineno": 83,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002818",
                "name": "endTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "endTime",
        "longname": "<anonymous>~endTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3417,
                3426
            ],
            "filename": "converter.js",
            "lineno": 84,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002825",
                "name": "timestamp"
            }
        },
        "undocumented": true,
        "name": "timestamp",
        "longname": "<anonymous>~timestamp",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3508,
                3529
            ],
            "filename": "converter.js",
            "lineno": 87,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002832",
                "name": "timestamp",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "beginTime",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "timestamp",
        "longname": "<anonymous>~timestamp",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3609,
                3688
            ],
            "filename": "converter.js",
            "lineno": 90,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002839",
                "name": "timestamp",
                "type": "NewExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "timestamp",
        "longname": "<anonymous>~timestamp",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3766,
                3785
            ],
            "filename": "converter.js",
            "lineno": 93,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002861",
                "name": "timestamp",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "endTime",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "timestamp",
        "longname": "<anonymous>~timestamp",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4059,
                5001
            ],
            "filename": "converter.js",
            "lineno": 103,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002888",
                "name": "Converter#convertIndexedEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "convertIndexedEvent",
        "longname": "Converter#convertIndexedEvent",
        "kind": "function",
        "memberof": "Converter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4231,
                4258
            ],
            "filename": "converter.js",
            "lineno": 108,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002910",
                "name": "alignment",
                "type": "MemberExpression",
                "value": "this._alignment"
            }
        },
        "undocumented": true,
        "name": "alignment",
        "longname": "<anonymous>~alignment",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4278,
                4303
            ],
            "filename": "converter.js",
            "lineno": 109,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002916",
                "name": "beginTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "beginTime",
        "longname": "<anonymous>~beginTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4323,
                4344
            ],
            "filename": "converter.js",
            "lineno": 110,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002923",
                "name": "endTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "endTime",
        "longname": "<anonymous>~endTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4362,
                4371
            ],
            "filename": "converter.js",
            "lineno": 111,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002930",
                "name": "timestamp"
            }
        },
        "undocumented": true,
        "name": "timestamp",
        "longname": "<anonymous>~timestamp",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4453,
                4474
            ],
            "filename": "converter.js",
            "lineno": 114,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002937",
                "name": "timestamp",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "beginTime",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "timestamp",
        "longname": "<anonymous>~timestamp",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4554,
                4633
            ],
            "filename": "converter.js",
            "lineno": 117,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002944",
                "name": "timestamp",
                "type": "NewExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "timestamp",
        "longname": "<anonymous>~timestamp",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4711,
                4730
            ],
            "filename": "converter.js",
            "lineno": 120,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100002966",
                "name": "timestamp",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "endTime",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "timestamp",
        "longname": "<anonymous>~timestamp",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Add an event will add a key to the event and then emit the\n     * event with that key.\n     */",
        "meta": {
            "range": [
                5117,
                5618
            ],
            "filename": "converter.js",
            "lineno": 134,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003004",
                "name": "Converter#addEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event",
                    "cb"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Add an event will add a key to the event and then emit the\nevent with that key.",
        "name": "addEvent",
        "longname": "Converter#addEvent",
        "kind": "function",
        "memberof": "Converter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5185,
                5188
            ],
            "filename": "converter.js",
            "lineno": 136,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003016",
                "name": "out"
            }
        },
        "undocumented": true,
        "name": "out",
        "longname": "<anonymous>~out",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5257,
                5296
            ],
            "filename": "converter.js",
            "lineno": 138,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003024",
                "name": "out",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "out",
        "longname": "<anonymous>~out",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5370,
                5407
            ],
            "filename": "converter.js",
            "lineno": 140,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003037",
                "name": "out",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "out",
        "longname": "<anonymous>~out",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5474,
                5504
            ],
            "filename": "converter.js",
            "lineno": 142,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003050",
                "name": "out",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "out",
        "longname": "<anonymous>~out",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5624,
                5671
            ],
            "filename": "converter.js",
            "lineno": 151,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003070",
                "name": "Converter#onEmit",
                "type": "MethodDefinition",
                "paramnames": [
                    "cb"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "onEmit",
        "longname": "Converter#onEmit",
        "kind": "function",
        "memberof": "Converter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5645,
                5664
            ],
            "filename": "converter.js",
            "lineno": 152,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003076",
                "name": "this._observer",
                "type": "Identifier",
                "value": "cb",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_observer",
        "longname": "Converter#_observer",
        "kind": "member",
        "memberof": "Converter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5677,
                5707
            ],
            "filename": "converter.js",
            "lineno": 155,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003081",
                "name": "Converter#done",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "Converter#done",
        "kind": "function",
        "memberof": "Converter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                568,
                931
            ],
            "filename": "event.js",
            "lineno": 19,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003113",
                "name": "timestampFromArg",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "arg"
                ]
            }
        },
        "undocumented": true,
        "name": "timestampFromArg",
        "longname": "timestampFromArg",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                933,
                1220
            ],
            "filename": "event.js",
            "lineno": 31,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003164",
                "name": "timeRangeFromArg",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "arg"
                ]
            }
        },
        "undocumented": true,
        "name": "timeRangeFromArg",
        "longname": "timeRangeFromArg",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1222,
                1505
            ],
            "filename": "event.js",
            "lineno": 41,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003200",
                "name": "indexFromArgs",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "arg1",
                    "arg2"
                ]
            }
        },
        "undocumented": true,
        "name": "indexFromArgs",
        "longname": "indexFromArgs",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1507,
                2091
            ],
            "filename": "event.js",
            "lineno": 51,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003234",
                "name": "dataFromArg",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "arg"
                ]
            },
            "vars": {
                "data": "dataFromArg~data"
            }
        },
        "undocumented": true,
        "name": "dataFromArg",
        "longname": "dataFromArg",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1543,
                1547
            ],
            "filename": "event.js",
            "lineno": 52,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003239",
                "name": "data"
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "dataFromArg~data",
        "kind": "member",
        "memberof": "dataFromArg",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1636,
                1668
            ],
            "filename": "event.js",
            "lineno": 55,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003249",
                "name": "data",
                "type": "NewExpression",
                "funcscope": "dataFromArg",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "dataFromArg~data",
        "kind": "member",
        "memberof": "dataFromArg",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1764,
                1774
            ],
            "filename": "event.js",
            "lineno": 58,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003264",
                "name": "data",
                "type": "Identifier",
                "funcscope": "dataFromArg",
                "value": "arg",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "dataFromArg~data",
        "kind": "member",
        "memberof": "dataFromArg",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1942,
                1980
            ],
            "filename": "event.js",
            "lineno": 62,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003281",
                "name": "data",
                "type": "NewExpression",
                "funcscope": "dataFromArg",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "dataFromArg~data",
        "kind": "member",
        "memberof": "dataFromArg",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1968,
                1978
            ],
            "filename": "event.js",
            "lineno": 62,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003288",
                "name": "value",
                "type": "Identifier",
                "value": "arg"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "value",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2093,
                2339
            ],
            "filename": "event.js",
            "lineno": 69,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003300",
                "name": "keyFromArg",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "arg"
                ]
            }
        },
        "undocumented": true,
        "name": "keyFromArg",
        "longname": "keyFromArg",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * A generic event\n *\n * This represents a data object at a single timestamp, supplied\n * at initialization.\n *\n * The timestamp may be a javascript Date object or a Moment, but is\n * stored internally as ms since UNIX epoch.\n *\n * The data may be any type.\n *\n * Asking the Event object for the timestamp returns an integer copy\n * of the number of ms since the UNIX epoch.\n */",
        "meta": {
            "range": [
                2725,
                15971
            ],
            "filename": "event.js",
            "lineno": 94,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003336",
                "name": "exports.",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "A generic event\n\nThis represents a data object at a single timestamp, supplied\nat initialization.\n\nThe timestamp may be a javascript Date object or a Moment, but is\nstored internally as ms since UNIX epoch.\n\nThe data may be any type.\n\nAsking the Event object for the timestamp returns an integer copy\nof the number of ms since the UNIX epoch.",
        "name": "",
        "longname": "",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2732,
                15971
            ],
            "filename": "event.js",
            "lineno": 94,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003337",
                "name": "Event",
                "type": "ClassDeclaration",
                "paramnames": [
                    "arg1",
                    "arg2",
                    "arg3"
                ]
            }
        },
        "undocumented": true,
        "name": "Event",
        "longname": "Event",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/**\n     * The creation of an Event is done by combining two parts:\n     * the timestamp and the data.\n     *\n     * To construct you specify the timestamp as either:\n     *     - Javascript Date object\n     *     - a Moment, or\n     *     - millisecond timestamp: the number of ms since the UNIX epoch\n     *\n     * To specify the data you can supply either:\n     *     - a Javascript object containing key values pairs\n     *     - an Immutable.Map, or\n     *     - a simple type such as an integer. In the case of the simple type\n     *       this is a shorthand for supplying {\"value\": v}.\n     */",
        "meta": {
            "range": [
                3357,
                3899
            ],
            "filename": "event.js",
            "lineno": 111,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003340",
                "name": "Event",
                "type": "MethodDefinition",
                "paramnames": [
                    "arg1",
                    "arg2",
                    "arg3"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "The creation of an Event is done by combining two parts:\nthe timestamp and the data.\n\nTo construct you specify the timestamp as either:\n    - Javascript Date object\n    - a Moment, or\n    - millisecond timestamp: the number of ms since the UNIX epoch\n\nTo specify the data you can supply either:\n    - a Javascript object containing key values pairs\n    - an Immutable.Map, or\n    - a simple type such as an integer. In the case of the simple type\n      this is a shorthand for supplying {\"value\": v}.",
        "name": "Event",
        "longname": "Event",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3444,
                3456
            ],
            "filename": "event.js",
            "lineno": 113,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003353",
                "name": "other",
                "type": "Identifier",
                "value": "arg1"
            }
        },
        "undocumented": true,
        "name": "other",
        "longname": "<anonymous>~other",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3470,
                3488
            ],
            "filename": "event.js",
            "lineno": 114,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003357",
                "name": "this._d",
                "type": "MemberExpression",
                "value": "other._d",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_d",
        "longname": "Event#_d",
        "kind": "member",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3655,
                3669
            ],
            "filename": "event.js",
            "lineno": 119,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003391",
                "name": "this._d",
                "type": "Identifier",
                "value": "arg1",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_d",
        "longname": "Event#_d",
        "kind": "member",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3715,
                3744
            ],
            "filename": "event.js",
            "lineno": 122,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003398",
                "name": "time",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "time",
        "longname": "<anonymous>~time",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3760,
                3784
            ],
            "filename": "event.js",
            "lineno": 123,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003404",
                "name": "data",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3800,
                3829
            ],
            "filename": "event.js",
            "lineno": 124,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003410",
                "name": "groupByKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "groupByKey",
        "longname": "<anonymous>~groupByKey",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3839,
                3892
            ],
            "filename": "event.js",
            "lineno": 125,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003416",
                "name": "this._d",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_d",
        "longname": "Event#_d",
        "kind": "member",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3868,
                3872
            ],
            "filename": "event.js",
            "lineno": 125,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003425",
                "name": "time",
                "type": "Identifier",
                "value": "time"
            }
        },
        "undocumented": true,
        "name": "time",
        "longname": "time",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3874,
                3878
            ],
            "filename": "event.js",
            "lineno": 125,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003427",
                "name": "data",
                "type": "Identifier",
                "value": "data"
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "data",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3880,
                3890
            ],
            "filename": "event.js",
            "lineno": 125,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003429",
                "name": "groupByKey",
                "type": "Identifier",
                "value": "groupByKey"
            }
        },
        "undocumented": true,
        "name": "groupByKey",
        "longname": "groupByKey",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n     * Returns the Event as a JSON object, essentially:\n     *  {time: t, data: {key: value, ...}}\n     * @return {Object} The event as JSON.\n     */",
        "meta": {
            "range": [
                4063,
                4192
            ],
            "filename": "event.js",
            "lineno": 133,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003431",
                "name": "Event#toJSON",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the Event as a JSON object, essentially:\n {time: t, data: {key: value, ...}}",
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The event as JSON."
            }
        ],
        "name": "toJSON",
        "longname": "Event#toJSON",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4103,
                4135
            ],
            "filename": "event.js",
            "lineno": 135,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003437",
                "name": "time",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "time",
        "longname": "time",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4149,
                4175
            ],
            "filename": "event.js",
            "lineno": 136,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003445",
                "name": "data",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "data",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n     * Retruns the Event as a string, useful for serialization.\n     * @return {string} The Event as a string\n     */",
        "meta": {
            "range": [
                4324,
                4388
            ],
            "filename": "event.js",
            "lineno": 144,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003453",
                "name": "Event#toString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Retruns the Event as a string, useful for serialization.",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The Event as a string"
            }
        ],
        "name": "toString",
        "longname": "Event#toString",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns a flat array starting with the timestamp, followed by the values.\n     * Doesn't include the groupByKey (key).\n     */",
        "meta": {
            "range": [
                4536,
                4633
            ],
            "filename": "event.js",
            "lineno": 152,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003466",
                "name": "Event#toPoint",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns a flat array starting with the timestamp, followed by the values.\nDoesn't include the groupByKey (key).",
        "name": "toPoint",
        "longname": "Event#toPoint",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The timestamp of this data, in UTC time, as a string.\n     */",
        "meta": {
            "range": [
                4716,
                4793
            ],
            "filename": "event.js",
            "lineno": 159,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003491",
                "name": "Event#timestampAsUTCString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The timestamp of this data, in UTC time, as a string.",
        "name": "timestampAsUTCString",
        "longname": "Event#timestampAsUTCString",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The timestamp of this data, in Local time, as a string.\n     */",
        "meta": {
            "range": [
                4878,
                4954
            ],
            "filename": "event.js",
            "lineno": 166,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003503",
                "name": "Event#timestampAsLocalString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The timestamp of this data, in Local time, as a string.",
        "name": "timestampAsLocalString",
        "longname": "Event#timestampAsLocalString",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The timestamp of this data\n     */",
        "meta": {
            "range": [
                5010,
                5065
            ],
            "filename": "event.js",
            "lineno": 173,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003515",
                "name": "Event#timestamp",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The timestamp of this data",
        "name": "timestamp",
        "longname": "Event#timestamp",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The begin time of this Event, which will be just the timestamp\n     */",
        "meta": {
            "range": [
                5157,
                5205
            ],
            "filename": "event.js",
            "lineno": 180,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003527",
                "name": "Event#begin",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The begin time of this Event, which will be just the timestamp",
        "name": "begin",
        "longname": "Event#begin",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The end time of this Event, which will be just the timestamp\n     */",
        "meta": {
            "range": [
                5295,
                5341
            ],
            "filename": "event.js",
            "lineno": 187,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003536",
                "name": "Event#end",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The end time of this Event, which will be just the timestamp",
        "name": "end",
        "longname": "Event#end",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Direct access to the event data. The result will be an Immutable.Map.\n     */",
        "meta": {
            "range": [
                5440,
                5490
            ],
            "filename": "event.js",
            "lineno": 194,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003545",
                "name": "Event#data",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Direct access to the event data. The result will be an Immutable.Map.",
        "name": "data",
        "longname": "Event#data",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Access the event groupBy key\n     */",
        "meta": {
            "range": [
                5548,
                5610
            ],
            "filename": "event.js",
            "lineno": 201,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003557",
                "name": "Event#groupByKey",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Access the event groupBy key",
        "name": "groupByKey",
        "longname": "Event#groupByKey",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Sets the data portion of the event and returns a new Event.\n     */",
        "meta": {
            "range": [
                5699,
                5807
            ],
            "filename": "event.js",
            "lineno": 208,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003569",
                "name": "Event#setData",
                "type": "MethodDefinition",
                "paramnames": [
                    "data"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Sets the data portion of the event and returns a new Event.",
        "name": "setData",
        "longname": "Event#setData",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5729,
                5771
            ],
            "filename": "event.js",
            "lineno": 209,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003575",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Sets the groupBy Key and returns a new Event\n     */",
        "meta": {
            "range": [
                5881,
                5980
            ],
            "filename": "event.js",
            "lineno": 216,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003591",
                "name": "Event#groupBy",
                "type": "MethodDefinition",
                "paramnames": [
                    "key"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Sets the groupBy Key and returns a new Event",
        "name": "groupBy",
        "longname": "Event#groupBy",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5910,
                5944
            ],
            "filename": "event.js",
            "lineno": 217,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003597",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Get specific data out of the Event. The data will be converted\n     * to a js object. You can use a fieldSpec to address deep data.\n     * A fieldSpec could be \"a.b\"\n     */",
        "meta": {
            "range": [
                6175,
                6576
            ],
            "filename": "event.js",
            "lineno": 226,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003611",
                "name": "Event#get",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Get specific data out of the Event. The data will be converted\nto a js object. You can use a fieldSpec to address deep data.\nA fieldSpec could be \"a.b\"",
        "name": "get",
        "longname": "Event#get",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6214,
                6215
            ],
            "filename": "event.js",
            "lineno": 227,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003619",
                "name": "v"
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~v",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6272,
                6308
            ],
            "filename": "event.js",
            "lineno": 229,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003629",
                "name": "searchKeyPath",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "searchKeyPath",
        "longname": "<anonymous>~searchKeyPath",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6378,
                6414
            ],
            "filename": "event.js",
            "lineno": 231,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003647",
                "name": "v",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~v",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Alias for get()\n     */",
        "meta": {
            "range": [
                6621,
                6681
            ],
            "filename": "event.js",
            "lineno": 244,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003677",
                "name": "Event#value",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Alias for get()",
        "name": "value",
        "longname": "Event#value",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6687,
                6750
            ],
            "filename": "event.js",
            "lineno": 248,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003688",
                "name": "Event#stringify",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "stringify",
        "longname": "Event#stringify",
        "kind": "function",
        "memberof": "Event",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7363,
                7447
            ],
            "filename": "event.js",
            "lineno": 273,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003701",
                "name": "Event.is",
                "type": "MethodDefinition",
                "paramnames": [
                    "event1",
                    "event2"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "is",
        "longname": "Event.is",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "/**\n     * The same as Event.value() only it will return false if the\n     * value is either undefined, NaN or Null.\n     */",
        "meta": {
            "range": [
                7582,
                7777
            ],
            "filename": "event.js",
            "lineno": 281,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003718",
                "name": "Event.isValidValue",
                "type": "MethodDefinition",
                "paramnames": [
                    "event",
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "The same as Event.value() only it will return false if the\nvalue is either undefined, NaN or Null.",
        "name": "isValidValue",
        "longname": "Event.isValidValue",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7646,
                7672
            ],
            "filename": "event.js",
            "lineno": 282,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003727",
                "name": "v",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~v",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7688,
                7745
            ],
            "filename": "event.js",
            "lineno": 283,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003735",
                "name": "invalid",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "invalid",
        "longname": "<anonymous>~invalid",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Function to select specific fields of an event using\n     * a fieldSpec and return a new event with just those fields.\n     *\n     * The fieldSpec currently can be:\n     *  * A single field name\n     *  * An array of field names\n     *\n     * The function returns a new event.\n     */",
        "meta": {
            "range": [
                8083,
                8598
            ],
            "filename": "event.js",
            "lineno": 297,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003757",
                "name": "Event.selector",
                "type": "MethodDefinition",
                "paramnames": [
                    "event",
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Function to select specific fields of an event using\na fieldSpec and return a new event with just those fields.\n\nThe fieldSpec currently can be:\n * A single field name\n * An array of field names\n\nThe function returns a new event.",
        "name": "selector",
        "longname": "Event.selector",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8133,
                8142
            ],
            "filename": "event.js",
            "lineno": 298,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003764",
                "name": "data",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8199,
                8220
            ],
            "filename": "event.js",
            "lineno": 300,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003775",
                "name": "fieldName",
                "type": "Identifier",
                "value": "fieldSpec"
            }
        },
        "undocumented": true,
        "name": "fieldName",
        "longname": "<anonymous>~fieldName",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8240,
                8268
            ],
            "filename": "event.js",
            "lineno": 301,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003779",
                "name": "value",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "<anonymous>~value",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8282,
                8305
            ],
            "filename": "event.js",
            "lineno": 302,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003787",
                "name": "data[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "value",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~data.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~data",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8417,
                8445
            ],
            "filename": "event.js",
            "lineno": 305,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003809",
                "name": "value",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "<anonymous>~value",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8463,
                8486
            ],
            "filename": "event.js",
            "lineno": 306,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003817",
                "name": "data[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "value",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~data.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~data",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8604,
                9524
            ],
            "filename": "event.js",
            "lineno": 314,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003831",
                "name": "Event.mergeEvents",
                "type": "MethodDefinition",
                "paramnames": [
                    "events"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "mergeEvents",
        "longname": "Event.mergeEvents",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8647,
                8672
            ],
            "filename": "event.js",
            "lineno": 315,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003837",
                "name": "t",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "t",
        "longname": "<anonymous>~t",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8688,
                8697
            ],
            "filename": "event.js",
            "lineno": 316,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003846",
                "name": "data",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8798,
                8849
            ],
            "filename": "event.js",
            "lineno": 319,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003865",
                "name": "msg",
                "type": "Literal",
                "value": "Events being merged must have the same type"
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8989,
                9045
            ],
            "filename": "event.js",
            "lineno": 324,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003887",
                "name": "msg",
                "type": "Literal",
                "value": "Events being merged must have the same timestamp"
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9118,
                9141
            ],
            "filename": "event.js",
            "lineno": 328,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003895",
                "name": "d",
                "type": "MemberExpression",
                "value": ".data"
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9247,
                9329
            ],
            "filename": "event.js",
            "lineno": 331,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003922",
                "name": "msg",
                "type": "TemplateLiteral",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9407,
                9422
            ],
            "filename": "event.js",
            "lineno": 335,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003933",
                "name": "data[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "val",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~data.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~data",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9467,
                9499
            ],
            "filename": "event.js",
            "lineno": 339,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003939",
                "name": "e",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9530,
                10478
            ],
            "filename": "event.js",
            "lineno": 343,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003950",
                "name": "Event.mergeTimeRangeEvents",
                "type": "MethodDefinition",
                "paramnames": [
                    "events"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "mergeTimeRangeEvents",
        "longname": "Event.mergeTimeRangeEvents",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9582,
                9615
            ],
            "filename": "event.js",
            "lineno": 344,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003956",
                "name": "timerange",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "timerange",
        "longname": "<anonymous>~timerange",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9631,
                9640
            ],
            "filename": "event.js",
            "lineno": 345,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003965",
                "name": "data",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9750,
                9801
            ],
            "filename": "event.js",
            "lineno": 348,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100003984",
                "name": "msg",
                "type": "Literal",
                "value": "Events being merged must have the same type"
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9957,
                10013
            ],
            "filename": "event.js",
            "lineno": 353,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004006",
                "name": "msg",
                "type": "Literal",
                "value": "Events being merged must have the same timerange"
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10086,
                10109
            ],
            "filename": "event.js",
            "lineno": 357,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004014",
                "name": "d",
                "type": "MemberExpression",
                "value": ".data"
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10215,
                10297
            ],
            "filename": "event.js",
            "lineno": 360,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004041",
                "name": "msg",
                "type": "TemplateLiteral",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10375,
                10390
            ],
            "filename": "event.js",
            "lineno": 364,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004052",
                "name": "data[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "val",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~data.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~data",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10484,
                11323
            ],
            "filename": "event.js",
            "lineno": 371,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004062",
                "name": "Event.mergeIndexedEvents",
                "type": "MethodDefinition",
                "paramnames": [
                    "events"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "mergeIndexedEvents",
        "longname": "Event.mergeIndexedEvents",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10534,
                10567
            ],
            "filename": "event.js",
            "lineno": 372,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004068",
                "name": "index",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "<anonymous>~index",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10583,
                10592
            ],
            "filename": "event.js",
            "lineno": 373,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004077",
                "name": "data",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10938,
                10961
            ],
            "filename": "event.js",
            "lineno": 383,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004112",
                "name": "d",
                "type": "MemberExpression",
                "value": ".data"
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11067,
                11149
            ],
            "filename": "event.js",
            "lineno": 386,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004139",
                "name": "msg",
                "type": "TemplateLiteral",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "<anonymous>~msg",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11227,
                11242
            ],
            "filename": "event.js",
            "lineno": 390,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004150",
                "name": "data[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "val",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~data.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~data",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11329,
                11813
            ],
            "filename": "event.js",
            "lineno": 396,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004160",
                "name": "Event.merge",
                "type": "MethodDefinition",
                "paramnames": [
                    "events"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "merge",
        "longname": "Event.merge",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Combines multiple events with the same time together\n     * to form a new event. Doesn't currently work on IndexedEvents\n     * or TimeRangeEvents.\n     */",
        "meta": {
            "range": [
                11990,
                13328
            ],
            "filename": "event.js",
            "lineno": 417,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004223",
                "name": "Event.combine",
                "type": "MethodDefinition",
                "paramnames": [
                    "events",
                    "fieldSpec",
                    "reducer"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Combines multiple events with the same time together\nto form a new event. Doesn't currently work on IndexedEvents\nor TimeRangeEvents.",
        "name": "combine",
        "longname": "Event.combine",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12112,
                12880
            ],
            "filename": "event.js",
            "lineno": 421,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004239",
                "name": "mapped",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mapped",
        "longname": "<anonymous>~mapped",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12170,
                12183
            ],
            "filename": "event.js",
            "lineno": 422,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004250",
                "name": "mapEvent",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "mapEvent",
        "longname": "<anonymous>~mapEvent",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12252,
                12267
            ],
            "filename": "event.js",
            "lineno": 424,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004254",
                "name": "fieldNames",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "fieldNames",
        "longname": "<anonymous>~fieldNames",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12315,
                12389
            ],
            "filename": "event.js",
            "lineno": 426,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004262",
                "name": "fieldNames",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fieldNames",
        "longname": "<anonymous>~fieldNames",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12455,
                12479
            ],
            "filename": "event.js",
            "lineno": 428,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004287",
                "name": "fieldNames",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[\"fieldSpec\"]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fieldNames",
        "longname": "<anonymous>~fieldNames",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12544,
                12566
            ],
            "filename": "event.js",
            "lineno": 430,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004299",
                "name": "fieldNames",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "fieldSpec",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fieldNames",
        "longname": "<anonymous>~fieldNames",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12716,
                12822
            ],
            "filename": "event.js",
            "lineno": 434,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004312",
                "name": "mapEvent[undefined]",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~mapEvent.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~mapEvent",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12896,
                12910
            ],
            "filename": "event.js",
            "lineno": 440,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004338",
                "name": "eventData",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "eventData",
        "longname": "<anonymous>~eventData",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13102,
                13127
            ],
            "filename": "event.js",
            "lineno": 444,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004374",
                "name": "eventData[undefined]",
                "type": "ObjectExpression",
                "funcscope": "<anonymous>",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~eventData.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~eventData",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13155,
                13194
            ],
            "filename": "event.js",
            "lineno": 446,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004380",
                "name": "eventData[undefined][undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "value",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined][undefined]",
        "longname": "<anonymous>~eventData.undefined][undefined]",
        "kind": "member",
        "memberof": "<anonymous>~eventData",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13334,
                13425
            ],
            "filename": "event.js",
            "lineno": 453,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004403",
                "name": "Event.sum",
                "type": "MethodDefinition",
                "paramnames": [
                    "events",
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "sum",
        "longname": "Event.sum",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13431,
                13522
            ],
            "filename": "event.js",
            "lineno": 457,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004417",
                "name": "Event.avg",
                "type": "MethodDefinition",
                "paramnames": [
                    "events",
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "avg",
        "longname": "Event.avg",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Maps a list of events according to the selection\n     * specification passed in. The spec maybe a single\n     * field name, a list of field names, or a function\n     * that takes an event and returns a key/value pair.\n     *\n     * Example 1:\n     *         in   out\n     *  3am    1    2\n     *  4am    3    4\n     *\n     * Mapper result:  { in: [1, 3], out: [2, 4]}\n     */",
        "meta": {
            "range": [
                13919,
                15395
            ],
            "filename": "event.js",
            "lineno": 474,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004431",
                "name": "Event.map",
                "type": "MethodDefinition",
                "paramnames": [
                    "events",
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Maps a list of events according to the selection\nspecification passed in. The spec maybe a single\nfield name, a list of field names, or a function\nthat takes an event and returns a key/value pair.\n\nExample 1:\n        in   out\n 3am    1    2\n 4am    3    4\n\nMapper result:  { in: [1, 3], out: [2, 4]}",
        "name": "map",
        "longname": "Event.map",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13965,
                13976
            ],
            "filename": "event.js",
            "lineno": 475,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004438",
                "name": "result",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14034,
                14055
            ],
            "filename": "event.js",
            "lineno": 478,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004449",
                "name": "fieldName",
                "type": "Identifier",
                "value": "fieldSpec"
            }
        },
        "undocumented": true,
        "name": "fieldName",
        "longname": "<anonymous>~fieldName",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14164,
                14186
            ],
            "filename": "event.js",
            "lineno": 481,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004471",
                "name": "result[undefined]",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14228,
                14256
            ],
            "filename": "event.js",
            "lineno": 483,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004477",
                "name": "value",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "<anonymous>~value",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14528,
                14550
            ],
            "filename": "event.js",
            "lineno": 490,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004527",
                "name": "result[undefined]",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14782,
                14805
            ],
            "filename": "event.js",
            "lineno": 497,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004561",
                "name": "pair",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pair",
        "longname": "<anonymous>~pair",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14925,
                14941
            ],
            "filename": "event.js",
            "lineno": 500,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004586",
                "name": "result[undefined]",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15236,
                15252
            ],
            "filename": "event.js",
            "lineno": 509,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004635",
                "name": "result[undefined]",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Takes a list of events and a reducer function and returns\n     * a new Event with the result, for each column. The reducer is\n     * of the form:\n     *     function sum(valueList) {\n     *         return calcValue;\n     *     }\n     */",
        "meta": {
            "range": [
                15653,
                15844
            ],
            "filename": "event.js",
            "lineno": 526,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004650",
                "name": "Event.reduce",
                "type": "MethodDefinition",
                "paramnames": [
                    "mapped",
                    "reducer"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Takes a list of events and a reducer function and returns\na new Event with the result, for each column. The reducer is\nof the form:\n    function sum(valueList) {\n        return calcValue;\n    }",
        "name": "reduce",
        "longname": "Event.reduce",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15700,
                15711
            ],
            "filename": "event.js",
            "lineno": 527,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004657",
                "name": "result",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15770,
                15802
            ],
            "filename": "event.js",
            "lineno": 529,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004671",
                "name": "result[undefined]",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15850,
                15969
            ],
            "filename": "event.js",
            "lineno": 534,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004680",
                "name": "Event.mapReduce",
                "type": "MethodDefinition",
                "paramnames": [
                    "events",
                    "fieldSpec",
                    "reducer"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "mapReduce",
        "longname": "Event.mapReduce",
        "kind": "function",
        "memberof": "Event",
        "scope": "static"
    },
    {
        "comment": "/**\n * A TimeRangeEvent uses a TimeRange to specify the range over\n * which the event occurs and maps that to a data object representing\n * some measurements or metrics during that time range.\n *\n * You supply the timerange as a TimeRange object.\n *\n * The data is also specified during construction and me be either:\n *  1) a Javascript object or simple type\n *  2) an Immutable.Map.\n *  3) Simple measurement\n *\n * If an Javascript object is provided it will be stored internally as an\n * Immutable Map. If the data provided is some other simple type (such as an\n * integer) then it will be equivalent to supplying an object of {value: data}.\n * Data may also be undefined.\n *\n * To get the data out of an TimeRangeEvent instance use `data()`.\n * It will return an Immutable.Map. Alternatively you can call `toJSON()`\n * to return a Javascript object representation of the data, while\n * `toString()` will serialize the entire event to a string.\n */",
        "meta": {
            "range": [
                16925,
                20886
            ],
            "filename": "event.js",
            "lineno": 561,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004699",
                "name": "exports.",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "A TimeRangeEvent uses a TimeRange to specify the range over\nwhich the event occurs and maps that to a data object representing\nsome measurements or metrics during that time range.\n\nYou supply the timerange as a TimeRange object.\n\nThe data is also specified during construction and me be either:\n 1) a Javascript object or simple type\n 2) an Immutable.Map.\n 3) Simple measurement\n\nIf an Javascript object is provided it will be stored internally as an\nImmutable Map. If the data provided is some other simple type (such as an\ninteger) then it will be equivalent to supplying an object of {value: data}.\nData may also be undefined.\n\nTo get the data out of an TimeRangeEvent instance use `data()`.\nIt will return an Immutable.Map. Alternatively you can call `toJSON()`\nto return a Javascript object representation of the data, while\n`toString()` will serialize the entire event to a string.",
        "name": "",
        "longname": "",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16932,
                20886
            ],
            "filename": "event.js",
            "lineno": 561,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004700",
                "name": "TimeRangeEvent",
                "type": "ClassDeclaration",
                "paramnames": [
                    "arg1",
                    "arg2",
                    "arg3"
                ]
            }
        },
        "undocumented": true,
        "name": "TimeRangeEvent",
        "longname": "TimeRangeEvent",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/**\n     * The creation of an TimeRangeEvent is done by combining two parts:\n     * the timerange and the data.\n     *\n     * To construct you specify a TimeRange, along with the data.\n     *\n     * To specify the data you can supply either:\n     *     - a Javascript object containing key values pairs\n     *     - an Immutable.Map, or\n     *     - a simple type such as an integer. In the case of the simple type\n     *       this is a shorthand for supplying {\"value\": v}.\n     */",
        "meta": {
            "range": [
                17448,
                17920
            ],
            "filename": "event.js",
            "lineno": 575,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004703",
                "name": "TimeRangeEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "arg1",
                    "arg2",
                    "arg3"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "The creation of an TimeRangeEvent is done by combining two parts:\nthe timerange and the data.\n\nTo construct you specify a TimeRange, along with the data.\n\nTo specify the data you can supply either:\n    - a Javascript object containing key values pairs\n    - an Immutable.Map, or\n    - a simple type such as an integer. In the case of the simple type\n      this is a shorthand for supplying {\"value\": v}.",
        "name": "TimeRangeEvent",
        "longname": "TimeRangeEvent",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17544,
                17556
            ],
            "filename": "event.js",
            "lineno": 577,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004716",
                "name": "other",
                "type": "Identifier",
                "value": "arg1"
            }
        },
        "undocumented": true,
        "name": "other",
        "longname": "<anonymous>~other",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17570,
                17588
            ],
            "filename": "event.js",
            "lineno": 578,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004720",
                "name": "this._d",
                "type": "MemberExpression",
                "value": "other._d",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_d",
        "longname": "TimeRangeEvent#_d",
        "kind": "member",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17674,
                17688
            ],
            "filename": "event.js",
            "lineno": 581,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004736",
                "name": "this._d",
                "type": "Identifier",
                "value": "arg1",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_d",
        "longname": "TimeRangeEvent#_d",
        "kind": "member",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17734,
                17764
            ],
            "filename": "event.js",
            "lineno": 584,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004743",
                "name": "range",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "range",
        "longname": "<anonymous>~range",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17780,
                17804
            ],
            "filename": "event.js",
            "lineno": 585,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004749",
                "name": "data",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17820,
                17849
            ],
            "filename": "event.js",
            "lineno": 586,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004755",
                "name": "groupByKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "groupByKey",
        "longname": "<anonymous>~groupByKey",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17859,
                17913
            ],
            "filename": "event.js",
            "lineno": 587,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004761",
                "name": "this._d",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_d",
        "longname": "TimeRangeEvent#_d",
        "kind": "member",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17888,
                17893
            ],
            "filename": "event.js",
            "lineno": 587,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004770",
                "name": "range",
                "type": "Identifier",
                "value": "range"
            }
        },
        "undocumented": true,
        "name": "range",
        "longname": "range",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17895,
                17899
            ],
            "filename": "event.js",
            "lineno": 587,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004772",
                "name": "data",
                "type": "Identifier",
                "value": "data"
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "data",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17901,
                17911
            ],
            "filename": "event.js",
            "lineno": 587,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004774",
                "name": "groupByKey",
                "type": "Identifier",
                "value": "groupByKey"
            }
        },
        "undocumented": true,
        "name": "groupByKey",
        "longname": "groupByKey",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17926,
                18059
            ],
            "filename": "event.js",
            "lineno": 590,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004776",
                "name": "TimeRangeEvent#toJSON",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "toJSON",
        "longname": "TimeRangeEvent#toJSON",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17966,
                18002
            ],
            "filename": "event.js",
            "lineno": 592,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004782",
                "name": "timerange",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "timerange",
        "longname": "timerange",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18016,
                18042
            ],
            "filename": "event.js",
            "lineno": 593,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004790",
                "name": "data",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "data",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18065,
                18129
            ],
            "filename": "event.js",
            "lineno": 597,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004798",
                "name": "TimeRangeEvent#toString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "TimeRangeEvent#toString",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns a flat array starting with the timestamp, followed by the values.\n     * Doesn't include the groupByKey (key).\n     */",
        "meta": {
            "range": [
                18345,
                18475
            ],
            "filename": "event.js",
            "lineno": 609,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004811",
                "name": "TimeRangeEvent#toPoint",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns a flat array starting with the timestamp, followed by the values.\nDoesn't include the groupByKey (key).",
        "name": "toPoint",
        "longname": "TimeRangeEvent#toPoint",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The TimeRange of this data\n     * @return {TimeRange} TimeRange of this data.\n     */",
        "meta": {
            "range": [
                18582,
                18638
            ],
            "filename": "event.js",
            "lineno": 620,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004836",
                "name": "TimeRangeEvent#timerange",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The TimeRange of this data",
        "returns": [
            {
                "type": {
                    "names": [
                        "TimeRange"
                    ]
                },
                "description": "TimeRange of this data."
            }
        ],
        "name": "timerange",
        "longname": "TimeRangeEvent#timerange",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Access the event data\n     * @return {Immutable.Map} Data for the Event\n     */",
        "meta": {
            "range": [
                18739,
                18789
            ],
            "filename": "event.js",
            "lineno": 628,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004848",
                "name": "TimeRangeEvent#data",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Access the event data",
        "returns": [
            {
                "type": {
                    "names": [
                        "Immutable.Map"
                    ]
                },
                "description": "Data for the Event"
            }
        ],
        "name": "data",
        "longname": "TimeRangeEvent#data",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Access the event key\n     * @return {string} Key for the Event\n     */",
        "meta": {
            "range": [
                18881,
                18943
            ],
            "filename": "event.js",
            "lineno": 636,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004860",
                "name": "TimeRangeEvent#groupByKey",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Access the event key",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Key for the Event"
            }
        ],
        "name": "groupByKey",
        "longname": "TimeRangeEvent#groupByKey",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Sets the data portion of the event and\n     * returns a new TimeRangeEvent.\n     */",
        "meta": {
            "range": [
                19048,
                19165
            ],
            "filename": "event.js",
            "lineno": 644,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004872",
                "name": "TimeRangeEvent#setData",
                "type": "MethodDefinition",
                "paramnames": [
                    "data"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Sets the data portion of the event and\nreturns a new TimeRangeEvent.",
        "name": "setData",
        "longname": "TimeRangeEvent#setData",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19078,
                19120
            ],
            "filename": "event.js",
            "lineno": 645,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004878",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19171,
                19279
            ],
            "filename": "event.js",
            "lineno": 649,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004894",
                "name": "TimeRangeEvent#groupBy",
                "type": "MethodDefinition",
                "paramnames": [
                    "key"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "groupBy",
        "longname": "TimeRangeEvent#groupBy",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19200,
                19234
            ],
            "filename": "event.js",
            "lineno": 650,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004900",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * The TimeRange of this data, in UTC, as a string.\n     * @return {string} TimeRange of this data.\n     */",
        "meta": {
            "range": [
                19405,
                19482
            ],
            "filename": "event.js",
            "lineno": 658,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004914",
                "name": "TimeRangeEvent#timerangeAsUTCString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The TimeRange of this data, in UTC, as a string.",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "TimeRange of this data."
            }
        ],
        "name": "timerangeAsUTCString",
        "longname": "TimeRangeEvent#timerangeAsUTCString",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The TimeRange of this data, in Local time, as a string.\n     * @return {string} TimeRange of this data.\n     */",
        "meta": {
            "range": [
                19615,
                19696
            ],
            "filename": "event.js",
            "lineno": 666,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004926",
                "name": "TimeRangeEvent#timerangeAsLocalString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The TimeRange of this data, in Local time, as a string.",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "TimeRange of this data."
            }
        ],
        "name": "timerangeAsLocalString",
        "longname": "TimeRangeEvent#timerangeAsLocalString",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The begin time of this Event\n     * @return {Data} Begin time\n     */",
        "meta": {
            "range": [
                19787,
                19843
            ],
            "filename": "event.js",
            "lineno": 674,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004938",
                "name": "TimeRangeEvent#begin",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The begin time of this Event",
        "returns": [
            {
                "type": {
                    "names": [
                        "Data"
                    ]
                },
                "description": "Begin time"
            }
        ],
        "name": "begin",
        "longname": "TimeRangeEvent#begin",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The end time of this Event\n     * @return {Data} End time\n     */",
        "meta": {
            "range": [
                19930,
                19982
            ],
            "filename": "event.js",
            "lineno": 682,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004950",
                "name": "TimeRangeEvent#end",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The end time of this Event",
        "returns": [
            {
                "type": {
                    "names": [
                        "Data"
                    ]
                },
                "description": "End time"
            }
        ],
        "name": "end",
        "longname": "TimeRangeEvent#end",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Alias for the begin() time.\n     * @return {Data} Time representing this Event\n     */",
        "meta": {
            "range": [
                20090,
                20138
            ],
            "filename": "event.js",
            "lineno": 690,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004962",
                "name": "TimeRangeEvent#timestamp",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Alias for the begin() time.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Data"
                    ]
                },
                "description": "Time representing this Event"
            }
        ],
        "name": "timestamp",
        "longname": "TimeRangeEvent#timestamp",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20144,
                20222
            ],
            "filename": "event.js",
            "lineno": 694,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004971",
                "name": "TimeRangeEvent#humanizeDuration",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "humanizeDuration",
        "longname": "TimeRangeEvent#humanizeDuration",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Get specific data out of the Event. The data will be converted\n     * to a js object. You can use a fieldSpec to address deep data.\n     * A fieldSpec could be \"a.b\"\n     */",
        "meta": {
            "range": [
                20417,
                20818
            ],
            "filename": "event.js",
            "lineno": 703,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004983",
                "name": "TimeRangeEvent#get",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Get specific data out of the Event. The data will be converted\nto a js object. You can use a fieldSpec to address deep data.\nA fieldSpec could be \"a.b\"",
        "name": "get",
        "longname": "TimeRangeEvent#get",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20456,
                20457
            ],
            "filename": "event.js",
            "lineno": 704,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100004991",
                "name": "v"
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~v",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20514,
                20550
            ],
            "filename": "event.js",
            "lineno": 706,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005001",
                "name": "searchKeyPath",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "searchKeyPath",
        "longname": "<anonymous>~searchKeyPath",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20620,
                20656
            ],
            "filename": "event.js",
            "lineno": 708,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005019",
                "name": "v",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~v",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20824,
                20884
            ],
            "filename": "event.js",
            "lineno": 718,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005049",
                "name": "TimeRangeEvent#value",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "TimeRangeEvent#value",
        "kind": "function",
        "memberof": "TimeRangeEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n * An IndexedEvent uses an Index to specify a timerange over which the event\n * occurs and maps that to a data object representing some measurement or metric\n * during that time range.\n *\n * You can supply the index as a string or as an Index object.\n *\n * Example Indexes are:\n *     - 1d-1565 is the entire duration of the 1565th day since the UNIX epoch\n *     - 2014-03 is the entire duration of march in 2014\n *\n * The range, as expressed by the Index, is provided by the convenience method\n * `range()`, which returns a TimeRange instance. Alternatively the begin\n * and end times represented by the Index can be found with `begin()`\n * and `end()` respectively.\n *\n * The data is also specified during construction, and is generally expected to\n * be an object or an Immutable.Map. If an object is provided it will be stored\n * internally as an ImmutableMap. If the data provided is some other type then\n * it will be equivalent to supplying an object of `{value: data}`. Data may be\n * undefined.\n *\n * The get the data out of an IndexedEvent instance use `data()`. It will return\n * an Immutable.Map.\n */",
        "meta": {
            "range": [
                22006,
                26251
            ],
            "filename": "event.js",
            "lineno": 748,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005060",
                "name": "exports.",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "An IndexedEvent uses an Index to specify a timerange over which the event\noccurs and maps that to a data object representing some measurement or metric\nduring that time range.\n\nYou can supply the index as a string or as an Index object.\n\nExample Indexes are:\n    - 1d-1565 is the entire duration of the 1565th day since the UNIX epoch\n    - 2014-03 is the entire duration of march in 2014\n\nThe range, as expressed by the Index, is provided by the convenience method\n`range()`, which returns a TimeRange instance. Alternatively the begin\nand end times represented by the Index can be found with `begin()`\nand `end()` respectively.\n\nThe data is also specified during construction, and is generally expected to\nbe an object or an Immutable.Map. If an object is provided it will be stored\ninternally as an ImmutableMap. If the data provided is some other type then\nit will be equivalent to supplying an object of `{value: data}`. Data may be\nundefined.\n\nThe get the data out of an IndexedEvent instance use `data()`. It will return\nan Immutable.Map.",
        "name": "",
        "longname": "",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22013,
                26251
            ],
            "filename": "event.js",
            "lineno": 748,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005061",
                "name": "IndexedEvent",
                "type": "ClassDeclaration",
                "paramnames": [
                    "arg1",
                    "arg2",
                    "arg3",
                    "arg4"
                ]
            }
        },
        "undocumented": true,
        "name": "IndexedEvent",
        "longname": "IndexedEvent",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/**\n     * The creation of an IndexedEvent is done by combining two parts:\n     * the Index and the data.\n     *\n     * To construct you specify an Index, along with the data.\n     *\n     * The index may be an Index, or a string.\n     *\n     * To specify the data you can supply either:\n     *     - a Javascript object containing key values pairs\n     *     - an Immutable.Map, or\n     *     - a simple type such as an integer. In the case of the simple type\n     *       this is a shorthand for supplying {\"value\": v}.\n     */",
        "meta": {
            "range": [
                22572,
                23051
            ],
            "filename": "event.js",
            "lineno": 764,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005064",
                "name": "IndexedEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "arg1",
                    "arg2",
                    "arg3",
                    "arg4"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "The creation of an IndexedEvent is done by combining two parts:\nthe Index and the data.\n\nTo construct you specify an Index, along with the data.\n\nThe index may be an Index, or a string.\n\nTo specify the data you can supply either:\n    - a Javascript object containing key values pairs\n    - an Immutable.Map, or\n    - a simple type such as an integer. In the case of the simple type\n      this is a shorthand for supplying {\"value\": v}.",
        "name": "IndexedEvent",
        "longname": "IndexedEvent",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22672,
                22684
            ],
            "filename": "event.js",
            "lineno": 766,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005078",
                "name": "other",
                "type": "Identifier",
                "value": "arg1"
            }
        },
        "undocumented": true,
        "name": "other",
        "longname": "<anonymous>~other",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22698,
                22716
            ],
            "filename": "event.js",
            "lineno": 767,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005082",
                "name": "this._d",
                "type": "MemberExpression",
                "value": "other._d",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_d",
        "longname": "IndexedEvent#_d",
        "kind": "member",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22802,
                22816
            ],
            "filename": "event.js",
            "lineno": 770,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005098",
                "name": "this._d",
                "type": "Identifier",
                "value": "arg1",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_d",
        "longname": "IndexedEvent#_d",
        "kind": "member",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22862,
                22895
            ],
            "filename": "event.js",
            "lineno": 773,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005105",
                "name": "index",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "<anonymous>~index",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22911,
                22935
            ],
            "filename": "event.js",
            "lineno": 774,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005112",
                "name": "data",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22951,
                22980
            ],
            "filename": "event.js",
            "lineno": 775,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005118",
                "name": "groupByKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "groupByKey",
        "longname": "<anonymous>~groupByKey",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22990,
                23044
            ],
            "filename": "event.js",
            "lineno": 776,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005124",
                "name": "this._d",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_d",
        "longname": "IndexedEvent#_d",
        "kind": "member",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23019,
                23024
            ],
            "filename": "event.js",
            "lineno": 776,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005133",
                "name": "index",
                "type": "Identifier",
                "value": "index"
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "index",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23026,
                23030
            ],
            "filename": "event.js",
            "lineno": 776,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005135",
                "name": "data",
                "type": "Identifier",
                "value": "data"
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "data",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23032,
                23042
            ],
            "filename": "event.js",
            "lineno": 776,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005137",
                "name": "groupByKey",
                "type": "Identifier",
                "value": "groupByKey"
            }
        },
        "undocumented": true,
        "name": "groupByKey",
        "longname": "groupByKey",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23057,
                23181
            ],
            "filename": "event.js",
            "lineno": 779,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005139",
                "name": "IndexedEvent#toJSON",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "toJSON",
        "longname": "IndexedEvent#toJSON",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23097,
                23124
            ],
            "filename": "event.js",
            "lineno": 781,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005145",
                "name": "index",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "index",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23138,
                23164
            ],
            "filename": "event.js",
            "lineno": 782,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005150",
                "name": "data",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "data",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23187,
                23251
            ],
            "filename": "event.js",
            "lineno": 786,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005158",
                "name": "IndexedEvent#toString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "IndexedEvent#toString",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns a flat array starting with the timestamp, followed by the values.\n     * Doesn't include the groupByKey (key).\n     */",
        "meta": {
            "range": [
                23399,
                23524
            ],
            "filename": "event.js",
            "lineno": 794,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005171",
                "name": "IndexedEvent#toPoint",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns a flat array starting with the timestamp, followed by the values.\nDoesn't include the groupByKey (key).",
        "name": "toPoint",
        "longname": "IndexedEvent#toPoint",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the Index associated with the data in this Event\n     * @return {Index} The Index\n     */",
        "meta": {
            "range": [
                23643,
                23695
            ],
            "filename": "event.js",
            "lineno": 805,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005193",
                "name": "IndexedEvent#index",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the Index associated with the data in this Event",
        "returns": [
            {
                "type": {
                    "names": [
                        "Index"
                    ]
                },
                "description": "The Index"
            }
        ],
        "name": "index",
        "longname": "IndexedEvent#index",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Sets the data of the event and returns a new IndexedEvent.\n     */",
        "meta": {
            "range": [
                23783,
                23898
            ],
            "filename": "event.js",
            "lineno": 812,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005205",
                "name": "IndexedEvent#setData",
                "type": "MethodDefinition",
                "paramnames": [
                    "data"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Sets the data of the event and returns a new IndexedEvent.",
        "name": "setData",
        "longname": "IndexedEvent#setData",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23813,
                23855
            ],
            "filename": "event.js",
            "lineno": 813,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005211",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Access the event data\n     * @return {Immutable.Map} Data for the Event\n     */",
        "meta": {
            "range": [
                23999,
                24049
            ],
            "filename": "event.js",
            "lineno": 821,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005227",
                "name": "IndexedEvent#data",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Access the event data",
        "returns": [
            {
                "type": {
                    "names": [
                        "Immutable.Map"
                    ]
                },
                "description": "Data for the Event"
            }
        ],
        "name": "data",
        "longname": "IndexedEvent#data",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Sets this event's groupByKey for use in the process chains\n     */",
        "meta": {
            "range": [
                24137,
                24243
            ],
            "filename": "event.js",
            "lineno": 828,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005239",
                "name": "IndexedEvent#groupBy",
                "type": "MethodDefinition",
                "paramnames": [
                    "key"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Sets this event's groupByKey for use in the process chains",
        "name": "groupBy",
        "longname": "IndexedEvent#groupBy",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24166,
                24200
            ],
            "filename": "event.js",
            "lineno": 829,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005245",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Access the internal groupByKey\n     */",
        "meta": {
            "range": [
                24307,
                24369
            ],
            "filename": "event.js",
            "lineno": 836,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005259",
                "name": "IndexedEvent#groupByKey",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Access the internal groupByKey",
        "name": "groupByKey",
        "longname": "IndexedEvent#groupByKey",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the Index as a string, same as event.index().toString()\n     * @return {string} The Index\n     */",
        "meta": {
            "range": [
                24496,
                24559
            ],
            "filename": "event.js",
            "lineno": 844,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005271",
                "name": "IndexedEvent#indexAsString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the Index as a string, same as event.index().toString()",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The Index"
            }
        ],
        "name": "indexAsString",
        "longname": "IndexedEvent#indexAsString",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The TimeRange of this data, in UTC, as a string.\n     * @return {string} TimeRange of this data.\n     */",
        "meta": {
            "range": [
                24685,
                24762
            ],
            "filename": "event.js",
            "lineno": 852,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005283",
                "name": "IndexedEvent#timerangeAsUTCString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The TimeRange of this data, in UTC, as a string.",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "TimeRange of this data."
            }
        ],
        "name": "timerangeAsUTCString",
        "longname": "IndexedEvent#timerangeAsUTCString",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The TimeRange of this data, in Local time, as a string.\n     * @return {string} TimeRange of this data.\n     */",
        "meta": {
            "range": [
                24895,
                24976
            ],
            "filename": "event.js",
            "lineno": 860,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005295",
                "name": "IndexedEvent#timerangeAsLocalString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The TimeRange of this data, in Local time, as a string.",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "TimeRange of this data."
            }
        ],
        "name": "timerangeAsLocalString",
        "longname": "IndexedEvent#timerangeAsLocalString",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The TimeRange of this data\n     * @return {TimeRange} TimeRange of this data.\n     */",
        "meta": {
            "range": [
                25083,
                25145
            ],
            "filename": "event.js",
            "lineno": 868,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005307",
                "name": "IndexedEvent#timerange",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The TimeRange of this data",
        "returns": [
            {
                "type": {
                    "names": [
                        "TimeRange"
                    ]
                },
                "description": "TimeRange of this data."
            }
        ],
        "name": "timerange",
        "longname": "IndexedEvent#timerange",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The begin time of this Event\n     * @return {Data} Begin time\n     */",
        "meta": {
            "range": [
                25236,
                25292
            ],
            "filename": "event.js",
            "lineno": 876,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005319",
                "name": "IndexedEvent#begin",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The begin time of this Event",
        "returns": [
            {
                "type": {
                    "names": [
                        "Data"
                    ]
                },
                "description": "Begin time"
            }
        ],
        "name": "begin",
        "longname": "IndexedEvent#begin",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * The end time of this Event\n     * @return {Data} End time\n     */",
        "meta": {
            "range": [
                25379,
                25431
            ],
            "filename": "event.js",
            "lineno": 884,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005331",
                "name": "IndexedEvent#end",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The end time of this Event",
        "returns": [
            {
                "type": {
                    "names": [
                        "Data"
                    ]
                },
                "description": "End time"
            }
        ],
        "name": "end",
        "longname": "IndexedEvent#end",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Alias for the begin() time.\n     * @return {Data} Time representing this Event\n     */",
        "meta": {
            "range": [
                25539,
                25587
            ],
            "filename": "event.js",
            "lineno": 892,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005343",
                "name": "IndexedEvent#timestamp",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Alias for the begin() time.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Data"
                    ]
                },
                "description": "Time representing this Event"
            }
        ],
        "name": "timestamp",
        "longname": "IndexedEvent#timestamp",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Get specific data out of the Event. The data will be converted\n     * to a js object. You can use a fieldSpec to address deep data.\n     * A fieldSpec could be \"a.b\"\n     */",
        "meta": {
            "range": [
                25782,
                26183
            ],
            "filename": "event.js",
            "lineno": 901,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005352",
                "name": "IndexedEvent#get",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Get specific data out of the Event. The data will be converted\nto a js object. You can use a fieldSpec to address deep data.\nA fieldSpec could be \"a.b\"",
        "name": "get",
        "longname": "IndexedEvent#get",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25821,
                25822
            ],
            "filename": "event.js",
            "lineno": 902,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005360",
                "name": "v"
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~v",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25879,
                25915
            ],
            "filename": "event.js",
            "lineno": 904,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005370",
                "name": "searchKeyPath",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "searchKeyPath",
        "longname": "<anonymous>~searchKeyPath",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25985,
                26021
            ],
            "filename": "event.js",
            "lineno": 906,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005388",
                "name": "v",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~v",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26189,
                26249
            ],
            "filename": "event.js",
            "lineno": 916,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005418",
                "name": "IndexedEvent#value",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "IndexedEvent#value",
        "kind": "function",
        "memberof": "IndexedEvent",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                401,
                1062
            ],
            "filename": "functions.js",
            "lineno": 13,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005434",
                "name": "module.exports",
                "type": "ObjectExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                422,
                506
            ],
            "filename": "functions.js",
            "lineno": 14,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005436",
                "name": "sum",
                "type": "FunctionExpression"
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "sum",
        "longname": "module.exports.sum",
        "kind": "function",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                512,
                637
            ],
            "filename": "functions.js",
            "lineno": 17,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005455",
                "name": "avg",
                "type": "FunctionExpression"
            },
            "vars": {
                "sum": "module.exports.avg~sum",
                "": null
            }
        },
        "undocumented": true,
        "name": "avg",
        "longname": "module.exports.avg",
        "kind": "function",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                540,
                594
            ],
            "filename": "functions.js",
            "lineno": 18,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005460",
                "name": "sum",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sum",
        "longname": "module.exports.avg~sum",
        "kind": "constant",
        "memberof": "module.exports.avg",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                643,
                692
            ],
            "filename": "functions.js",
            "lineno": 21,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005482",
                "name": "max",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "max",
        "longname": "module.exports.max",
        "kind": "function",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                698,
                747
            ],
            "filename": "functions.js",
            "lineno": 24,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005492",
                "name": "min",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "min",
        "longname": "module.exports.min",
        "kind": "function",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                753,
                804
            ],
            "filename": "functions.js",
            "lineno": 27,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005502",
                "name": "count",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "count",
        "longname": "module.exports.count",
        "kind": "function",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                810,
                885
            ],
            "filename": "functions.js",
            "lineno": 30,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005510",
                "name": "first",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "first",
        "longname": "module.exports.first",
        "kind": "function",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                891,
                981
            ],
            "filename": "functions.js",
            "lineno": 33,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005523",
                "name": "last",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "module.exports.last",
        "kind": "function",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                987,
                1059
            ],
            "filename": "functions.js",
            "lineno": 36,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005540",
                "name": "difference",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "difference",
        "longname": "module.exports.difference",
        "kind": "function",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "/**\n * `groupBy` may be either:\n *     * A function which takes an event and returns a string as a key\n *     * A string, which corresponds to a column in the event, like \"name\"\n *     * A list, which corresponds to a list of columns to join together for the key\n * `observer` is the callback that will receive the emitted events\n */",
        "meta": {
            "range": [
                1186,
                2685
            ],
            "filename": "grouper.js",
            "lineno": 33,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005569",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "`groupBy` may be either:\n    * A function which takes an event and returns a string as a key\n    * A string, which corresponds to a column in the event, like \"name\"\n    * A list, which corresponds to a list of columns to join together for the key\n`observer` is the callback that will receive the emitted events",
        "name": "exports",
        "longname": "module.exports",
        "kind": "class",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1201,
                2685
            ],
            "filename": "grouper.js",
            "lineno": 33,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005570",
                "name": "Grouper",
                "type": "ClassDeclaration",
                "paramnames": [
                    "arg1",
                    "options",
                    "observer"
                ]
            }
        },
        "undocumented": true,
        "name": "Grouper",
        "longname": "Grouper",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1240,
                2430
            ],
            "filename": "grouper.js",
            "lineno": 35,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005574",
                "name": "Grouper",
                "type": "MethodDefinition",
                "paramnames": [
                    "arg1",
                    "options",
                    "observer"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Grouper",
        "longname": "Grouper",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1377,
                1389
            ],
            "filename": "grouper.js",
            "lineno": 39,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005593",
                "name": "other",
                "type": "Identifier",
                "value": "arg1"
            }
        },
        "undocumented": true,
        "name": "other",
        "longname": "<anonymous>~other",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1403,
                1433
            ],
            "filename": "grouper.js",
            "lineno": 40,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005597",
                "name": "this._groupBy",
                "type": "MemberExpression",
                "value": "other._groupBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_groupBy",
        "longname": "Grouper#_groupBy",
        "kind": "member",
        "memberof": "Grouper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1447,
                1481
            ],
            "filename": "grouper.js",
            "lineno": 41,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005605",
                "name": "this._fieldSpec",
                "type": "MemberExpression",
                "value": "other._fieldSpec",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_fieldSpec",
        "longname": "Grouper#_fieldSpec",
        "kind": "member",
        "memberof": "Grouper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1540,
                1576
            ],
            "filename": "grouper.js",
            "lineno": 43,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005618",
                "name": "groupBy",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "groupBy",
        "longname": "<anonymous>~groupBy",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1724,
                1747
            ],
            "filename": "grouper.js",
            "lineno": 47,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005633",
                "name": "this._groupBy",
                "type": "Identifier",
                "value": "groupBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_groupBy",
        "longname": "Grouper#_groupBy",
        "kind": "member",
        "memberof": "Grouper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1860,
                2011
            ],
            "filename": "grouper.js",
            "lineno": 50,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005646",
                "name": "this._groupBy",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "_groupBy",
        "longname": "Grouper#_groupBy",
        "kind": "function",
        "memberof": "Grouper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2118,
                2188
            ],
            "filename": "grouper.js",
            "lineno": 56,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005679",
                "name": "this._groupBy",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "event"
                ]
            }
        },
        "undocumented": true,
        "name": "_groupBy",
        "longname": "Grouper#_groupBy",
        "kind": "function",
        "memberof": "Grouper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2436,
                2485
            ],
            "filename": "grouper.js",
            "lineno": 67,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005704",
                "name": "Grouper#clone",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "clone",
        "longname": "Grouper#clone",
        "kind": "function",
        "memberof": "Grouper",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Add a new key to the event and then emit\n     */",
        "meta": {
            "range": [
                2555,
                2683
            ],
            "filename": "grouper.js",
            "lineno": 74,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005712",
                "name": "Grouper#addEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Add a new key to the event and then emit",
        "name": "addEvent",
        "longname": "Grouper#addEvent",
        "kind": "function",
        "memberof": "Grouper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                503,
                1186
            ],
            "filename": "in.js",
            "lineno": 15,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005754",
                "name": "exports.",
                "type": "ClassDeclaration"
            }
        },
        "undocumented": true,
        "name": "",
        "longname": "",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                510,
                1186
            ],
            "filename": "in.js",
            "lineno": 15,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005755",
                "name": "In",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "In",
        "longname": "In",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                545,
                700
            ],
            "filename": "in.js",
            "lineno": 17,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005759",
                "name": "In",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "In",
        "longname": "In",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                587,
                615
            ],
            "filename": "in.js",
            "lineno": 20,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005767",
                "name": "this._id",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_id",
        "longname": "In#_id",
        "kind": "member",
        "memberof": "In",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                625,
                642
            ],
            "filename": "in.js",
            "lineno": 21,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005777",
                "name": "this._type",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_type",
        "longname": "In#_type",
        "kind": "member",
        "memberof": "In",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                706,
                1184
            ],
            "filename": "in.js",
            "lineno": 24,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005782",
                "name": "In#_check",
                "type": "MethodDefinition",
                "paramnames": [
                    "e"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "_check",
        "longname": "In#_check",
        "kind": "function",
        "memberof": "In",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                799,
                817
            ],
            "filename": "in.js",
            "lineno": 27,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005799",
                "name": "this._type",
                "type": "Identifier",
                "value": "Event",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_type",
        "longname": "In#_type",
        "kind": "member",
        "memberof": "In",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                889,
                916
            ],
            "filename": "in.js",
            "lineno": 29,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005810",
                "name": "this._type",
                "type": "Identifier",
                "value": "TimeRangeEvent",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_type",
        "longname": "In#_type",
        "kind": "member",
        "memberof": "In",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                986,
                1011
            ],
            "filename": "in.js",
            "lineno": 31,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005821",
                "name": "this._type",
                "type": "Identifier",
                "value": "IndexedEvent",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_type",
        "longname": "In#_type",
        "kind": "member",
        "memberof": "In",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1188,
                1546
            ],
            "filename": "in.js",
            "lineno": 41,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005839",
                "name": "exports.",
                "type": "ClassDeclaration"
            }
        },
        "undocumented": true,
        "name": "",
        "longname": "",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1195,
                1546
            ],
            "filename": "in.js",
            "lineno": 41,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005840",
                "name": "BoundedIn",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "BoundedIn",
        "longname": "BoundedIn",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1228,
                1266
            ],
            "filename": "in.js",
            "lineno": 42,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005844",
                "name": "BoundedIn",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "BoundedIn",
        "longname": "BoundedIn",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1272,
                1356
            ],
            "filename": "in.js",
            "lineno": 46,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005851",
                "name": "BoundedIn#start",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "start",
        "longname": "BoundedIn#start",
        "kind": "function",
        "memberof": "BoundedIn",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1362,
                1444
            ],
            "filename": "in.js",
            "lineno": 50,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005859",
                "name": "BoundedIn#stop",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "stop",
        "longname": "BoundedIn#stop",
        "kind": "function",
        "memberof": "BoundedIn",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1450,
                1544
            ],
            "filename": "in.js",
            "lineno": 54,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005867",
                "name": "BoundedIn#onEmit",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "onEmit",
        "longname": "BoundedIn#onEmit",
        "kind": "function",
        "memberof": "BoundedIn",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1548,
                2236
            ],
            "filename": "in.js",
            "lineno": 59,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005875",
                "name": "exports.",
                "type": "ClassDeclaration"
            }
        },
        "undocumented": true,
        "name": "",
        "longname": "",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1555,
                2236
            ],
            "filename": "in.js",
            "lineno": 59,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005876",
                "name": "UnboundedIn",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "UnboundedIn",
        "longname": "UnboundedIn",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1591,
                1660
            ],
            "filename": "in.js",
            "lineno": 61,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005880",
                "name": "UnboundedIn",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "UnboundedIn",
        "longname": "UnboundedIn",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1633,
                1653
            ],
            "filename": "in.js",
            "lineno": 64,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005888",
                "name": "this._running",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_running",
        "longname": "UnboundedIn#_running",
        "kind": "member",
        "memberof": "UnboundedIn",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Start listening to events\n     */",
        "meta": {
            "range": [
                1715,
                1760
            ],
            "filename": "in.js",
            "lineno": 70,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005893",
                "name": "UnboundedIn#start",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Start listening to events",
        "name": "start",
        "longname": "UnboundedIn#start",
        "kind": "function",
        "memberof": "UnboundedIn",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1733,
                1753
            ],
            "filename": "in.js",
            "lineno": 71,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005898",
                "name": "this._running",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_running",
        "longname": "UnboundedIn#_running",
        "kind": "member",
        "memberof": "UnboundedIn",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Stop listening to events\n     */",
        "meta": {
            "range": [
                1814,
                1859
            ],
            "filename": "in.js",
            "lineno": 77,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005903",
                "name": "UnboundedIn#stop",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Stop listening to events",
        "name": "stop",
        "longname": "UnboundedIn#stop",
        "kind": "function",
        "memberof": "UnboundedIn",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1831,
                1852
            ],
            "filename": "in.js",
            "lineno": 78,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005908",
                "name": "this._running",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_running",
        "longname": "UnboundedIn#_running",
        "kind": "member",
        "memberof": "UnboundedIn",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Add an incoming event to the source\n     */",
        "meta": {
            "range": [
                1924,
                2129
            ],
            "filename": "in.js",
            "lineno": 84,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005913",
                "name": "UnboundedIn#addEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Add an incoming event to the source",
        "name": "addEvent",
        "longname": "UnboundedIn#addEvent",
        "kind": "function",
        "memberof": "UnboundedIn",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2135,
                2234
            ],
            "filename": "in.js",
            "lineno": 92,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005950",
                "name": "UnboundedIn#events",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "events",
        "longname": "UnboundedIn#events",
        "kind": "function",
        "memberof": "UnboundedIn",
        "scope": "instance"
    },
    {
        "comment": "/**\n * An index that represents as a string a range of time. That range may either\n * be in UTC or local time. UTC is the default.\n *\n * The actual derived timerange can be found using asRange(). This will return\n * a TimeRange instance.\n *\n * The original string representation can be found with toString(). A nice\n * version for date based indexes (e.g. 2015-03) can be generated with\n * toNiceString(format) (e.g. March, 2015).\n */",
        "meta": {
            "range": [
                863,
                2635
            ],
            "filename": "index.js",
            "lineno": 25,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005967",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "An index that represents as a string a range of time. That range may either\nbe in UTC or local time. UTC is the default.\n\nThe actual derived timerange can be found using asRange(). This will return\na TimeRange instance.\n\nThe original string representation can be found with toString(). A nice\nversion for date based indexes (e.g. 2015-03) can be generated with\ntoNiceString(format) (e.g. March, 2015).",
        "name": "exports",
        "longname": "module.exports",
        "kind": "class",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                878,
                2635
            ],
            "filename": "index.js",
            "lineno": 25,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005968",
                "name": "Index",
                "type": "ClassDeclaration",
                "paramnames": [
                    "s",
                    "utc"
                ]
            }
        },
        "undocumented": true,
        "name": "Index",
        "longname": "Index",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                897,
                1068
            ],
            "filename": "index.js",
            "lineno": 27,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005971",
                "name": "Index",
                "type": "MethodDefinition",
                "paramnames": [
                    "s",
                    "utc"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Index",
        "longname": "Index",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                927,
                968
            ],
            "filename": "index.js",
            "lineno": 28,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005978",
                "name": "this._utc",
                "type": "ConditionalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_utc",
        "longname": "Index#_utc",
        "kind": "member",
        "memberof": "Index",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                978,
                994
            ],
            "filename": "index.js",
            "lineno": 29,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005991",
                "name": "this._string",
                "type": "Identifier",
                "value": "s",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_string",
        "longname": "Index#_string",
        "kind": "member",
        "memberof": "Index",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1004,
                1061
            ],
            "filename": "index.js",
            "lineno": 30,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100005997",
                "name": "this._timerange",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_timerange",
        "longname": "Index#_timerange",
        "kind": "member",
        "memberof": "Index",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the Index as JSON, which will just be its string\n     * representation\n     */",
        "meta": {
            "range": [
                1176,
                1221
            ],
            "filename": "index.js",
            "lineno": 37,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006009",
                "name": "Index#toJSON",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the Index as JSON, which will just be its string\nrepresentation",
        "name": "toJSON",
        "longname": "Index#toJSON",
        "kind": "function",
        "memberof": "Index",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Simply returns the Index as its string\n     */",
        "meta": {
            "range": [
                1289,
                1336
            ],
            "filename": "index.js",
            "lineno": 44,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006017",
                "name": "Index#toString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Simply returns the Index as its string",
        "name": "toString",
        "longname": "Index#toString",
        "kind": "function",
        "memberof": "Index",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * for the calendar range style Indexes, this lets you return\n     * that calendar range as a human readable format, e.g. \"June, 2014\".\n     * The format specified is a Moment.format.\n     */",
        "meta": {
            "range": [
                1546,
                1633
            ],
            "filename": "index.js",
            "lineno": 53,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006025",
                "name": "Index#toNiceString",
                "type": "MethodDefinition",
                "paramnames": [
                    "format"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "for the calendar range style Indexes, this lets you return\nthat calendar range as a human readable format, e.g. \"June, 2014\".\nThe format specified is a Moment.format.",
        "name": "toNiceString",
        "longname": "Index#toNiceString",
        "kind": "function",
        "memberof": "Index",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Alias for toString()\n     */",
        "meta": {
            "range": [
                1683,
                1733
            ],
            "filename": "index.js",
            "lineno": 60,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006039",
                "name": "Index#asString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Alias for toString()",
        "name": "asString",
        "longname": "Index#asString",
        "kind": "function",
        "memberof": "Index",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the Index as a TimeRange\n     */",
        "meta": {
            "range": [
                1795,
                1848
            ],
            "filename": "index.js",
            "lineno": 67,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006048",
                "name": "Index#asTimerange",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the Index as a TimeRange",
        "name": "asTimerange",
        "longname": "Index#asTimerange",
        "kind": "function",
        "memberof": "Index",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the start date of the Index\n     */",
        "meta": {
            "range": [
                1913,
                1968
            ],
            "filename": "index.js",
            "lineno": 74,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006056",
                "name": "Index#begin",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the start date of the Index",
        "name": "begin",
        "longname": "Index#begin",
        "kind": "function",
        "memberof": "Index",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the end date of the Index\n     */",
        "meta": {
            "range": [
                2031,
                2082
            ],
            "filename": "index.js",
            "lineno": 81,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006067",
                "name": "Index#end",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the end date of the Index",
        "name": "end",
        "longname": "Index#end",
        "kind": "function",
        "memberof": "Index",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2088,
                2220
            ],
            "filename": "index.js",
            "lineno": 85,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006078",
                "name": "Index.getIndexString",
                "type": "MethodDefinition",
                "paramnames": [
                    "win",
                    "date"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "getIndexString",
        "longname": "Index.getIndexString",
        "kind": "function",
        "memberof": "Index",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2137,
                2181
            ],
            "filename": "index.js",
            "lineno": 86,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006085",
                "name": "pos",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "<anonymous>~pos",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2226,
                2633
            ],
            "filename": "index.js",
            "lineno": 90,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006100",
                "name": "Index.getIndexStringList",
                "type": "MethodDefinition",
                "paramnames": [
                    "win",
                    "timerange"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "getIndexStringList",
        "longname": "Index.getIndexStringList",
        "kind": "function",
        "memberof": "Index",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2284,
                2342
            ],
            "filename": "index.js",
            "lineno": 91,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006107",
                "name": "pos1",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pos1",
        "longname": "<anonymous>~pos1",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2358,
                2414
            ],
            "filename": "index.js",
            "lineno": 92,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006119",
                "name": "pos2",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pos2",
        "longname": "<anonymous>~pos2",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2430,
                2444
            ],
            "filename": "index.js",
            "lineno": 93,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006131",
                "name": "indexList",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "indexList",
        "longname": "<anonymous>~indexList",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2495,
                2505
            ],
            "filename": "index.js",
            "lineno": 95,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006141",
                "name": "pos",
                "type": "Identifier",
                "value": "pos1"
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "<anonymous>~pos",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Base class for objects in the processing chain which\n * need other object to listen to them. It provides a basic\n * interface to define the relationships and to emit events\n * to the interested observers.\n */",
        "meta": {
            "range": [
                588,
                1297
            ],
            "filename": "observable.js",
            "lineno": 17,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006164",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "Base class for objects in the processing chain which\nneed other object to listen to them. It provides a basic\ninterface to define the relationships and to emit events\nto the interested observers.",
        "name": "exports",
        "longname": "module.exports",
        "kind": "class",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                603,
                1297
            ],
            "filename": "observable.js",
            "lineno": 17,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006165",
                "name": "Observable",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Observable",
        "longname": "Observable",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                627,
                678
            ],
            "filename": "observable.js",
            "lineno": 19,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006168",
                "name": "Observable",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Observable",
        "longname": "Observable",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                651,
                671
            ],
            "filename": "observable.js",
            "lineno": 20,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006173",
                "name": "this._observers",
                "type": "ArrayExpression",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_observers",
        "longname": "Observable#_observers",
        "kind": "member",
        "memberof": "Observable",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                684,
                774
            ],
            "filename": "observable.js",
            "lineno": 23,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006178",
                "name": "Observable#emit",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "emit",
        "longname": "Observable#emit",
        "kind": "function",
        "memberof": "Observable",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                780,
                969
            ],
            "filename": "observable.js",
            "lineno": 27,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006197",
                "name": "Observable#done",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "Observable#done",
        "kind": "function",
        "memberof": "Observable",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                975,
                1224
            ],
            "filename": "observable.js",
            "lineno": 35,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006230",
                "name": "Observable#addObserver",
                "type": "MethodDefinition",
                "paramnames": [
                    "observer"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "addObserver",
        "longname": "Observable#addObserver",
        "kind": "function",
        "memberof": "Observable",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1011,
                1027
            ],
            "filename": "observable.js",
            "lineno": 36,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006236",
                "name": "shouldAdd",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "shouldAdd",
        "longname": "<anonymous>~shouldAdd",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1118,
                1135
            ],
            "filename": "observable.js",
            "lineno": 39,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006255",
                "name": "shouldAdd",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "shouldAdd",
        "longname": "<anonymous>~shouldAdd",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1230,
                1295
            ],
            "filename": "observable.js",
            "lineno": 46,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006268",
                "name": "Observable#hasObservers",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "hasObservers",
        "longname": "Observable#hasObservers",
        "kind": "function",
        "memberof": "Observable",
        "scope": "instance"
    },
    {
        "comment": "/**\n * A simple processor used by the testing code to verify Pipeline behavior\n */",
        "meta": {
            "range": [
                597,
                1716
            ],
            "filename": "offset.js",
            "lineno": 20,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006297",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "A simple processor used by the testing code to verify Pipeline behavior",
        "name": "exports",
        "longname": "module.exports",
        "kind": "class",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                612,
                1716
            ],
            "filename": "offset.js",
            "lineno": 20,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006298",
                "name": "Offset",
                "type": "ClassDeclaration",
                "paramnames": [
                    "arg1",
                    "options",
                    "observer"
                ]
            }
        },
        "undocumented": true,
        "name": "Offset",
        "longname": "Offset",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                650,
                1114
            ],
            "filename": "offset.js",
            "lineno": 22,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006302",
                "name": "Offset",
                "type": "MethodDefinition",
                "paramnames": [
                    "arg1",
                    "options",
                    "observer"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Offset",
        "longname": "Offset",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                786,
                798
            ],
            "filename": "offset.js",
            "lineno": 26,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006321",
                "name": "other",
                "type": "Identifier",
                "value": "arg1"
            }
        },
        "undocumented": true,
        "name": "other",
        "longname": "<anonymous>~other",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                812,
                832
            ],
            "filename": "offset.js",
            "lineno": 27,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006325",
                "name": "this._by",
                "type": "MemberExpression",
                "value": "other._by",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_by",
        "longname": "Offset#_by",
        "kind": "member",
        "memberof": "Offset",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                846,
                880
            ],
            "filename": "offset.js",
            "lineno": 28,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006333",
                "name": "this._fieldSpec",
                "type": "MemberExpression",
                "value": "other._fieldSpec",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_fieldSpec",
        "longname": "Offset#_fieldSpec",
        "kind": "member",
        "memberof": "Offset",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                933,
                959
            ],
            "filename": "offset.js",
            "lineno": 30,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006346",
                "name": "this._by",
                "type": "LogicalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_by",
        "longname": "Offset#_by",
        "kind": "member",
        "memberof": "Offset",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                973,
                1008
            ],
            "filename": "offset.js",
            "lineno": 31,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006356",
                "name": "this._fieldSpec",
                "type": "MemberExpression",
                "value": "options.fieldSpec",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_fieldSpec",
        "longname": "Offset#_fieldSpec",
        "kind": "member",
        "memberof": "Offset",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1120,
                1168
            ],
            "filename": "offset.js",
            "lineno": 37,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006369",
                "name": "Offset#clone",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "clone",
        "longname": "Offset#clone",
        "kind": "function",
        "memberof": "Offset",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Add an event will add a key to the event and then emit the\n     * event with that key.\n     */",
        "meta": {
            "range": [
                1284,
                1714
            ],
            "filename": "offset.js",
            "lineno": 45,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006377",
                "name": "Offset#addEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Add an event will add a key to the event and then emit the\nevent with that key.",
        "name": "addEvent",
        "longname": "Offset#addEvent",
        "kind": "function",
        "memberof": "Offset",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1355,
                1404
            ],
            "filename": "offset.js",
            "lineno": 47,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006389",
                "name": "selected",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "selected",
        "longname": "<anonymous>~selected",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1424,
                1433
            ],
            "filename": "offset.js",
            "lineno": 48,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006400",
                "name": "data",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1520,
                1550
            ],
            "filename": "offset.js",
            "lineno": 50,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006420",
                "name": "offsetValue",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "offsetValue",
        "longname": "<anonymous>~offsetValue",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1568,
                1591
            ],
            "filename": "offset.js",
            "lineno": 51,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006428",
                "name": "data[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "offsetValue",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~data.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~data",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1627,
                1660
            ],
            "filename": "offset.js",
            "lineno": 53,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006434",
                "name": "outputEvent",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "outputEvent",
        "longname": "<anonymous>~outputEvent",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n *  Copyright (c) 2016, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */",
        "meta": {
            "range": [
                372,
                748
            ],
            "filename": "out.js",
            "lineno": 11,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006448",
                "name": "exports.",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "Copyright (c) 2016, The Regents of the University of California,\n through Lawrence Berkeley National Laboratory (subject to receipt\n of any required approvals from the U.S. Dept. of Energy).\n All rights reserved.\n\n This source code is licensed under the BSD-style license found in the\n LICENSE file in the root directory of this source tree.",
        "name": "",
        "longname": "",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                379,
                748
            ],
            "filename": "out.js",
            "lineno": 11,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006449",
                "name": "EventOut",
                "type": "ClassDeclaration",
                "paramnames": [
                    "callback"
                ]
            }
        },
        "undocumented": true,
        "name": "EventOut",
        "longname": "EventOut",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                401,
                465
            ],
            "filename": "out.js",
            "lineno": 13,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006452",
                "name": "EventOut",
                "type": "MethodDefinition",
                "paramnames": [
                    "callback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "EventOut",
        "longname": "EventOut",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                433,
                458
            ],
            "filename": "out.js",
            "lineno": 14,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006458",
                "name": "this._callback",
                "type": "Identifier",
                "value": "callback",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_callback",
        "longname": "EventOut#_callback",
        "kind": "member",
        "memberof": "EventOut",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                471,
                636
            ],
            "filename": "out.js",
            "lineno": 17,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006463",
                "name": "EventOut#addEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "addEvent",
        "longname": "EventOut#addEvent",
        "kind": "function",
        "memberof": "EventOut",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                642,
                689
            ],
            "filename": "out.js",
            "lineno": 24,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006489",
                "name": "EventOut#onEmit",
                "type": "MethodDefinition",
                "paramnames": [
                    "cb"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "onEmit",
        "longname": "EventOut#onEmit",
        "kind": "function",
        "memberof": "EventOut",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                663,
                682
            ],
            "filename": "out.js",
            "lineno": 25,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006495",
                "name": "this._callback",
                "type": "Identifier",
                "value": "cb",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_callback",
        "longname": "EventOut#_callback",
        "kind": "member",
        "memberof": "EventOut",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                699,
                746
            ],
            "filename": "out.js",
            "lineno": 28,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006500",
                "name": "EventOut#done",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "EventOut#done",
        "kind": "function",
        "memberof": "EventOut",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                750,
                1098
            ],
            "filename": "out.js",
            "lineno": 33,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006510",
                "name": "exports.",
                "type": "ClassDeclaration"
            }
        },
        "undocumented": true,
        "name": "",
        "longname": "",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                757,
                1098
            ],
            "filename": "out.js",
            "lineno": 33,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006511",
                "name": "ConsoleOut",
                "type": "ClassDeclaration",
                "paramnames": [
                    "observer"
                ]
            }
        },
        "undocumented": true,
        "name": "ConsoleOut",
        "longname": "ConsoleOut",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                781,
                845
            ],
            "filename": "out.js",
            "lineno": 35,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006514",
                "name": "ConsoleOut",
                "type": "MethodDefinition",
                "paramnames": [
                    "observer"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "ConsoleOut",
        "longname": "ConsoleOut",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                813,
                838
            ],
            "filename": "out.js",
            "lineno": 36,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006520",
                "name": "this._observer",
                "type": "Identifier",
                "value": "observer",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_observer",
        "longname": "ConsoleOut#_observer",
        "kind": "member",
        "memberof": "ConsoleOut",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Add an event will add a key to the event and then emit the\n     * event with that key.\n     */",
        "meta": {
            "range": [
                961,
                1031
            ],
            "filename": "out.js",
            "lineno": 43,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006525",
                "name": "ConsoleOut#addEvent",
                "type": "MethodDefinition",
                "paramnames": [
                    "event"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Add an event will add a key to the event and then emit the\nevent with that key.",
        "name": "addEvent",
        "longname": "ConsoleOut#addEvent",
        "kind": "function",
        "memberof": "ConsoleOut",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1037,
                1096
            ],
            "filename": "out.js",
            "lineno": 47,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006540",
                "name": "ConsoleOut#onEmit",
                "type": "MethodDefinition",
                "paramnames": [
                    "observer"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "onEmit",
        "longname": "ConsoleOut#onEmit",
        "kind": "function",
        "memberof": "ConsoleOut",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1064,
                1089
            ],
            "filename": "out.js",
            "lineno": 48,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006546",
                "name": "this._callback",
                "type": "Identifier",
                "value": "observer",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_callback",
        "longname": "ConsoleOut#_callback",
        "kind": "member",
        "memberof": "ConsoleOut",
        "scope": "instance"
    },
    {
        "comment": "/**\n * A pipeline manages a processing chain, for either batch or stream processing\n * of collection data.\n */",
        "meta": {
            "range": [
                709,
                8012
            ],
            "filename": "pipeline.js",
            "lineno": 25,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006578",
                "name": "Pipeline",
                "type": "ClassDeclaration",
                "paramnames": [
                    "arg"
                ]
            }
        },
        "classdesc": "A pipeline manages a processing chain, for either batch or stream processing\nof collection data.",
        "name": "Pipeline",
        "longname": "Pipeline",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                731,
                1243
            ],
            "filename": "pipeline.js",
            "lineno": 27,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006581",
                "name": "Pipeline",
                "type": "MethodDefinition",
                "paramnames": [
                    "arg"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Pipeline",
        "longname": "Pipeline",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                807,
                818
            ],
            "filename": "pipeline.js",
            "lineno": 29,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006592",
                "name": "other",
                "type": "Identifier",
                "value": "arg"
            }
        },
        "undocumented": true,
        "name": "other",
        "longname": "<anonymous>~other",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                832,
                850
            ],
            "filename": "pipeline.js",
            "lineno": 30,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006596",
                "name": "this._d",
                "type": "MemberExpression",
                "value": "other._d",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_d",
        "longname": "Pipeline#_d",
        "kind": "member",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                915,
                928
            ],
            "filename": "pipeline.js",
            "lineno": 32,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006611",
                "name": "this._d",
                "type": "Identifier",
                "value": "arg",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_d",
        "longname": "Pipeline#_d",
        "kind": "member",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                959,
                1226
            ],
            "filename": "pipeline.js",
            "lineno": 34,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006618",
                "name": "this._d",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_d",
        "longname": "Pipeline#_d",
        "kind": "member",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1005,
                1015
            ],
            "filename": "pipeline.js",
            "lineno": 35,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006627",
                "name": "type",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "type",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1033,
                1041
            ],
            "filename": "pipeline.js",
            "lineno": 36,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006629",
                "name": "in",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "in",
        "longname": "in",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1059,
                1070
            ],
            "filename": "pipeline.js",
            "lineno": 37,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006631",
                "name": "first",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "first",
        "longname": "first",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1088,
                1098
            ],
            "filename": "pipeline.js",
            "lineno": 38,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006633",
                "name": "last",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "last",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1116,
                1136
            ],
            "filename": "pipeline.js",
            "lineno": 39,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006635",
                "name": "windowType",
                "type": "Literal",
                "value": "global"
            }
        },
        "undocumented": true,
        "name": "windowType",
        "longname": "windowType",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1154,
                1174
            ],
            "filename": "pipeline.js",
            "lineno": 40,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006637",
                "name": "windowDuration",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "windowDuration",
        "longname": "windowDuration",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1192,
                1211
            ],
            "filename": "pipeline.js",
            "lineno": 41,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006639",
                "name": "emitOn",
                "type": "Literal",
                "value": "eachEvent"
            }
        },
        "undocumented": true,
        "name": "emitOn",
        "longname": "emitOn",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1281,
                1327
            ],
            "filename": "pipeline.js",
            "lineno": 50,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006641",
                "name": "Pipeline#in",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "in",
        "longname": "Pipeline#in",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1333,
                1383
            ],
            "filename": "pipeline.js",
            "lineno": 54,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006653",
                "name": "Pipeline#mode",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "mode",
        "longname": "Pipeline#mode",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1389,
                1441
            ],
            "filename": "pipeline.js",
            "lineno": 58,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006665",
                "name": "Pipeline#first",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "first",
        "longname": "Pipeline#first",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1447,
                1497
            ],
            "filename": "pipeline.js",
            "lineno": 62,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006677",
                "name": "Pipeline#last",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "Pipeline#last",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1503,
                1568
            ],
            "filename": "pipeline.js",
            "lineno": 66,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006689",
                "name": "Pipeline#getWindowType",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "getWindowType",
        "longname": "Pipeline#getWindowType",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1575,
                1648
            ],
            "filename": "pipeline.js",
            "lineno": 71,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006701",
                "name": "Pipeline#getWindowDuration",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "getWindowDuration",
        "longname": "Pipeline#getWindowDuration",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1654,
                1711
            ],
            "filename": "pipeline.js",
            "lineno": 75,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006713",
                "name": "Pipeline#getEmitOn",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "getEmitOn",
        "longname": "Pipeline#getEmitOn",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Setting the In for the Pipeline returns a new Pipeline\n     */",
        "meta": {
            "range": [
                1836,
                2280
            ],
            "filename": "pipeline.js",
            "lineno": 86,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006725",
                "name": "Pipeline#setIn",
                "type": "MethodDefinition",
                "paramnames": [
                    "input"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Setting the In for the Pipeline returns a new Pipeline",
        "name": "setIn",
        "longname": "Pipeline#setIn",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1863,
                1867
            ],
            "filename": "pipeline.js",
            "lineno": 87,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006731",
                "name": "mode"
            }
        },
        "undocumented": true,
        "name": "mode",
        "longname": "<anonymous>~mode",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1923,
                1937
            ],
            "filename": "pipeline.js",
            "lineno": 89,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006739",
                "name": "mode",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": "batch",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "mode",
        "longname": "<anonymous>~mode",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2002,
                2017
            ],
            "filename": "pipeline.js",
            "lineno": 91,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006748",
                "name": "mode",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": "stream",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "mode",
        "longname": "<anonymous>~mode",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2127,
                2240
            ],
            "filename": "pipeline.js",
            "lineno": 96,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006758",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Set the first processing node pointed to, returning\n     * a new Pipeline. The original pipeline will still point\n     * to its orginal processing node\n     */",
        "meta": {
            "range": [
                2461,
                2555
            ],
            "filename": "pipeline.js",
            "lineno": 109,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006785",
                "name": "Pipeline#setFirst",
                "type": "MethodDefinition",
                "paramnames": [
                    "n"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Set the first processing node pointed to, returning\na new Pipeline. The original pipeline will still point\nto its orginal processing node",
        "name": "setFirst",
        "longname": "Pipeline#setFirst",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2489,
                2516
            ],
            "filename": "pipeline.js",
            "lineno": 110,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006791",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2561,
                2653
            ],
            "filename": "pipeline.js",
            "lineno": 114,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006805",
                "name": "Pipeline#setLast",
                "type": "MethodDefinition",
                "paramnames": [
                    "n"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "setLast",
        "longname": "Pipeline#setLast",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2588,
                2614
            ],
            "filename": "pipeline.js",
            "lineno": 115,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006811",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Set the window, returning a new Pipeline\n     */",
        "meta": {
            "range": [
                2723,
                3009
            ],
            "filename": "pipeline.js",
            "lineno": 122,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006825",
                "name": "Pipeline#setWindow",
                "type": "MethodDefinition",
                "paramnames": [
                    "w"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Set the window, returning a new Pipeline",
        "name": "setWindow",
        "longname": "Pipeline#setWindow",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2754,
                2758
            ],
            "filename": "pipeline.js",
            "lineno": 123,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006833",
                "name": "type",
                "type": "Identifier",
                "value": "type"
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "type",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2760,
                2768
            ],
            "filename": "pipeline.js",
            "lineno": 123,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006835",
                "name": "duration",
                "type": "Identifier",
                "value": "duration"
            }
        },
        "undocumented": true,
        "name": "duration",
        "longname": "duration",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2770,
                2776
            ],
            "filename": "pipeline.js",
            "lineno": 123,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006837",
                "name": "onEmit",
                "type": "Identifier",
                "value": "onEmit"
            }
        },
        "undocumented": true,
        "name": "onEmit",
        "longname": "onEmit",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2798,
                2970
            ],
            "filename": "pipeline.js",
            "lineno": 124,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006841",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3015,
                3123
            ],
            "filename": "pipeline.js",
            "lineno": 132,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006873",
                "name": "Pipeline#setOnEmit",
                "type": "MethodDefinition",
                "paramnames": [
                    "trigger"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "setOnEmit",
        "longname": "Pipeline#setOnEmit",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3050,
                3084
            ],
            "filename": "pipeline.js",
            "lineno": 133,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006879",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3129,
                3498
            ],
            "filename": "pipeline.js",
            "lineno": 137,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006893",
                "name": "Pipeline#append",
                "type": "MethodDefinition",
                "paramnames": [
                    "processor"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "append",
        "longname": "Pipeline#append",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3161,
                3181
            ],
            "filename": "pipeline.js",
            "lineno": 138,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006899",
                "name": "first",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "first",
        "longname": "<anonymous>~first",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3195,
                3213
            ],
            "filename": "pipeline.js",
            "lineno": 139,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006906",
                "name": "last",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "<anonymous>~last",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3236,
                3253
            ],
            "filename": "pipeline.js",
            "lineno": 141,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006916",
                "name": "first",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "processor",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "first",
        "longname": "<anonymous>~first",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3310,
                3326
            ],
            "filename": "pipeline.js",
            "lineno": 143,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006928",
                "name": "last",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "processor",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "<anonymous>~last",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3343,
                3459
            ],
            "filename": "pipeline.js",
            "lineno": 145,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006932",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * The \"In\" to get events from. The In needs to be able to\n     * iterate its events using for..of loop for bounded Ins, or\n     * be able to emit for unbounded Ins. The actual batch, or stream\n     * connection occurs when an output is defined with to().\n     *\n     * from() returns a new Pipeline.\n     */",
        "meta": {
            "range": [
                3851,
                4054
            ],
            "filename": "pipeline.js",
            "lineno": 164,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006959",
                "name": "Pipeline#from",
                "type": "MethodDefinition",
                "paramnames": [
                    "src"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "The \"In\" to get events from. The In needs to be able to\niterate its events using for..of loop for bounded Ins, or\nbe able to emit for unbounded Ins. The actual batch, or stream\nconnection occurs when an output is defined with to().\n\nfrom() returns a new Pipeline.",
        "name": "from",
        "longname": "Pipeline#from",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3920,
                3941
            ],
            "filename": "pipeline.js",
            "lineno": 166,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006970",
                "name": "pipelineIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pipelineIn",
        "longname": "<anonymous>~pipelineIn",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Sets up the destination sink for the pipeline. The output should\n     * be a BatchOut subclass for a bounded input and a StreamOut subclass\n     * for an unbounded input.\n     *\n     * For a batch mode connection, the output is connected and then the\n     * source input is iterated over to process all events into the pipeline and\n     * down to the out.\n     *\n     * For stream mode connections, the output is connected and from then on\n     * any events added to the input will be processed down the pipeline to\n     * the out.\n     */",
        "meta": {
            "range": [
                4615,
                6552
            ],
            "filename": "pipeline.js",
            "lineno": 186,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100006989",
                "name": "Pipeline#to",
                "type": "MethodDefinition",
                "paramnames": [
                    "output",
                    "force"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Sets up the destination sink for the pipeline. The output should\nbe a BatchOut subclass for a bounded input and a StreamOut subclass\nfor an unbounded input.\n\nFor a batch mode connection, the output is connected and then the\nsource input is iterated over to process all events into the pipeline and\ndown to the out.\n\nFor stream mode connections, the output is connected and from then on\nany events added to the input will be processed down the pipeline to\nthe out.",
        "name": "to",
        "longname": "Pipeline#to",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5079,
                5113
            ],
            "filename": "pipeline.js",
            "lineno": 198,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007017",
                "name": "processChain",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "processChain",
        "longname": "<anonymous>~processChain",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5133,
                5172
            ],
            "filename": "pipeline.js",
            "lineno": 199,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007027",
                "name": "input",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "input",
        "longname": "<anonymous>~input",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5364,
                5383
            ],
            "filename": "pipeline.js",
            "lineno": 206,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007039",
                "name": "executionChain",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "executionChain",
        "longname": "<anonymous>~executionChain",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5401,
                5414
            ],
            "filename": "pipeline.js",
            "lineno": 207,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007043",
                "name": "prev",
                "type": "Identifier",
                "value": "output"
            }
        },
        "undocumented": true,
        "name": "prev",
        "longname": "<anonymous>~prev",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5528,
                5549
            ],
            "filename": "pipeline.js",
            "lineno": 210,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007060",
                "name": "processor",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "processor",
        "longname": "<anonymous>~processor",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5730,
                5746
            ],
            "filename": "pipeline.js",
            "lineno": 215,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007082",
                "name": "prev",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "processor",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "prev",
        "longname": "<anonymous>~prev",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6032,
                6059
            ],
            "filename": "pipeline.js",
            "lineno": 225,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007086",
                "name": "head",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "head",
        "longname": "<anonymous>~head",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6085,
                6086
            ],
            "filename": "pipeline.js",
            "lineno": 227,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007094",
                "name": "e"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * One of \"eachEvent\", \"discard\", \"windowMove\" currently.\n     */",
        "meta": {
            "range": [
                6636,
                6699
            ],
            "filename": "pipeline.js",
            "lineno": 250,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007167",
                "name": "Pipeline#emitOn",
                "type": "MethodDefinition",
                "paramnames": [
                    "trigger"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "One of \"eachEvent\", \"discard\", \"windowMove\" currently.",
        "name": "emitOn",
        "longname": "Pipeline#emitOn",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Sets the pipeline to group by fixed windows\n     */",
        "meta": {
            "range": [
                6772,
                6919
            ],
            "filename": "pipeline.js",
            "lineno": 257,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007178",
                "name": "Pipeline#window",
                "type": "MethodDefinition",
                "paramnames": [
                    "duration"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Sets the pipeline to group by fixed windows",
        "name": "window",
        "longname": "Pipeline#window",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6835,
                6848
            ],
            "filename": "pipeline.js",
            "lineno": 259,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007189",
                "name": "type",
                "type": "Literal",
                "value": "fixed"
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "type",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6862,
                6870
            ],
            "filename": "pipeline.js",
            "lineno": 260,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007191",
                "name": "duration",
                "type": "Identifier",
                "value": "duration"
            }
        },
        "undocumented": true,
        "name": "duration",
        "longname": "duration",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6884,
                6901
            ],
            "filename": "pipeline.js",
            "lineno": 261,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007193",
                "name": "emitOn",
                "type": "Literal",
                "value": "discard"
            }
        },
        "undocumented": true,
        "name": "emitOn",
        "longname": "emitOn",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7403,
                7605
            ],
            "filename": "pipeline.js",
            "lineno": 285,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007195",
                "name": "Pipeline#offsetBy",
                "type": "MethodDefinition",
                "paramnames": [
                    "by",
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "offsetBy",
        "longname": "Pipeline#offsetBy",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7443,
                7566
            ],
            "filename": "pipeline.js",
            "lineno": 286,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007202",
                "name": "p",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "p",
        "longname": "<anonymous>~p",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7478,
                7480
            ],
            "filename": "pipeline.js",
            "lineno": 287,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007208",
                "name": "by",
                "type": "Identifier",
                "value": "by"
            }
        },
        "undocumented": true,
        "name": "by",
        "longname": "by",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7494,
                7503
            ],
            "filename": "pipeline.js",
            "lineno": 288,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007210",
                "name": "fieldSpec",
                "type": "Identifier",
                "value": "fieldSpec"
            }
        },
        "undocumented": true,
        "name": "fieldSpec",
        "longname": "fieldSpec",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7517,
                7555
            ],
            "filename": "pipeline.js",
            "lineno": 289,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007212",
                "name": "prev",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "prev",
        "longname": "prev",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7611,
                7830
            ],
            "filename": "pipeline.js",
            "lineno": 295,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007229",
                "name": "Pipeline#aggregate",
                "type": "MethodDefinition",
                "paramnames": [
                    "operator",
                    "fields"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "aggregate",
        "longname": "Pipeline#aggregate",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7655,
                7783
            ],
            "filename": "pipeline.js",
            "lineno": 296,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007236",
                "name": "p",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "p",
        "longname": "<anonymous>~p",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7694,
                7702
            ],
            "filename": "pipeline.js",
            "lineno": 297,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007242",
                "name": "operator",
                "type": "Identifier",
                "value": "operator"
            }
        },
        "undocumented": true,
        "name": "operator",
        "longname": "operator",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7716,
                7722
            ],
            "filename": "pipeline.js",
            "lineno": 298,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007244",
                "name": "fields",
                "type": "Identifier",
                "value": "fields"
            }
        },
        "undocumented": true,
        "name": "fields",
        "longname": "fields",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7736,
                7772
            ],
            "filename": "pipeline.js",
            "lineno": 299,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007246",
                "name": "prev",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "prev",
        "longname": "prev",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7836,
                8010
            ],
            "filename": "pipeline.js",
            "lineno": 305,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007261",
                "name": "Pipeline#groupBy",
                "type": "MethodDefinition",
                "paramnames": [
                    "by"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "groupBy",
        "longname": "Pipeline#groupBy",
        "kind": "function",
        "memberof": "Pipeline",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7864,
                7963
            ],
            "filename": "pipeline.js",
            "lineno": 306,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007267",
                "name": "p",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "p",
        "longname": "<anonymous>~p",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7900,
                7902
            ],
            "filename": "pipeline.js",
            "lineno": 307,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007273",
                "name": "by",
                "type": "Identifier",
                "value": "by"
            }
        },
        "undocumented": true,
        "name": "by",
        "longname": "by",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7916,
                7952
            ],
            "filename": "pipeline.js",
            "lineno": 308,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007275",
                "name": "prev",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "prev",
        "longname": "prev",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8014,
                8072
            ],
            "filename": "pipeline.js",
            "lineno": 315,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007290",
                "name": "pipeline",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "args"
                ]
            }
        },
        "undocumented": true,
        "name": "pipeline",
        "longname": "pipeline",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8074,
                8126
            ],
            "filename": "pipeline.js",
            "lineno": 319,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007298",
                "name": "is",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "p"
                ]
            }
        },
        "undocumented": true,
        "name": "is",
        "longname": "is",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8136,
                8156
            ],
            "filename": "pipeline.js",
            "lineno": 323,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007307",
                "name": "exports.Pipeline",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "Pipeline",
        "longname": "Pipeline",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8158,
                8174
            ],
            "filename": "pipeline.js",
            "lineno": 323,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007310",
                "name": "exports.isPipeline",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isPipeline",
        "longname": "isPipeline",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                453,
                664
            ],
            "filename": "processor.js",
            "lineno": 14,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007322",
                "name": "addPrevToChain",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "n",
                    "chain"
                ]
            }
        },
        "undocumented": true,
        "name": "addPrevToChain",
        "longname": "addPrevToChain",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                666,
                1100
            ],
            "filename": "processor.js",
            "lineno": 24,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007363",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "class",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                681,
                1100
            ],
            "filename": "processor.js",
            "lineno": 24,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007364",
                "name": "Processor",
                "type": "ClassDeclaration",
                "paramnames": [
                    "arg1",
                    "options"
                ]
            }
        },
        "undocumented": true,
        "name": "Processor",
        "longname": "Processor",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                723,
                892
            ],
            "filename": "processor.js",
            "lineno": 26,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007368",
                "name": "Processor",
                "type": "MethodDefinition",
                "paramnames": [
                    "arg1",
                    "options"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Processor",
        "longname": "Processor",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                814,
                835
            ],
            "filename": "processor.js",
            "lineno": 30,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007383",
                "name": "this._pipeline",
                "type": "Identifier",
                "value": "arg1",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_pipeline",
        "longname": "Processor#_pipeline",
        "kind": "member",
        "memberof": "Processor",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                849,
                874
            ],
            "filename": "processor.js",
            "lineno": 31,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007389",
                "name": "this._prev",
                "type": "MemberExpression",
                "value": "options.prev",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_prev",
        "longname": "Processor#_prev",
        "kind": "member",
        "memberof": "Processor",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                898,
                939
            ],
            "filename": "processor.js",
            "lineno": 36,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007396",
                "name": "Processor#prev",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "prev",
        "longname": "Processor#prev",
        "kind": "function",
        "memberof": "Processor",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                945,
                994
            ],
            "filename": "processor.js",
            "lineno": 40,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007404",
                "name": "Processor#pipeline",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "pipeline",
        "longname": "Processor#pipeline",
        "kind": "function",
        "memberof": "Processor",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1000,
                1098
            ],
            "filename": "processor.js",
            "lineno": 44,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007412",
                "name": "Processor#chain",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "chain",
        "longname": "Processor#chain",
        "kind": "function",
        "memberof": "Processor",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1024,
                1040
            ],
            "filename": "processor.js",
            "lineno": 45,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007417",
                "name": "chain",
                "type": "ArrayExpression",
                "value": "[\"this\"]"
            }
        },
        "undocumented": true,
        "name": "chain",
        "longname": "<anonymous>~chain",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                465,
                7838
            ],
            "filename": "range.js",
            "lineno": 15,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007442",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "class",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                480,
                7838
            ],
            "filename": "range.js",
            "lineno": 15,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007443",
                "name": "TimeRange",
                "type": "ClassDeclaration",
                "paramnames": [
                    "arg1",
                    "arg2"
                ]
            }
        },
        "undocumented": true,
        "name": "TimeRange",
        "longname": "TimeRange",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/**\n     * Builds a new TimeRange which may be of several different formats:\n     *   - Another TimeRange (copy constructor)\n     *   - An Immutable.List containing two Dates.\n     *   - A Javascript array containing two Date or ms timestamps\n     *   - Two arguments, begin and end, each of which may be a Data,\n     *     a Moment, or a ms timestamp.\n     */",
        "meta": {
            "range": [
                868,
                1998
            ],
            "filename": "range.js",
            "lineno": 25,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007446",
                "name": "TimeRange",
                "type": "MethodDefinition",
                "paramnames": [
                    "arg1",
                    "arg2"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Builds a new TimeRange which may be of several different formats:\n  - Another TimeRange (copy constructor)\n  - An Immutable.List containing two Dates.\n  - A Javascript array containing two Date or ms timestamps\n  - Two arguments, begin and end, each of which may be a Data,\n    a Moment, or a ms timestamp.",
        "name": "TimeRange",
        "longname": "TimeRange",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                953,
                965
            ],
            "filename": "range.js",
            "lineno": 27,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007458",
                "name": "other",
                "type": "Identifier",
                "value": "arg1"
            }
        },
        "undocumented": true,
        "name": "other",
        "longname": "<anonymous>~other",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                979,
                1005
            ],
            "filename": "range.js",
            "lineno": 28,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007462",
                "name": "this._range",
                "type": "MemberExpression",
                "value": "other._range",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_range",
        "longname": "TimeRange#_range",
        "kind": "member",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1078,
                1094
            ],
            "filename": "range.js",
            "lineno": 30,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007477",
                "name": "rangeList",
                "type": "Identifier",
                "value": "arg1"
            }
        },
        "undocumented": true,
        "name": "rangeList",
        "longname": "<anonymous>~rangeList",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1108,
                1131
            ],
            "filename": "range.js",
            "lineno": 31,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007481",
                "name": "this._range",
                "type": "Identifier",
                "value": "rangeList",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_range",
        "longname": "TimeRange#_range",
        "kind": "member",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1189,
                1206
            ],
            "filename": "range.js",
            "lineno": 33,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007494",
                "name": "rangeArray",
                "type": "Identifier",
                "value": "arg1"
            }
        },
        "undocumented": true,
        "name": "rangeArray",
        "longname": "<anonymous>~rangeArray",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1220,
                1350
            ],
            "filename": "range.js",
            "lineno": 34,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007498",
                "name": "this._range",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_range",
        "longname": "TimeRange#_range",
        "kind": "member",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1387,
                1395
            ],
            "filename": "range.js",
            "lineno": 37,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007519",
                "name": "b",
                "type": "Identifier",
                "value": "arg1"
            }
        },
        "undocumented": true,
        "name": "b",
        "longname": "<anonymous>~b",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1415,
                1423
            ],
            "filename": "range.js",
            "lineno": 38,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007523",
                "name": "e",
                "type": "Identifier",
                "value": "arg2"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1487,
                1617
            ],
            "filename": "range.js",
            "lineno": 40,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007540",
                "name": "this._range",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_range",
        "longname": "TimeRange#_range",
        "kind": "member",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1702,
                1832
            ],
            "filename": "range.js",
            "lineno": 43,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007575",
                "name": "this._range",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_range",
        "longname": "TimeRange#_range",
        "kind": "member",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1907,
                1967
            ],
            "filename": "range.js",
            "lineno": 46,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007610",
                "name": "this._range",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_range",
        "longname": "TimeRange#_range",
        "kind": "member",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the internal range, which is an Immutable List containing\n     * begin and end keys\n     */",
        "meta": {
            "range": [
                2119,
                2162
            ],
            "filename": "range.js",
            "lineno": 55,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007625",
                "name": "TimeRange#range",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the internal range, which is an Immutable List containing\nbegin and end keys",
        "name": "range",
        "longname": "TimeRange#range",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the TimeRange as JSON, which will be a Javascript array\n     * of two ms timestamps.\n     * @return {number[]} JSON representation of the TimeRange\n     */",
        "meta": {
            "range": [
                2379,
                2458
            ],
            "filename": "range.js",
            "lineno": 68,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007633",
                "name": "TimeRange#toJSON",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the TimeRange as JSON, which will be a Javascript array\nof two ms timestamps.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<number>"
                    ]
                },
                "description": "JSON representation of the TimeRange"
            }
        ],
        "name": "toJSON",
        "longname": "TimeRange#toJSON",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the TimeRange as a string, useful for serialization.\n     * @return {string} String representation of the TimeRange\n     */",
        "meta": {
            "range": [
                2611,
                2675
            ],
            "filename": "range.js",
            "lineno": 76,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007653",
                "name": "TimeRange#toString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the TimeRange as a string, useful for serialization.",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "String representation of the TimeRange"
            }
        ],
        "name": "toString",
        "longname": "TimeRange#toString",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the TimeRange as a string expressed in local time\n     * @return {string} String representation of the TimeRange\n     */",
        "meta": {
            "range": [
                2825,
                2899
            ],
            "filename": "range.js",
            "lineno": 84,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007666",
                "name": "TimeRange#toLocalString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the TimeRange as a string expressed in local time",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "String representation of the TimeRange"
            }
        ],
        "name": "toLocalString",
        "longname": "TimeRange#toLocalString",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the TimeRange as a string expressed in UTC time\n     * @return {string} String representation of the TimeRange\n     */",
        "meta": {
            "range": [
                3047,
                3147
            ],
            "filename": "range.js",
            "lineno": 92,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007683",
                "name": "TimeRange#toUTCString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the TimeRange as a string expressed in UTC time",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "String representation of the TimeRange"
            }
        ],
        "name": "toUTCString",
        "longname": "TimeRange#toUTCString",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns a human friendly version of the TimeRange, e.g.\n     * \"Aug 1, 2014 05:19:59 am to Aug 1, 2014 07:41:06 am\"\n     * @return {string} Human friendly string representation of the TimeRange\n     */",
        "meta": {
            "range": [
                3370,
                3642
            ],
            "filename": "range.js",
            "lineno": 101,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007706",
                "name": "TimeRange#humanize",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns a human friendly version of the TimeRange, e.g.\n\"Aug 1, 2014 05:19:59 am to Aug 1, 2014 07:41:06 am\"",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Human friendly string representation of the TimeRange"
            }
        ],
        "name": "humanize",
        "longname": "TimeRange#humanize",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3397,
                3425
            ],
            "filename": "range.js",
            "lineno": 102,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007711",
                "name": "begin",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "begin",
        "longname": "<anonymous>~begin",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3441,
                3465
            ],
            "filename": "range.js",
            "lineno": 103,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007720",
                "name": "end",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "<anonymous>~end",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3481,
                3530
            ],
            "filename": "range.js",
            "lineno": 104,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007729",
                "name": "beginStr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "beginStr",
        "longname": "<anonymous>~beginStr",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3546,
                3591
            ],
            "filename": "range.js",
            "lineno": 105,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007737",
                "name": "endStr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "endStr",
        "longname": "<anonymous>~endStr",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Returns a human friendly version of the TimeRange, e.g.\n     * e.g. \"a few seconds ago to a month ago\"\n     * @return {string} Human friendly string representation of the TimeRange\n     */",
        "meta": {
            "range": [
                3852,
                4017
            ],
            "filename": "range.js",
            "lineno": 115,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007751",
                "name": "TimeRange#relativeString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns a human friendly version of the TimeRange, e.g.\ne.g. \"a few seconds ago to a month ago\"",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Human friendly string representation of the TimeRange"
            }
        ],
        "name": "relativeString",
        "longname": "TimeRange#relativeString",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3885,
                3913
            ],
            "filename": "range.js",
            "lineno": 116,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007756",
                "name": "begin",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "begin",
        "longname": "<anonymous>~begin",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3929,
                3953
            ],
            "filename": "range.js",
            "lineno": 117,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007765",
                "name": "end",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "<anonymous>~end",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Returns the begin time of the TimeRange.\n     */",
        "meta": {
            "range": [
                4087,
                4137
            ],
            "filename": "range.js",
            "lineno": 124,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007786",
                "name": "TimeRange#begin",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the begin time of the TimeRange.",
        "name": "begin",
        "longname": "TimeRange#begin",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the end time of the TimeRange.\n     */",
        "meta": {
            "range": [
                4205,
                4253
            ],
            "filename": "range.js",
            "lineno": 131,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007798",
                "name": "TimeRange#end",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the end time of the TimeRange.",
        "name": "end",
        "longname": "TimeRange#end",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Sets a new begin time on the TimeRange. The result will be\n     * a new TimeRange.\n     */",
        "meta": {
            "range": [
                4365,
                4437
            ],
            "filename": "range.js",
            "lineno": 139,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007810",
                "name": "TimeRange#setBegin",
                "type": "MethodDefinition",
                "paramnames": [
                    "t"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Sets a new begin time on the TimeRange. The result will be\na new TimeRange.",
        "name": "setBegin",
        "longname": "TimeRange#setBegin",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Sets a new end time on the TimeRange. The result will be a new TimeRange.\n     */",
        "meta": {
            "range": [
                4540,
                4610
            ],
            "filename": "range.js",
            "lineno": 146,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007826",
                "name": "TimeRange#setEnd",
                "type": "MethodDefinition",
                "paramnames": [
                    "t"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Sets a new end time on the TimeRange. The result will be a new TimeRange.",
        "name": "setEnd",
        "longname": "TimeRange#setEnd",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns if the two TimeRanges can be considered equal,\n     * in that they have the same times.\n     */",
        "meta": {
            "range": [
                4735,
                4888
            ],
            "filename": "range.js",
            "lineno": 154,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007842",
                "name": "TimeRange#equals",
                "type": "MethodDefinition",
                "paramnames": [
                    "other"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns if the two TimeRanges can be considered equal,\nin that they have the same times.",
        "name": "equals",
        "longname": "TimeRange#equals",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns true if other is completely inside this.\n     */",
        "meta": {
            "range": [
                4966,
                5232
            ],
            "filename": "range.js",
            "lineno": 162,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007879",
                "name": "TimeRange#contains",
                "type": "MethodDefinition",
                "paramnames": [
                    "other"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns true if other is completely inside this.",
        "name": "contains",
        "longname": "TimeRange#contains",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns true if this TimeRange is completely within the supplied\n     * other TimeRange.\n     */",
        "meta": {
            "range": [
                5350,
                5461
            ],
            "filename": "range.js",
            "lineno": 176,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007928",
                "name": "TimeRange#within",
                "type": "MethodDefinition",
                "paramnames": [
                    "other"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns true if this TimeRange is completely within the supplied\nother TimeRange.",
        "name": "within",
        "longname": "TimeRange#within",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns true if the passed in other TimeRange overlaps this time Range.\n     */",
        "meta": {
            "range": [
                5562,
                5813
            ],
            "filename": "range.js",
            "lineno": 184,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100007953",
                "name": "TimeRange#overlaps",
                "type": "MethodDefinition",
                "paramnames": [
                    "other"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns true if the passed in other TimeRange overlaps this time Range.",
        "name": "overlaps",
        "longname": "TimeRange#overlaps",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns true if the passed in other Range in no way\n     * overlaps this time Range.\n     */",
        "meta": {
            "range": [
                5927,
                6025
            ],
            "filename": "range.js",
            "lineno": 197,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008002",
                "name": "TimeRange#disjoint",
                "type": "MethodDefinition",
                "paramnames": [
                    "other"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns true if the passed in other Range in no way\noverlaps this time Range.",
        "name": "disjoint",
        "longname": "TimeRange#disjoint",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n    * Returns a new Timerange which covers the extents of this and\n    * other combined.\n    */",
        "meta": {
            "range": [
                6135,
                6383
            ],
            "filename": "range.js",
            "lineno": 205,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008027",
                "name": "TimeRange#extents",
                "type": "MethodDefinition",
                "paramnames": [
                    "other"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns a new Timerange which covers the extents of this and\nother combined.",
        "name": "extents",
        "longname": "TimeRange#extents",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6166,
                6229
            ],
            "filename": "range.js",
            "lineno": 206,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008033",
                "name": "b",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "b",
        "longname": "<anonymous>~b",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6245,
                6300
            ],
            "filename": "range.js",
            "lineno": 207,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008054",
                "name": "e",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n    * Returns a new TimeRange which represents the intersection\n    * (overlapping) part of this and other.\n    */",
        "meta": {
            "range": [
                6512,
                6870
            ],
            "filename": "range.js",
            "lineno": 215,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008089",
                "name": "TimeRange#intersection",
                "type": "MethodDefinition",
                "paramnames": [
                    "other"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns a new TimeRange which represents the intersection\n(overlapping) part of this and other.",
        "name": "intersection",
        "longname": "TimeRange#intersection",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6624,
                6687
            ],
            "filename": "range.js",
            "lineno": 219,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008104",
                "name": "b",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "b",
        "longname": "<anonymous>~b",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6703,
                6758
            ],
            "filename": "range.js",
            "lineno": 220,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008125",
                "name": "e",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6876,
                6956
            ],
            "filename": "range.js",
            "lineno": 225,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008160",
                "name": "TimeRange#duration",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "duration",
        "longname": "TimeRange#duration",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6962,
                7048
            ],
            "filename": "range.js",
            "lineno": 229,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008180",
                "name": "TimeRange#humanizeDuration",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "humanizeDuration",
        "longname": "TimeRange#humanizeDuration",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7102,
                7277
            ],
            "filename": "range.js",
            "lineno": 237,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008196",
                "name": "TimeRange.lastDay",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "lastDay",
        "longname": "TimeRange.lastDay",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7135,
                7155
            ],
            "filename": "range.js",
            "lineno": 238,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008201",
                "name": "beginTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "beginTime",
        "longname": "<anonymous>~beginTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7171,
                7220
            ],
            "filename": "range.js",
            "lineno": 239,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008206",
                "name": "endTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "endTime",
        "longname": "<anonymous>~endTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7283,
                7462
            ],
            "filename": "range.js",
            "lineno": 243,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008222",
                "name": "TimeRange.lastSevenDays",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "lastSevenDays",
        "longname": "TimeRange.lastSevenDays",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7322,
                7342
            ],
            "filename": "range.js",
            "lineno": 244,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008227",
                "name": "beginTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "beginTime",
        "longname": "<anonymous>~beginTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7358,
                7405
            ],
            "filename": "range.js",
            "lineno": 245,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008232",
                "name": "endTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "endTime",
        "longname": "<anonymous>~endTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7468,
                7649
            ],
            "filename": "range.js",
            "lineno": 249,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008248",
                "name": "TimeRange.lastThirtyDays",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "lastThirtyDays",
        "longname": "TimeRange.lastThirtyDays",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7508,
                7528
            ],
            "filename": "range.js",
            "lineno": 250,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008253",
                "name": "beginTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "beginTime",
        "longname": "<anonymous>~beginTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7544,
                7592
            ],
            "filename": "range.js",
            "lineno": 251,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008258",
                "name": "endTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "endTime",
        "longname": "<anonymous>~endTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7655,
                7836
            ],
            "filename": "range.js",
            "lineno": 255,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008274",
                "name": "TimeRange.lastNinetyDays",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "lastNinetyDays",
        "longname": "TimeRange.lastNinetyDays",
        "kind": "function",
        "memberof": "TimeRange",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7695,
                7715
            ],
            "filename": "range.js",
            "lineno": 256,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008279",
                "name": "beginTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "beginTime",
        "longname": "<anonymous>~beginTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7731,
                7779
            ],
            "filename": "range.js",
            "lineno": 257,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008284",
                "name": "endTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "endTime",
        "longname": "<anonymous>~endTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                568,
                1051
            ],
            "filename": "series.js",
            "lineno": 18,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008325",
                "name": "buildMetaData",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "meta"
                ]
            },
            "vars": {
                "d": "buildMetaData~d",
                "d.name": "buildMetaData~d.name",
                "d.index": "buildMetaData~d.index",
                "d.utc": "buildMetaData~d.utc"
            }
        },
        "undocumented": true,
        "name": "buildMetaData",
        "longname": "buildMetaData",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                607,
                627
            ],
            "filename": "series.js",
            "lineno": 19,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008330",
                "name": "d",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "buildMetaData~d",
        "kind": "member",
        "memberof": "buildMetaData",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                646,
                681
            ],
            "filename": "series.js",
            "lineno": 22,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008337",
                "name": "d.name",
                "type": "ConditionalExpression",
                "funcscope": "buildMetaData",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "buildMetaData~d.name",
        "kind": "member",
        "memberof": "buildMetaData~d",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                773,
                804
            ],
            "filename": "series.js",
            "lineno": 27,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008364",
                "name": "d.index",
                "type": "NewExpression",
                "funcscope": "buildMetaData",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "buildMetaData~d.index",
        "kind": "member",
        "memberof": "buildMetaData~d",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                869,
                889
            ],
            "filename": "series.js",
            "lineno": 29,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008381",
                "name": "d.index",
                "type": "MemberExpression",
                "funcscope": "buildMetaData",
                "value": "meta.index",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "buildMetaData~d.index",
        "kind": "member",
        "memberof": "buildMetaData~d",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                937,
                949
            ],
            "filename": "series.js",
            "lineno": 34,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008389",
                "name": "d.utc",
                "type": "Literal",
                "funcscope": "buildMetaData",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "utc",
        "longname": "buildMetaData~d.utc",
        "kind": "member",
        "memberof": "buildMetaData~d",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                992,
                1008
            ],
            "filename": "series.js",
            "lineno": 36,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008404",
                "name": "d.utc",
                "type": "MemberExpression",
                "funcscope": "buildMetaData",
                "value": "meta.utc",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "utc",
        "longname": "buildMetaData~d.utc",
        "kind": "member",
        "memberof": "buildMetaData~d",
        "scope": "static"
    },
    {
        "comment": "/**\n * A TimeSeries is a a Series where each event is an association of a timestamp\n * and some associated data.\n *\n * Data passed into it may have the following format, which is our wire format:\n *\n *   {\n *     \"name\": \"traffic\",\n *     \"columns\": [\"time\", \"value\", ...],\n *     \"points\": [\n *        [1400425947000, 52, ...],\n *        [1400425948000, 18, ...],\n *        [1400425949000, 26, ...],\n *        [1400425950000, 93, ...],\n *        ...\n *      ]\n *   }\n *\n * Alternatively, the TimeSeries may be constructed from a list of Event objects.\n *\n * Internaly the above series is represented as two parts:\n *  * Collection - an Immutable.List of Events and associated methods\n *                   to query and manipulate that list\n *  * Meta data  - an Immutable.Map of extra data associated with the\n *                   TimeSeries\n *\n * The events stored in the collection may be Events (timestamp based),\n * TimeRangeEvents (time range based) or IndexedEvents (an alternative form\n * of a time range, such as \"2014-08\" or \"1d-1234\")\n *\n * The timerange associated with a TimeSeries is simply the bounds of the\n * events within it (i.e. the min and max times).\n */",
        "meta": {
            "range": [
                2229,
                11423
            ],
            "filename": "series.js",
            "lineno": 75,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008417",
                "name": "TimeSeries",
                "type": "ClassDeclaration",
                "paramnames": [
                    "arg"
                ]
            }
        },
        "classdesc": "A TimeSeries is a a Series where each event is an association of a timestamp\nand some associated data.\n\nData passed into it may have the following format, which is our wire format:\n\n  {\n    \"name\": \"traffic\",\n    \"columns\": [\"time\", \"value\", ...],\n    \"points\": [\n       [1400425947000, 52, ...],\n       [1400425948000, 18, ...],\n       [1400425949000, 26, ...],\n       [1400425950000, 93, ...],\n       ...\n     ]\n  }\n\nAlternatively, the TimeSeries may be constructed from a list of Event objects.\n\nInternaly the above series is represented as two parts:\n * Collection - an Immutable.List of Events and associated methods\n                  to query and manipulate that list\n * Meta data  - an Immutable.Map of extra data associated with the\n                  TimeSeries\n\nThe events stored in the collection may be Events (timestamp based),\nTimeRangeEvents (time range based) or IndexedEvents (an alternative form\nof a time range, such as \"2014-08\" or \"1d-1234\")\n\nThe timerange associated with a TimeSeries is simply the bounds of the\nevents within it (i.e. the min and max times).",
        "name": "TimeSeries",
        "longname": "TimeSeries",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2253,
                4741
            ],
            "filename": "series.js",
            "lineno": 77,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008420",
                "name": "TimeSeries",
                "type": "MethodDefinition",
                "paramnames": [
                    "arg"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "TimeSeries",
        "longname": "TimeSeries",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2280,
                2303
            ],
            "filename": "series.js",
            "lineno": 78,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008426",
                "name": "this._collection",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collection",
        "longname": "TimeSeries#_collection",
        "kind": "member",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2328,
                2345
            ],
            "filename": "series.js",
            "lineno": 79,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008432",
                "name": "this._data",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_data",
        "longname": "TimeSeries#_data",
        "kind": "member",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2498,
                2509
            ],
            "filename": "series.js",
            "lineno": 87,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008443",
                "name": "other",
                "type": "Identifier",
                "value": "arg"
            }
        },
        "undocumented": true,
        "name": "other",
        "longname": "<anonymous>~other",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2523,
                2547
            ],
            "filename": "series.js",
            "lineno": 88,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008447",
                "name": "this._data",
                "type": "MemberExpression",
                "value": "other._data",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_data",
        "longname": "TimeSeries#_data",
        "kind": "member",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2561,
                2597
            ],
            "filename": "series.js",
            "lineno": 89,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008455",
                "name": "this._collection",
                "type": "MemberExpression",
                "value": "other._collection",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collection",
        "longname": "TimeSeries#_collection",
        "kind": "member",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3084,
                3093
            ],
            "filename": "series.js",
            "lineno": 104,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008470",
                "name": "obj",
                "type": "Identifier",
                "value": "arg"
            }
        },
        "undocumented": true,
        "name": "obj",
        "longname": "<anonymous>~obj",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3250,
                3256
            ],
            "filename": "series.js",
            "lineno": 112,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008484",
                "name": "events",
                "type": "Identifier",
                "value": "events"
            }
        },
        "undocumented": true,
        "name": "events",
        "longname": "events",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3315,
                3356
            ],
            "filename": "series.js",
            "lineno": 114,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008490",
                "name": "this._collection",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collection",
        "longname": "TimeSeries#_collection",
        "kind": "member",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3374,
                3407
            ],
            "filename": "series.js",
            "lineno": 115,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008498",
                "name": "this._data",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_data",
        "longname": "TimeSeries#_data",
        "kind": "member",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3485,
                3495
            ],
            "filename": "series.js",
            "lineno": 118,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008516",
                "name": "collection",
                "type": "Identifier",
                "value": "collection"
            }
        },
        "undocumented": true,
        "name": "collection",
        "longname": "collection",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3553,
                3582
            ],
            "filename": "series.js",
            "lineno": 119,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008522",
                "name": "this._collection",
                "type": "Identifier",
                "value": "collection",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collection",
        "longname": "TimeSeries#_collection",
        "kind": "member",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3600,
                3633
            ],
            "filename": "series.js",
            "lineno": 120,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008528",
                "name": "this._data",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_data",
        "longname": "TimeSeries#_data",
        "kind": "member",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3823,
                3830
            ],
            "filename": "series.js",
            "lineno": 127,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008553",
                "name": "columns",
                "type": "Identifier",
                "value": "columns"
            }
        },
        "undocumented": true,
        "name": "columns",
        "longname": "columns",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3832,
                3838
            ],
            "filename": "series.js",
            "lineno": 127,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008555",
                "name": "points",
                "type": "Identifier",
                "value": "points"
            }
        },
        "undocumented": true,
        "name": "points",
        "longname": "points",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3963,
                4599
            ],
            "filename": "series.js",
            "lineno": 129,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008567",
                "name": "events",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "events",
        "longname": "<anonymous>~events",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4075,
                4113
            ],
            "filename": "series.js",
            "lineno": 131,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008583",
                "name": "d",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4618,
                4659
            ],
            "filename": "series.js",
            "lineno": 144,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008623",
                "name": "this._collection",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collection",
        "longname": "TimeSeries#_collection",
        "kind": "member",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4677,
                4710
            ],
            "filename": "series.js",
            "lineno": 145,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008631",
                "name": "this._data",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_data",
        "longname": "TimeSeries#_data",
        "kind": "member",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Turn the TimeSeries into regular javascript objects\n     */",
        "meta": {
            "range": [
                4854,
                5455
            ],
            "filename": "series.js",
            "lineno": 157,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008638",
                "name": "TimeSeries#toJSON",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Turn the TimeSeries into regular javascript objects",
        "name": "toJSON",
        "longname": "TimeSeries#toJSON",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4877,
                4884
            ],
            "filename": "series.js",
            "lineno": 158,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008643",
                "name": "columns"
            }
        },
        "undocumented": true,
        "name": "columns",
        "longname": "<anonymous>~columns",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4900,
                4930
            ],
            "filename": "series.js",
            "lineno": 159,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008646",
                "name": "type",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "<anonymous>~type",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4974,
                5011
            ],
            "filename": "series.js",
            "lineno": 161,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008660",
                "name": "columns",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[\"time\",\"\"]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "columns",
        "longname": "<anonymous>~columns",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5071,
                5113
            ],
            "filename": "series.js",
            "lineno": 163,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008675",
                "name": "columns",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[\"timerange\",\"\"]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "columns",
        "longname": "<anonymous>~columns",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5171,
                5209
            ],
            "filename": "series.js",
            "lineno": 165,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008690",
                "name": "columns",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[\"index\",\"\"]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "columns",
        "longname": "<anonymous>~columns",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5236,
                5247
            ],
            "filename": "series.js",
            "lineno": 168,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008700",
                "name": "points",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "points",
        "longname": "<anonymous>~points",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5268,
                5269
            ],
            "filename": "series.js",
            "lineno": 169,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008705",
                "name": "e"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5410,
                5417
            ],
            "filename": "series.js",
            "lineno": 174,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008735",
                "name": "columns",
                "type": "Identifier",
                "value": "columns"
            }
        },
        "undocumented": true,
        "name": "columns",
        "longname": "columns",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5431,
                5437
            ],
            "filename": "series.js",
            "lineno": 175,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008737",
                "name": "points",
                "type": "Identifier",
                "value": "points"
            }
        },
        "undocumented": true,
        "name": "points",
        "longname": "points",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n     * Represent the TimeSeries as a string\n     */",
        "meta": {
            "range": [
                5521,
                5585
            ],
            "filename": "series.js",
            "lineno": 182,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008739",
                "name": "TimeSeries#toString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Represent the TimeSeries as a string",
        "name": "toString",
        "longname": "TimeSeries#toString",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the extents of the TimeSeries as a TimeRange.\n     */",
        "meta": {
            "range": [
                5668,
                5728
            ],
            "filename": "series.js",
            "lineno": 189,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008752",
                "name": "TimeSeries#timerange",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the extents of the TimeSeries as a TimeRange.",
        "name": "timerange",
        "longname": "TimeSeries#timerange",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5734,
                5782
            ],
            "filename": "series.js",
            "lineno": 193,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008763",
                "name": "TimeSeries#range",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "range",
        "longname": "TimeSeries#range",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Gets the earliest time represented in the TimeSeries.\n     * @return {Date} Begin time\n     */",
        "meta": {
            "range": [
                5898,
                5950
            ],
            "filename": "series.js",
            "lineno": 201,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008772",
                "name": "TimeSeries#begin",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Gets the earliest time represented in the TimeSeries.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Date"
                    ]
                },
                "description": "Begin time"
            }
        ],
        "name": "begin",
        "longname": "TimeSeries#begin",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Gets the latest time represented in the TimeSeries.\n     * @return {Date} End time\n     */",
        "meta": {
            "range": [
                6062,
                6110
            ],
            "filename": "series.js",
            "lineno": 209,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008784",
                "name": "TimeSeries#end",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Gets the latest time represented in the TimeSeries.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Date"
                    ]
                },
                "description": "End time"
            }
        ],
        "name": "end",
        "longname": "TimeSeries#end",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Access the series events via index\n     */",
        "meta": {
            "range": [
                6174,
                6226
            ],
            "filename": "series.js",
            "lineno": 216,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008796",
                "name": "TimeSeries#at",
                "type": "MethodDefinition",
                "paramnames": [
                    "i"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Access the series events via index",
        "name": "at",
        "longname": "TimeSeries#at",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Finds the index that is just less than the time t supplied.\n     * In other words every event at the returned index or less\n     * has a time before the supplied t, and every sample after the\n     * index has a time later than the supplied t.\n     *\n     * Optionally supply a begin index to start searching from.\n     */",
        "meta": {
            "range": [
                6569,
                6635
            ],
            "filename": "series.js",
            "lineno": 228,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008809",
                "name": "TimeSeries#bisect",
                "type": "MethodDefinition",
                "paramnames": [
                    "t",
                    "b"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Finds the index that is just less than the time t supplied.\nIn other words every event at the returned index or less\nhas a time before the supplied t, and every sample after the\nindex has a time later than the supplied t.\n\nOptionally supply a begin index to start searching from.",
        "name": "bisect",
        "longname": "TimeSeries#bisect",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Perform a slice of events within the TimeSeries, returns a new\n     * TimeSeries representing a portion of this TimeSeries from begin up to\n     * but not including end.\n     */",
        "meta": {
            "range": [
                6834,
                7023
            ],
            "filename": "series.js",
            "lineno": 237,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008824",
                "name": "TimeSeries#slice",
                "type": "MethodDefinition",
                "paramnames": [
                    "begin",
                    "end"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Perform a slice of events within the TimeSeries, returns a new\nTimeSeries representing a portion of this TimeSeries from begin up to\nbut not including end.",
        "name": "slice",
        "longname": "TimeSeries#slice",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6868,
                6911
            ],
            "filename": "series.js",
            "lineno": 238,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008831",
                "name": "sliced",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sliced",
        "longname": "<anonymous>~sliced",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6927,
                6956
            ],
            "filename": "series.js",
            "lineno": 239,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008842",
                "name": "result",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6966,
                6993
            ],
            "filename": "series.js",
            "lineno": 240,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008848",
                "name": "result._collection",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "sliced",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_collection",
        "longname": "<anonymous>~result._collection",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "/**\n     *  Generator to allow for..of loops over series.events()\n     */",
        "meta": {
            "range": [
                7107,
                7213
            ],
            "filename": "series.js",
            "lineno": 247,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008855",
                "name": "TimeSeries#events",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Generator to allow for..of loops over series.events()",
        "name": "events",
        "longname": "TimeSeries#events",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7137,
                7142
            ],
            "filename": "series.js",
            "lineno": 248,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008861",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7276,
                7329
            ],
            "filename": "series.js",
            "lineno": 258,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008880",
                "name": "TimeSeries#name",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "TimeSeries#name",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Access the Index, if this TimeSeries has one\n     */",
        "meta": {
            "range": [
                7404,
                7459
            ],
            "filename": "series.js",
            "lineno": 266,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008892",
                "name": "TimeSeries#index",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Access the Index, if this TimeSeries has one",
        "name": "index",
        "longname": "TimeSeries#index",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7465,
                7555
            ],
            "filename": "series.js",
            "lineno": 270,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008904",
                "name": "TimeSeries#indexAsString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "indexAsString",
        "longname": "TimeSeries#indexAsString",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7561,
                7653
            ],
            "filename": "series.js",
            "lineno": 274,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008922",
                "name": "TimeSeries#indexAsRange",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "indexAsRange",
        "longname": "TimeSeries#indexAsRange",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7659,
                7712
            ],
            "filename": "series.js",
            "lineno": 278,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008940",
                "name": "TimeSeries#isUTC",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "isUTC",
        "longname": "TimeSeries#isUTC",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7718,
                7940
            ],
            "filename": "series.js",
            "lineno": 282,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008952",
                "name": "TimeSeries#columns",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "columns",
        "longname": "TimeSeries#columns",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7744,
                7750
            ],
            "filename": "series.js",
            "lineno": 283,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008957",
                "name": "c",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "c",
        "longname": "<anonymous>~c",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7771,
                7772
            ],
            "filename": "series.js",
            "lineno": 284,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008962",
                "name": "e"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7823,
                7842
            ],
            "filename": "series.js",
            "lineno": 285,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008972",
                "name": "d",
                "type": "MemberExpression",
                "value": ".data"
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7881,
                7894
            ],
            "filename": "series.js",
            "lineno": 286,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100008991",
                "name": "c[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~c.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~c",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Returns the internal collection of events for this TimeSeries\n     */",
        "meta": {
            "range": [
                8031,
                8084
            ],
            "filename": "series.js",
            "lineno": 294,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009002",
                "name": "TimeSeries#collection",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the internal collection of events for this TimeSeries",
        "name": "collection",
        "longname": "TimeSeries#collection",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the meta data about this TimeSeries as a JSON object\n     */",
        "meta": {
            "range": [
                8174,
                8318
            ],
            "filename": "series.js",
            "lineno": 301,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009010",
                "name": "TimeSeries#meta",
                "type": "MethodDefinition",
                "paramnames": [
                    "key"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the meta data about this TimeSeries as a JSON object",
        "name": "meta",
        "longname": "TimeSeries#meta",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the number of rows in the series.\n     */",
        "meta": {
            "range": [
                8436,
                8490
            ],
            "filename": "series.js",
            "lineno": 316,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009035",
                "name": "TimeSeries#size",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the number of rows in the series.",
        "name": "size",
        "longname": "TimeSeries#size",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the number of rows in the series.\n     */",
        "meta": {
            "range": [
                8561,
                8615
            ],
            "filename": "series.js",
            "lineno": 323,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009046",
                "name": "TimeSeries#size",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the number of rows in the series.",
        "name": "size",
        "longname": "TimeSeries#size",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the number of rows in the series.\n     */",
        "meta": {
            "range": [
                8686,
                8768
            ],
            "filename": "series.js",
            "lineno": 330,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009057",
                "name": "TimeSeries#sizeValid",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the number of rows in the series.",
        "name": "sizeValid",
        "longname": "TimeSeries#sizeValid",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Returns the number of rows in the series. (Same as size())\n     * @return {number} Size of the series\n     */",
        "meta": {
            "range": [
                8899,
                8942
            ],
            "filename": "series.js",
            "lineno": 338,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009070",
                "name": "TimeSeries#count",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the number of rows in the series. (Same as size())",
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Size of the series"
            }
        ],
        "name": "count",
        "longname": "TimeSeries#count",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8948,
                9018
            ],
            "filename": "series.js",
            "lineno": 342,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009079",
                "name": "TimeSeries#sum",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "sum",
        "longname": "TimeSeries#sum",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9024,
                9094
            ],
            "filename": "series.js",
            "lineno": 346,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009092",
                "name": "TimeSeries#max",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "max",
        "longname": "TimeSeries#max",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9100,
                9170
            ],
            "filename": "series.js",
            "lineno": 350,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009105",
                "name": "TimeSeries#min",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "min",
        "longname": "TimeSeries#min",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9176,
                9246
            ],
            "filename": "series.js",
            "lineno": 354,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009118",
                "name": "TimeSeries#avg",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "avg",
        "longname": "TimeSeries#avg",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9252,
                9324
            ],
            "filename": "series.js",
            "lineno": 358,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009131",
                "name": "TimeSeries#mean",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "mean",
        "longname": "TimeSeries#mean",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9330,
                9406
            ],
            "filename": "series.js",
            "lineno": 362,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009144",
                "name": "TimeSeries#median",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "median",
        "longname": "TimeSeries#median",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9412,
                9486
            ],
            "filename": "series.js",
            "lineno": 366,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009157",
                "name": "TimeSeries#stdev",
                "type": "MethodDefinition",
                "paramnames": [
                    "fieldSpec"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "stdev",
        "longname": "TimeSeries#stdev",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * STATIC\n     */",
        "meta": {
            "range": [
                9523,
                9872
            ],
            "filename": "series.js",
            "lineno": 374,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009170",
                "name": "TimeSeries.equal",
                "type": "MethodDefinition",
                "paramnames": [
                    "series1",
                    "series2"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "STATIC",
        "name": "equal",
        "longname": "TimeSeries.equal",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9878,
                10268
            ],
            "filename": "series.js",
            "lineno": 383,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009224",
                "name": "TimeSeries.is",
                "type": "MethodDefinition",
                "paramnames": [
                    "series1",
                    "series2"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "is",
        "longname": "TimeSeries.is",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10274,
                11315
            ],
            "filename": "series.js",
            "lineno": 392,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009290",
                "name": "TimeSeries.map",
                "type": "MethodDefinition",
                "paramnames": [
                    "data",
                    "seriesList",
                    "mapper"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "TimeSeries.map",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10394,
                10407
            ],
            "filename": "series.js",
            "lineno": 394,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009298",
                "name": "eventMap",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "eventMap",
        "longname": "<anonymous>~eventMap",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10473,
                10478
            ],
            "filename": "series.js",
            "lineno": 396,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009312",
                "name": "event"
            }
        },
        "undocumented": true,
        "name": "event",
        "longname": "<anonymous>~event",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10521,
                10524
            ],
            "filename": "series.js",
            "lineno": 397,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009320",
                "name": "key"
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "<anonymous>~key",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10592,
                10615
            ],
            "filename": "series.js",
            "lineno": 399,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009328",
                "name": "key",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "<anonymous>~key",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10697,
                10716
            ],
            "filename": "series.js",
            "lineno": 401,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009340",
                "name": "key",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "<anonymous>~key",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10800,
                10837
            ],
            "filename": "series.js",
            "lineno": 403,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009352",
                "name": "key",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "<anonymous>~key",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10923,
                10941
            ],
            "filename": "series.js",
            "lineno": 407,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009371",
                "name": "eventMap[undefined]",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~eventMap.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~eventMap",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11113,
                11124
            ],
            "filename": "series.js",
            "lineno": 415,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009385",
                "name": "events",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "events",
        "longname": "<anonymous>~events",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11187,
                11213
            ],
            "filename": "series.js",
            "lineno": 417,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009398",
                "name": "event",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "event",
        "longname": "<anonymous>~event",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11300,
                11306
            ],
            "filename": "series.js",
            "lineno": 421,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009415",
                "name": "events",
                "type": "Identifier",
                "value": "events"
            }
        },
        "undocumented": true,
        "name": "events",
        "longname": "events",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11321,
                11421
            ],
            "filename": "series.js",
            "lineno": 424,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009417",
                "name": "TimeSeries.merge",
                "type": "MethodDefinition",
                "paramnames": [
                    "data",
                    "seriesList"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "merge",
        "longname": "TimeSeries.merge",
        "kind": "function",
        "memberof": "TimeSeries",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11425,
                11451
            ],
            "filename": "series.js",
            "lineno": 429,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009433",
                "name": "module.exports",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                469,
                644
            ],
            "filename": "util.js",
            "lineno": 15,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009449",
                "name": "units",
                "type": "ObjectExpression",
                "value": "{\"s\":\"\",\"m\":\"\",\"h\":\"\",\"d\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "units",
        "longname": "units",
        "kind": "constant",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                483,
                515
            ],
            "filename": "util.js",
            "lineno": 16,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009452",
                "name": "s",
                "type": "ObjectExpression",
                "value": "{\"label\":\"seconds\",\"length\":1}"
            }
        },
        "undocumented": true,
        "name": "s",
        "longname": "units.s",
        "kind": "member",
        "memberof": "units",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                487,
                503
            ],
            "filename": "util.js",
            "lineno": 16,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009454",
                "name": "label",
                "type": "Literal",
                "value": "seconds"
            }
        },
        "undocumented": true,
        "name": "label",
        "longname": "units.s.label",
        "kind": "member",
        "memberof": "units.s",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                505,
                514
            ],
            "filename": "util.js",
            "lineno": 16,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009456",
                "name": "length",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "units.s.length",
        "kind": "member",
        "memberof": "units.s",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                521,
                554
            ],
            "filename": "util.js",
            "lineno": 17,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009458",
                "name": "m",
                "type": "ObjectExpression",
                "value": "{\"label\":\"minutes\",\"length\":60}"
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "units.m",
        "kind": "member",
        "memberof": "units",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                525,
                541
            ],
            "filename": "util.js",
            "lineno": 17,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009460",
                "name": "label",
                "type": "Literal",
                "value": "minutes"
            }
        },
        "undocumented": true,
        "name": "label",
        "longname": "units.m.label",
        "kind": "member",
        "memberof": "units.m",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                543,
                553
            ],
            "filename": "util.js",
            "lineno": 17,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009462",
                "name": "length",
                "type": "Literal",
                "value": 60
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "units.m.length",
        "kind": "member",
        "memberof": "units.m",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                560,
                596
            ],
            "filename": "util.js",
            "lineno": 18,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009464",
                "name": "h",
                "type": "ObjectExpression",
                "value": "{\"label\":\"hours\",\"length\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "h",
        "longname": "units.h",
        "kind": "member",
        "memberof": "units",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                564,
                578
            ],
            "filename": "util.js",
            "lineno": 18,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009466",
                "name": "label",
                "type": "Literal",
                "value": "hours"
            }
        },
        "undocumented": true,
        "name": "label",
        "longname": "units.h.label",
        "kind": "member",
        "memberof": "units.h",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                580,
                595
            ],
            "filename": "util.js",
            "lineno": 18,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009468",
                "name": "length",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "units.h.length",
        "kind": "member",
        "memberof": "units.h",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                602,
                642
            ],
            "filename": "util.js",
            "lineno": 19,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009472",
                "name": "d",
                "type": "ObjectExpression",
                "value": "{\"label\":\"days\",\"length\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "units.d",
        "kind": "member",
        "memberof": "units",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                606,
                619
            ],
            "filename": "util.js",
            "lineno": 19,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009474",
                "name": "label",
                "type": "Literal",
                "value": "days"
            }
        },
        "undocumented": true,
        "name": "label",
        "longname": "units.d.label",
        "kind": "member",
        "memberof": "units.d",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                621,
                641
            ],
            "filename": "util.js",
            "lineno": 19,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009476",
                "name": "length",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "units.d.length",
        "kind": "member",
        "memberof": "units.d",
        "scope": "static"
    },
    {
        "comment": "/**\n * This function will take an index, which may be of two forms:\n *     2015-07-14  (day)\n *     2015-07     (month)\n *     2015        (year)\n * or:\n *     1d-278      (range, in n x days, hours, minutes or seconds)\n *\n * and return a TimeRange for that time. The TimeRange may be considered to be\n * local time or UTC time, depending on the utc flag passed in.\n */",
        "meta": {
            "range": [
                1017,
                7297
            ],
            "filename": "util.js",
            "lineno": 33,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009482",
                "name": "module.exports",
                "type": "ObjectExpression"
            }
        },
        "description": "This function will take an index, which may be of two forms:\n    2015-07-14  (day)\n    2015-07     (month)\n    2015        (year)\nor:\n    1d-278      (range, in n x days, hours, minutes or seconds)\n\nand return a TimeRange for that time. The TimeRange may be considered to be\nlocal time or UTC time, depending on the utc flag passed in.",
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Returns a duration in milliseconds given a window duration string.\n     * For example \"30s\" (30 seconds) should return 30000ms. Accepts\n     * seconds (e.g. \"30s\"), minutes (e.g. \"5m\"), hours (e.g. \"6h\") and\n     * days (e.g. \"30d\")\n     */",
        "meta": {
            "range": [
                1295,
                1697
            ],
            "filename": "util.js",
            "lineno": 41,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009484",
                "name": "windowDuration",
                "type": "FunctionExpression"
            },
            "vars": {
                "regex": "module.exports.windowDuration~regex",
                "parts": "module.exports.windowDuration~parts",
                "num": "module.exports.windowDuration~num",
                "unit": "module.exports.windowDuration~unit"
            }
        },
        "description": "Returns a duration in milliseconds given a window duration string.\nFor example \"30s\" (30 seconds) should return 30000ms. Accepts\nseconds (e.g. \"30s\"), minutes (e.g. \"5m\"), hours (e.g. \"6h\") and\ndays (e.g. \"30d\")",
        "name": "windowDuration",
        "longname": "module.exports.windowDuration",
        "kind": "function",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1440,
                1466
            ],
            "filename": "util.js",
            "lineno": 44,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009489",
                "name": "regex",
                "type": "Literal",
                "value": "<RegExp /([0-9]+)([smhd])/>"
            }
        },
        "undocumented": true,
        "name": "regex",
        "longname": "module.exports.windowDuration~regex",
        "kind": "constant",
        "memberof": "module.exports.windowDuration",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1482,
                1503
            ],
            "filename": "util.js",
            "lineno": 45,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009493",
                "name": "parts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "parts",
        "longname": "module.exports.windowDuration~parts",
        "kind": "constant",
        "memberof": "module.exports.windowDuration",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1565,
                1593
            ],
            "filename": "util.js",
            "lineno": 47,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009510",
                "name": "num",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "num",
        "longname": "module.exports.windowDuration~num",
        "kind": "constant",
        "memberof": "module.exports.windowDuration",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1613,
                1628
            ],
            "filename": "util.js",
            "lineno": 48,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009519",
                "name": "unit",
                "type": "MemberExpression",
                "value": "parts[2]"
            }
        },
        "undocumented": true,
        "name": "unit",
        "longname": "module.exports.windowDuration~unit",
        "kind": "constant",
        "memberof": "module.exports.windowDuration",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1704,
                1882
            ],
            "filename": "util.js",
            "lineno": 53,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009534",
                "name": "windowPositionFromDate",
                "type": "FunctionExpression"
            },
            "vars": {
                "duration": "module.exports.windowPositionFromDate~duration",
                "dd": "module.exports.windowPositionFromDate~dd"
            }
        },
        "undocumented": true,
        "name": "windowPositionFromDate",
        "longname": "module.exports.windowPositionFromDate",
        "kind": "function",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1752,
                1785
            ],
            "filename": "util.js",
            "lineno": 54,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009540",
                "name": "duration",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "duration",
        "longname": "module.exports.windowPositionFromDate~duration",
        "kind": "constant",
        "memberof": "module.exports.windowPositionFromDate",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1799,
                1830
            ],
            "filename": "util.js",
            "lineno": 55,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009548",
                "name": "dd",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "dd",
        "longname": "module.exports.windowPositionFromDate~dd",
        "kind": "member",
        "memberof": "module.exports.windowPositionFromDate",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1856,
                1870
            ],
            "filename": "util.js",
            "lineno": 56,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009561",
                "name": "dd",
                "type": "Identifier",
                "funcscope": "module.exports.windowPositionFromDate",
                "value": "duration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "dd",
        "longname": "module.exports.windowPositionFromDate~dd",
        "kind": "member",
        "memberof": "module.exports.windowPositionFromDate",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1889,
                4912
            ],
            "filename": "util.js",
            "lineno": 59,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009565",
                "name": "rangeFromIndexString",
                "type": "FunctionExpression"
            },
            "vars": {
                "isUTC": "module.exports.rangeFromIndexString~isUTC",
                "parts": "module.exports.rangeFromIndexString~parts",
                "beginTime": "module.exports.rangeFromIndexString~beginTime",
                "endTime": "module.exports.rangeFromIndexString~endTime",
                "year": "module.exports.rangeFromIndexString~year",
                "month": "module.exports.rangeFromIndexString~month",
                "day": "module.exports.rangeFromIndexString~day",
                "rangeRegex": "module.exports.rangeFromIndexString~rangeRegex",
                "sizeParts": "module.exports.rangeFromIndexString~sizeParts",
                "pos": "module.exports.rangeFromIndexString~pos",
                "num": "module.exports.rangeFromIndexString~num",
                "unit": "module.exports.rangeFromIndexString~unit",
                "length": "module.exports.rangeFromIndexString~length"
            }
        },
        "undocumented": true,
        "name": "rangeFromIndexString",
        "longname": "module.exports.rangeFromIndexString",
        "kind": "function",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1938,
                1978
            ],
            "filename": "util.js",
            "lineno": 60,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009571",
                "name": "isUTC",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isUTC",
        "longname": "module.exports.rangeFromIndexString~isUTC",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1994,
                2018
            ],
            "filename": "util.js",
            "lineno": 61,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009583",
                "name": "parts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "parts",
        "longname": "module.exports.rangeFromIndexString~parts",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2033,
                2042
            ],
            "filename": "util.js",
            "lineno": 63,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009591",
                "name": "beginTime"
            }
        },
        "undocumented": true,
        "name": "beginTime",
        "longname": "module.exports.rangeFromIndexString~beginTime",
        "kind": "member",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2056,
                2063
            ],
            "filename": "util.js",
            "lineno": 64,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009594",
                "name": "endTime"
            }
        },
        "undocumented": true,
        "name": "endTime",
        "longname": "module.exports.rangeFromIndexString~endTime",
        "kind": "member",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2369,
                2398
            ],
            "filename": "util.js",
            "lineno": 72,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009640",
                "name": "year",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "year",
        "longname": "module.exports.rangeFromIndexString~year",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2426,
                2456
            ],
            "filename": "util.js",
            "lineno": 73,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009649",
                "name": "month",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "month",
        "longname": "module.exports.rangeFromIndexString~month",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2484,
                2512
            ],
            "filename": "util.js",
            "lineno": 74,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009658",
                "name": "day",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "day",
        "longname": "module.exports.rangeFromIndexString~day",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2534,
                2661
            ],
            "filename": "util.js",
            "lineno": 75,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009667",
                "name": "beginTime",
                "type": "ConditionalExpression",
                "funcscope": "module.exports.rangeFromIndexString",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "beginTime",
        "longname": "module.exports.rangeFromIndexString~beginTime",
        "kind": "member",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2683,
                2806
            ],
            "filename": "util.js",
            "lineno": 77,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009690",
                "name": "endTime",
                "type": "ConditionalExpression",
                "funcscope": "module.exports.rangeFromIndexString",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "endTime",
        "longname": "module.exports.rangeFromIndexString~endTime",
        "kind": "member",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3020,
                3051
            ],
            "filename": "util.js",
            "lineno": 85,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009714",
                "name": "rangeRegex",
                "type": "Literal",
                "value": "<RegExp /([0-9]+)([smhd])/>"
            }
        },
        "undocumented": true,
        "name": "rangeRegex",
        "longname": "module.exports.rangeFromIndexString~rangeRegex",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3075,
                3112
            ],
            "filename": "util.js",
            "lineno": 86,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009718",
                "name": "sizeParts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sizeParts",
        "longname": "module.exports.rangeFromIndexString~sizeParts",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3254,
                3282
            ],
            "filename": "util.js",
            "lineno": 89,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009749",
                "name": "pos",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "module.exports.rangeFromIndexString~pos",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3310,
                3342
            ],
            "filename": "util.js",
            "lineno": 90,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009758",
                "name": "num",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "num",
        "longname": "module.exports.rangeFromIndexString~num",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3370,
                3389
            ],
            "filename": "util.js",
            "lineno": 91,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009767",
                "name": "unit",
                "type": "MemberExpression",
                "value": "sizeParts[2]"
            }
        },
        "undocumented": true,
        "name": "unit",
        "longname": "module.exports.rangeFromIndexString~unit",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3417,
                3457
            ],
            "filename": "util.js",
            "lineno": 92,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009773",
                "name": "length",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "module.exports.rangeFromIndexString~length",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3480,
                3587
            ],
            "filename": "util.js",
            "lineno": 94,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009785",
                "name": "beginTime",
                "type": "ConditionalExpression",
                "funcscope": "module.exports.rangeFromIndexString",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "beginTime",
        "longname": "module.exports.rangeFromIndexString~beginTime",
        "kind": "member",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3609,
                3724
            ],
            "filename": "util.js",
            "lineno": 96,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009802",
                "name": "endTime",
                "type": "ConditionalExpression",
                "funcscope": "module.exports.rangeFromIndexString",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "endTime",
        "longname": "module.exports.rangeFromIndexString~endTime",
        "kind": "member",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3920,
                3949
            ],
            "filename": "util.js",
            "lineno": 102,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009848",
                "name": "year",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "year",
        "longname": "module.exports.rangeFromIndexString~year",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3977,
                4007
            ],
            "filename": "util.js",
            "lineno": 103,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009857",
                "name": "month",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "month",
        "longname": "module.exports.rangeFromIndexString~month",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4029,
                4146
            ],
            "filename": "util.js",
            "lineno": 104,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009866",
                "name": "beginTime",
                "type": "ConditionalExpression",
                "funcscope": "module.exports.rangeFromIndexString",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "beginTime",
        "longname": "module.exports.rangeFromIndexString~beginTime",
        "kind": "member",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4168,
                4295
            ],
            "filename": "util.js",
            "lineno": 106,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009887",
                "name": "endTime",
                "type": "ConditionalExpression",
                "funcscope": "module.exports.rangeFromIndexString",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "endTime",
        "longname": "module.exports.rangeFromIndexString~endTime",
        "kind": "member",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4413,
                4428
            ],
            "filename": "util.js",
            "lineno": 113,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009911",
                "name": "year",
                "type": "MemberExpression",
                "value": "parts[0]"
            }
        },
        "undocumented": true,
        "name": "year",
        "longname": "module.exports.rangeFromIndexString~year",
        "kind": "constant",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4446,
                4541
            ],
            "filename": "util.js",
            "lineno": 114,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009917",
                "name": "beginTime",
                "type": "ConditionalExpression",
                "funcscope": "module.exports.rangeFromIndexString",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "beginTime",
        "longname": "module.exports.rangeFromIndexString~beginTime",
        "kind": "member",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4559,
                4680
            ],
            "filename": "util.js",
            "lineno": 116,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009934",
                "name": "endTime",
                "type": "ConditionalExpression",
                "funcscope": "module.exports.rangeFromIndexString",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "endTime",
        "longname": "module.exports.rangeFromIndexString~endTime",
        "kind": "member",
        "memberof": "module.exports.rangeFromIndexString",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Returns a nice string for the index. If the index is of the form\n     * 1d-2345 then just that string is returned (there's not nice way to put\n     * it), but if it represents a day, month, or year (e.g. 2015-07) then a\n     * nice string like \"July\" will be returned. It's also possible to pass in\n     * the format of the reply for these types of strings. See moment's format\n     * naming conventions:\n     * http://momentjs.com/docs/#/displaying/format/\n     */",
        "meta": {
            "range": [
                5400,
                7294
            ],
            "filename": "util.js",
            "lineno": 137,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009978",
                "name": "niceIndexString",
                "type": "FunctionExpression"
            },
            "vars": {
                "t": "module.exports.niceIndexString~t",
                "parts": "module.exports.niceIndexString~parts",
                "year": "module.exports.niceIndexString~year",
                "month": "module.exports.niceIndexString~month",
                "day": "module.exports.niceIndexString~day",
                "rangeRegex": "module.exports.niceIndexString~rangeRegex",
                "sizeParts": "module.exports.niceIndexString~sizeParts"
            }
        },
        "description": "Returns a nice string for the index. If the index is of the form\n1d-2345 then just that string is returned (there's not nice way to put\nit), but if it represents a day, month, or year (e.g. 2015-07) then a\nnice string like \"July\" will be returned. It's also possible to pass in\nthe format of the reply for these types of strings. See moment's format\nnaming conventions:\nhttp://momentjs.com/docs/#/displaying/format/",
        "name": "niceIndexString",
        "longname": "module.exports.niceIndexString",
        "kind": "function",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5445,
                5446
            ],
            "filename": "util.js",
            "lineno": 138,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009984",
                "name": "t"
            }
        },
        "undocumented": true,
        "name": "t",
        "longname": "module.exports.niceIndexString~t",
        "kind": "member",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5463,
                5487
            ],
            "filename": "util.js",
            "lineno": 140,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100009987",
                "name": "parts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "parts",
        "longname": "module.exports.niceIndexString~parts",
        "kind": "constant",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5735,
                5764
            ],
            "filename": "util.js",
            "lineno": 146,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100010038",
                "name": "year",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "year",
        "longname": "module.exports.niceIndexString~year",
        "kind": "constant",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5792,
                5822
            ],
            "filename": "util.js",
            "lineno": 147,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100010047",
                "name": "month",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "month",
        "longname": "module.exports.niceIndexString~month",
        "kind": "constant",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5850,
                5878
            ],
            "filename": "util.js",
            "lineno": 148,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100010056",
                "name": "day",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "day",
        "longname": "module.exports.niceIndexString~day",
        "kind": "constant",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5900,
                5938
            ],
            "filename": "util.js",
            "lineno": 149,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100010065",
                "name": "t",
                "type": "CallExpression",
                "funcscope": "module.exports.niceIndexString",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "t",
        "longname": "module.exports.niceIndexString~t",
        "kind": "member",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6216,
                6247
            ],
            "filename": "util.js",
            "lineno": 160,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100010097",
                "name": "rangeRegex",
                "type": "Literal",
                "value": "<RegExp /([0-9]+)([smhd])/>"
            }
        },
        "undocumented": true,
        "name": "rangeRegex",
        "longname": "module.exports.niceIndexString~rangeRegex",
        "kind": "constant",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6271,
                6308
            ],
            "filename": "util.js",
            "lineno": 161,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100010101",
                "name": "sizeParts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sizeParts",
        "longname": "module.exports.niceIndexString~sizeParts",
        "kind": "constant",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6603,
                6632
            ],
            "filename": "util.js",
            "lineno": 167,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100010159",
                "name": "year",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "year",
        "longname": "module.exports.niceIndexString~year",
        "kind": "constant",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6660,
                6690
            ],
            "filename": "util.js",
            "lineno": 168,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100010168",
                "name": "month",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "month",
        "longname": "module.exports.niceIndexString~month",
        "kind": "constant",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6712,
                6745
            ],
            "filename": "util.js",
            "lineno": 169,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100010177",
                "name": "t",
                "type": "CallExpression",
                "funcscope": "module.exports.niceIndexString",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "t",
        "longname": "module.exports.niceIndexString~t",
        "kind": "member",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7014,
                7029
            ],
            "filename": "util.js",
            "lineno": 179,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100010208",
                "name": "year",
                "type": "MemberExpression",
                "value": "parts[0]"
            }
        },
        "undocumented": true,
        "name": "year",
        "longname": "module.exports.niceIndexString~year",
        "kind": "constant",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7047,
                7069
            ],
            "filename": "util.js",
            "lineno": 180,
            "path": "/Users/pmurphy/Code/pond/src",
            "code": {
                "id": "astnode100010214",
                "name": "t",
                "type": "CallExpression",
                "funcscope": "module.exports.niceIndexString",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "t",
        "longname": "module.exports.niceIndexString~t",
        "kind": "member",
        "memberof": "module.exports.niceIndexString",
        "scope": "inner"
    },
    {
        "kind": "package",
        "longname": "package:undefined",
        "files": [
            "/Users/pmurphy/Code/pond/src/aggregator.js",
            "/Users/pmurphy/Code/pond/src/binner.js",
            "/Users/pmurphy/Code/pond/src/collection.js",
            "/Users/pmurphy/Code/pond/src/collector.js",
            "/Users/pmurphy/Code/pond/src/converter.js",
            "/Users/pmurphy/Code/pond/src/event.js",
            "/Users/pmurphy/Code/pond/src/functions.js",
            "/Users/pmurphy/Code/pond/src/grouper.js",
            "/Users/pmurphy/Code/pond/src/in.js",
            "/Users/pmurphy/Code/pond/src/index.js",
            "/Users/pmurphy/Code/pond/src/observable.js",
            "/Users/pmurphy/Code/pond/src/offset.js",
            "/Users/pmurphy/Code/pond/src/out.js",
            "/Users/pmurphy/Code/pond/src/pipeline.js",
            "/Users/pmurphy/Code/pond/src/processor.js",
            "/Users/pmurphy/Code/pond/src/range.js",
            "/Users/pmurphy/Code/pond/src/series.js",
            "/Users/pmurphy/Code/pond/src/util.js"
        ]
    }
]
